{
    "sourceFile": "src/layouts/Dashboard/Header/index.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1744114863448,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1744114863448,
            "name": "Commit-0",
            "content": "import { Avatar, IconButton, Menu, MenuItem, Typography } from \"@mui/material\";\r\n\r\nimport { Box } from \"@mui/material\";\r\n\r\n\r\nimport { useContext, useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport SettingsIcon from \"@mui/icons-material/Settings\";\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport ConfirmationDialog from \"../../../components/confirmDialog\";\r\nimport { AuthContext } from \"../../../Context/AuthContext\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Header = () => {\r\n    const navigate = useNavigate()\r\n    const { user, setUser } = useContext(AuthContext);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [confirmationDialog, setConfirmationDialog] = useState(false)\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const location = useLocation();\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <ConfirmationDialog\r\n                open={confirmationDialog}\r\n                onClose={() => setConfirmationDialog(false)}\r\n                message={\"Are you sure you want to logout?\"}\r\n                action={async () => {\r\n                    setConfirmationDialog(false);\r\n                    await new Promise((resolve) => {\r\n                        localStorage.clear();\r\n                        setUser('')\r\n                        resolve();\r\n                    });\r\n                    navigate('/');\r\n                }}\r\n            />\r\n\r\n\r\n            <Box\r\n                sx={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"space-between\",\r\n                    bgcolor: '#FAFAFA',\r\n                    px: 3,\r\n                    py: 1,\r\n                    boxShadow: \"0px 4px 8px 0px #9B9B9B1A\",\r\n                }}\r\n            >\r\n             \r\n                <Box display={'flex'} alignItems={'center'} gap={2} >\r\n                    {location?.pathname != '/' ? <> <Typography variant=\"h6\" sx={{ color: '#0052a8',fontWeight:'bold' }}>IClinic</Typography>\r\n                        <Box sx={{ border: '0.5px solid #434343', height: \"30px\" }}></Box>\r\n                        <Typography variant=\"h6\" sx={{ color: 'black', fontSize: '22px', fontWeight: 700 }}>\r\n                            {location?.pathname\r\n                                ?.split(\"/\")\r\n                                .filter((segment, index, arr) => index !== arr.length - 1 || !/^[a-f0-9]{24}$/i.test(segment)) // Remove if last segment is a MongoDB-like ObjectId\r\n                                .join(\" \")\r\n                                .replace(/-/g, \" \")\r\n                                .replace(/\\b\\w/g, (char) => char.toUpperCase())}\r\n                        </Typography>\r\n                    </> : <Typography sx={{ color: 'black', fontSize: '22px', fontWeight: 700 }}>Dashboard</Typography>}\r\n                </Box>\r\n                <Box sx={{ display: \"flex\", alignItems: \"center\", gap: \"8px\" }}>\r\n\r\n                    <IconButton onClick={handleClick} sx={{\r\n\r\n                        background: \"none\", \":active\": {\r\n                            outline: 'none',\r\n                            background: \"none !important\"\r\n                        }\r\n                        , \":hover\": {\r\n                            outline: 'none',\r\n                            background: \"none !important\"\r\n                        }\r\n                        , \":focus\": {\r\n                            outline: 'none',\r\n                            background: \"none\"\r\n                        }\r\n                    }}>\r\n                        &nbsp;&nbsp;\r\n                        <Avatar className=\"avatar-image\" alt={user?.first_name} sx={{ width: 35, height: 35 }} src={'asdas'} />\r\n                        &nbsp;&nbsp;<span style={{ fontSize: '15px', fontWeight: 'bold' }}>{user?.first_name}</span>\r\n                    </IconButton>\r\n                    <Menu\r\n                        id=\"basic-menu\"\r\n                        anchorEl={anchorEl}\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                        MenuListProps={{\r\n                            'aria-labelledby': 'basic-button',\r\n                        }}\r\n                        sx={{\r\n                            '.MuiPaper-root': {\r\n                                width: '150px'\r\n                            }\r\n                        }}\r\n                    >\r\n                        <MenuItem onClick={() => { setAnchorEl(false); navigate('/profile') }}> <SettingsIcon /> &nbsp; Profile</MenuItem>\r\n                        <MenuItem onClick={() => setConfirmationDialog(true)}> <LogoutIcon /> &nbsp;   Logout</MenuItem>\r\n                    </Menu>\r\n\r\n\r\n\r\n                </Box>\r\n            </Box>\r\n\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n"
        }
    ]
}