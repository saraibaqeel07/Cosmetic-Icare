{
    "sourceFile": "src/layouts/Dashboard/Pages/Patients.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 11,
            "patches": [
                {
                    "date": 1744117217682,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1744117235588,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -276,9 +276,9 @@\n                     Patients\r\n                 </Typography>\r\n                         <PrimaryButton onClick={() => navigate('/create-patient')} title={\"Create\"} />\r\n                     </Box>\r\n-                    {<DataTable data={data} columns={columns} />}\r\n+                    {<DataTable loading={tableLoader} data={data} columns={columns} />}\r\n                 </Box>\r\n             </Paper>\r\n         </div>\r\n     )\r\n"
                },
                {
                    "date": 1744117280745,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,8 +47,11 @@\n             const data = await ApiServices.getPatients(params);\r\n \r\n \r\n             setData(data?.data?.patients)\r\n+            if(data?.data?.patients?.length >0){\r\n+                setTableLoader(false)\r\n+            }\r\n \r\n \r\n         } catch (error) {\r\n             console.error(\"Error fetching location:\", error);\r\n"
                },
                {
                    "date": 1744117294169,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,11 +47,9 @@\n             const data = await ApiServices.getPatients(params);\r\n \r\n \r\n             setData(data?.data?.patients)\r\n-            if(data?.data?.patients?.length >0){\r\n-                setTableLoader(false)\r\n-            }\r\n+           \r\n \r\n \r\n         } catch (error) {\r\n             console.error(\"Error fetching location:\", error);\r\n@@ -274,11 +272,11 @@\n             />\r\n             <Paper sx={{ width: \"100%\", overflow: \"hidden\", boxShadow: 'none', backgroundColor: '#ffff !important', borderRadius: '12px' }}>\r\n                 <Box sx={{ p: 2 }}>\r\n                     <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n-                    <Typography variant=\"h4\" sx={{ mt: 4,mb:4, fontWeight: 600 }}>\r\n-                    Patients\r\n-                </Typography>\r\n+                        <Typography variant=\"h4\" sx={{ mt: 4, mb: 4, fontWeight: 600 }}>\r\n+                            Patients\r\n+                        </Typography>\r\n                         <PrimaryButton onClick={() => navigate('/create-patient')} title={\"Create\"} />\r\n                     </Box>\r\n                     {<DataTable loading={tableLoader} data={data} columns={columns} />}\r\n                 </Box>\r\n"
                },
                {
                    "date": 1744117299527,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,8 +53,11 @@\n \r\n         } catch (error) {\r\n             console.error(\"Error fetching location:\", error);\r\n         }\r\n+        finally{\r\n+            setTableLoader(false)\r\n+        }\r\n     };\r\n     // // Dummy data\r\n     // const data = [\r\n     //     { id: 1, firstName: \"John\", lastName: \"Doe\", age: 30, city: \"New York\" },\r\n"
                },
                {
                    "date": 1744118122214,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -275,9 +275,9 @@\n             />\r\n             <Paper sx={{ width: \"100%\", overflow: \"hidden\", boxShadow: 'none', backgroundColor: '#ffff !important', borderRadius: '12px' }}>\r\n                 <Box sx={{ p: 2 }}>\r\n                     <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n-                        <Typography variant=\"h4\" sx={{ mt: 4, mb: 4, fontWeight: 600 }}>\r\n+                        <Typography variant=\"h5\" sx={{ mt: 4, mb: 4, fontWeight: 600 }}>\r\n                             Patients\r\n                         </Typography>\r\n                         <PrimaryButton onClick={() => navigate('/create-patient')} title={\"Create\"} />\r\n                     </Box>\r\n"
                },
                {
                    "date": 1744132911201,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,9 +80,9 @@\n \r\n         },\r\n         {\r\n             header: \"Name\",\r\n-            accessorKey: \"name\",\r\n+            accessorKey: \"first_name\",\r\n             cell: ({ row }) => (\r\n                 <Box variant=\"contained\" color=\"primary\" sx={{ cursor: 'pointer', display: 'flex' }} >\r\n \r\n                     {row?.original?.first_name + ' ' + row?.original?.last_name}\r\n"
                },
                {
                    "date": 1744132978992,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,9 +80,10 @@\n \r\n         },\r\n         {\r\n             header: \"Name\",\r\n-            accessorKey: \"first_name\",\r\n+            accessorKey: \"name\",\r\n+            accessorFn: (row) => `${row.firstname} ${row.lastname}`,\r\n             cell: ({ row }) => (\r\n                 <Box variant=\"contained\" color=\"primary\" sx={{ cursor: 'pointer', display: 'flex' }} >\r\n \r\n                     {row?.original?.first_name + ' ' + row?.original?.last_name}\r\n"
                },
                {
                    "date": 1744133007063,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,291 @@\n+import { Box, Chip, IconButton, Paper, Typography } from \"@mui/material\"\r\n+import DataTable from \"../../../components/DataTable\"\r\n+import { useEffect, useState } from \"react\"\r\n+import NorthEastIcon from '@mui/icons-material/NorthEast';\r\n+import { PrimaryButton } from \"../../../components/buttons\";\r\n+import { useNavigate } from \"react-router-dom\";\r\n+import ApiServices from \"../../../services/Apis\";\r\n+import moment from \"moment\";\r\n+import LocationOnOutlinedIcon from '@mui/icons-material/LocationOnOutlined';\r\n+import DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\r\n+import DriveFileRenameOutlineIcon from '@mui/icons-material/DriveFileRenameOutline';\r\n+import ConfirmationDialog from \"../../../components/confirmDialog\";\r\n+import { showErrorToast, showPromiseToast } from \"../../../components/Toaster\";\r\n+import SimpleDialog from \"../../../components/dialog\";\r\n+import { Grid } from \"rsuite\";\r\n+import InputField from \"../../../components/input\";\r\n+import { useForm } from \"react-hook-form\";\r\n+import SelectField from \"../../../components/select\";\r\n+\r\n+\r\n+const Patients = () => {\r\n+    const [active, setActive] = useState(false)\r\n+    const [tableLoader, setTableLoader] = useState(true)\r\n+    const navigate = useNavigate()\r\n+    const [status, setStatus] = useState(null)\r\n+    const [data, setData] = useState([])\r\n+    const [confirmationDialog, setConfirmationDialog] = useState(false)\r\n+    const [selectedRow, setSelectedRow] = useState(null)\r\n+    const [open, setOpen] = useState(false)\r\n+    const {\r\n+        register: register2,\r\n+        handleSubmit: handleSubmit2,\r\n+        setValue: setValue2,\r\n+        getValues: getValues2,\r\n+        reset,\r\n+        formState: { errors: errors2 },\r\n+\r\n+    } = useForm();\r\n+\r\n+    const getData = async () => {\r\n+        try {\r\n+            let params = {\r\n+                page: 1,\r\n+                limit: 999\r\n+            };\r\n+\r\n+            const data = await ApiServices.getPatients(params);\r\n+\r\n+\r\n+            setData(data?.data?.patients)\r\n+           \r\n+\r\n+\r\n+        } catch (error) {\r\n+            console.error(\"Error fetching location:\", error);\r\n+        }\r\n+        finally{\r\n+            setTableLoader(false)\r\n+        }\r\n+    };\r\n+    // // Dummy data\r\n+    // const data = [\r\n+    //     { id: 1, firstName: \"John\", lastName: \"Doe\", age: 30, city: \"New York\" },\r\n+    //     { id: 2, firstName: \"Jane\", lastName: \"Smith\", age: 25, city: \"Los Angeles\" },\r\n+    //     { id: 3, firstName: \"Bob\", lastName: \"Johnson\", age: 35, city: \"Chicago\" },\r\n+    //     { id: 4, firstName: \"Alice\", lastName: \"Brown\", age: 28, city: \"Houston\" },\r\n+    //     { id: 5, firstName: \"Charlie\", lastName: \"Davis\", age: 42, city: \"Phoenix\" },\r\n+    //     { id: 6, firstName: \"Eva\", lastName: \"Wilson\", age: 31, city: \"Philadelphia\" },\r\n+    //     { id: 7, firstName: \"Frank\", lastName: \"Moore\", age: 29, city: \"San Antonio\" },\r\n+    //     { id: 8, firstName: \"Grace\", lastName: \"Taylor\", age: 36, city: \"San Diego\" },\r\n+    //     { id: 9, firstName: \"Henry\", lastName: \"Anderson\", age: 41, city: \"Dallas\" },\r\n+    //     { id: 10, firstName: \"Ivy\", lastName: \"Thomas\", age: 27, city: \"San Jose\" },\r\n+    // ]\r\n+\r\n+    // Column definitions with sorting\r\n+    const columns = [\r\n+        {\r\n+            header: \"Title\",\r\n+            accessorKey: \"title\",\r\n+\r\n+        },\r\n+        {\r\n+            header: \"Name\",\r\n+            accessorKey: \"first_name\",\r\n+            cell: ({ row }) => (\r\n+                <Box variant=\"contained\" color=\"primary\" sx={{ cursor: 'pointer', display: 'flex' }} >\r\n+\r\n+                    {row?.original?.first_name + ' ' + row?.original?.last_name}\r\n+                </Box>\r\n+            ),\r\n+        },\r\n+        {\r\n+            header: \"Email\",\r\n+            accessorKey: \"email\",\r\n+\r\n+        },\r\n+\r\n+        {\r\n+            header: \"Phone\",\r\n+            accessorKey: \"phone\",\r\n+\r\n+        }, {\r\n+            header: \"Address\",\r\n+            accessorKey: \"address\",\r\n+\r\n+        },\r\n+        {\r\n+            header: \"Status\",\r\n+            accessorKey: \"status\",\r\n+            cell: ({ row }) => (\r\n+\r\n+                <Box variant=\"contained\" color=\"primary\" sx={{ cursor: 'pointer', display: 'flex', gap: 2 }} >\r\n+                    <IconButton onClick={() => { setSelectedRow(row?.original); setOpen(true) }}>\r\n+                        <Chip\r\n+\r\n+                            label={row?.original?.in_active ? 'Inactive' : 'Active'}\r\n+                            sx={{\r\n+                                backgroundColor: row?.original?.in_active ? '#f32929' : '#3ccd3c', // Change background color\r\n+                                color: 'white', // Keep text color white\r\n+                                fontSize: '12px',\r\n+                                height: '24px',\r\n+                            }}\r\n+                        />\r\n+                    </IconButton>\r\n+\r\n+\r\n+                </Box>\r\n+            ),\r\n+        },\r\n+        {\r\n+            header: \"Actions\",\r\n+            cell: ({ row }) => (\r\n+\r\n+                <Box variant=\"contained\" color=\"primary\" sx={{ cursor: 'pointer', display: 'flex', gap: 2 }} >\r\n+                    <IconButton onClick={() => { navigate(`/patient-detail/${row?.original?._id}`) }}>\r\n+                        <NorthEastIcon sx={{ fontSize: '16px' }} />\r\n+                    </IconButton>\r\n+                    <IconButton onClick={() => navigate(`/update-patient/${row?.original?._id}`)}>\r\n+                        <DriveFileRenameOutlineIcon sx={{ fontSize: '16px' }} />\r\n+                    </IconButton>\r\n+\r\n+                    <IconButton onClick={() => { setSelectedRow(row?.original); setConfirmationDialog(true) }}>\r\n+                        <DeleteOutlineIcon sx={{ fontSize: '16px' }} />\r\n+                    </IconButton>\r\n+                </Box>\r\n+            ),\r\n+        },\r\n+\r\n+    ]\r\n+\r\n+    const HandleDelete = async () => {\r\n+\r\n+        try {\r\n+            let obj = {\r\n+                id: selectedRow?._id\r\n+            };\r\n+\r\n+            const promise = ApiServices.DeletePatient(obj);\r\n+\r\n+            // Handle the API response properly\r\n+            const response = await promise;\r\n+            console.log(response);\r\n+\r\n+            showPromiseToast(\r\n+                promise,\r\n+                \"Saving...\",\r\n+                \"Added Successfully\",\r\n+                \"Something Went Wrong\"\r\n+            );\r\n+\r\n+\r\n+\r\n+        } catch (error) {\r\n+            console.log(error);\r\n+            showErrorToast(error)\r\n+        }\r\n+        finally {\r\n+            getData()\r\n+        }\r\n+\r\n+    };\r\n+    const UpdateStaff = async () => {\r\n+\r\n+        try {\r\n+            let obj = {\r\n+                id: selectedRow?._id,\r\n+                in_active: status?.id\r\n+            };\r\n+\r\n+            const promise = ApiServices.UpdateStaff(obj);\r\n+\r\n+            // Handle the API response properly\r\n+            const response = await promise;\r\n+            console.log(response);\r\n+\r\n+            showPromiseToast(\r\n+                promise,\r\n+                \"Saving...\",\r\n+                \"Added Successfully\",\r\n+                \"Something Went Wrong\"\r\n+            );\r\n+\r\n+            setOpen(false)\r\n+\r\n+        } catch (error) {\r\n+            console.log(error);\r\n+        }\r\n+        finally {\r\n+            getData()\r\n+        }\r\n+\r\n+    };\r\n+    useEffect(() => {\r\n+        getData()\r\n+\r\n+    }, [])\r\n+\r\n+    return (\r\n+        <div>\r\n+            <SimpleDialog\r\n+                open={open}\r\n+                onClose={() => setOpen(false)}\r\n+                width={'300px'}\r\n+                title={'Update Status'}\r\n+            >\r\n+                <Box component=\"form\" onSubmit={handleSubmit2(UpdateStaff)}>\r\n+                    <Grid container >\r\n+                        <Grid item xs={12} sm={12} mt={2}>\r\n+\r\n+                            <Typography variant=\"p\" sx={{ mt: 1, fontWeight: 500 }}>\r\n+                                Type:\r\n+                            </Typography>\r\n+                            <SelectField\r\n+                                size={'small'}\r\n+                                newLabel={'Select Type'}\r\n+                                fullWidth={true}\r\n+                                options={[{ id: false, name: 'Active' }, { id: true, name: 'InActive' }]}\r\n+                                selected={status}\r\n+                                onSelect={(value) => {\r\n+                                    setStatus(value)\r\n+                                    getData(value)\r\n+\r\n+                                }}\r\n+                            // error={errors2?.type?.message}\r\n+                            // register={register2(\"type\", {\r\n+                            //     required: 'Please select type.',\r\n+                            // })}\r\n+                            />\r\n+\r\n+                        </Grid>\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+                        <Box sx={{ display: 'flex', justifyContent: 'center' }} >\r\n+\r\n+                            <PrimaryButton bgcolor={'black'} title=\"Submit\" type=\"submit\" />\r\n+\r\n+                        </Box>\r\n+\r\n+                    </Grid>\r\n+                </Box>\r\n+            </SimpleDialog>\r\n+            <ConfirmationDialog\r\n+                open={confirmationDialog}\r\n+                onClose={() => setConfirmationDialog(false)}\r\n+                message={\"Are you sure you want to delete?\"}\r\n+                action={async () => {\r\n+                    setConfirmationDialog(false);\r\n+                    HandleDelete()\r\n+\r\n+                }}\r\n+            />\r\n+            <Paper sx={{ width: \"100%\", overflow: \"hidden\", boxShadow: 'none', backgroundColor: '#ffff !important', borderRadius: '12px' }}>\r\n+                <Box sx={{ p: 2 }}>\r\n+                    <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n+                        <Typography variant=\"h5\" sx={{ mt: 4, mb: 4, fontWeight: 600 }}>\r\n+                            Patients\r\n+                        </Typography>\r\n+                        <PrimaryButton onClick={() => navigate('/create-patient')} title={\"Create\"} />\r\n+                    </Box>\r\n+                    {<DataTable loading={tableLoader} data={data} columns={columns} />}\r\n+                </Box>\r\n+            </Paper>\r\n+        </div>\r\n+    )\r\n+}\r\n+\r\n+export default Patients\r\n"
                },
                {
                    "date": 1744133249481,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,301 +80,9 @@\n \r\n         },\r\n         {\r\n             header: \"Name\",\r\n-            accessorKey: \"first_name\",\r\n-            cell: ({ row }) => (\r\n-                <Box variant=\"contained\" color=\"primary\" sx={{ cursor: 'pointer', display: 'flex' }} >\r\n-\r\n-                    {row?.original?.first_name + ' ' + row?.original?.last_name}\r\n-                </Box>\r\n-            ),\r\n-        },\r\n-        {\r\n-            header: \"Email\",\r\n-            accessorKey: \"email\",\r\n-\r\n-        },\r\n-\r\n-        {\r\n-            header: \"Phone\",\r\n-            accessorKey: \"phone\",\r\n-\r\n-        }, {\r\n-            header: \"Address\",\r\n-            accessorKey: \"address\",\r\n-\r\n-        },\r\n-        {\r\n-            header: \"Status\",\r\n-            accessorKey: \"status\",\r\n-            cell: ({ row }) => (\r\n-\r\n-                <Box variant=\"contained\" color=\"primary\" sx={{ cursor: 'pointer', display: 'flex', gap: 2 }} >\r\n-                    <IconButton onClick={() => { setSelectedRow(row?.original); setOpen(true) }}>\r\n-                        <Chip\r\n-\r\n-                            label={row?.original?.in_active ? 'Inactive' : 'Active'}\r\n-                            sx={{\r\n-                                backgroundColor: row?.original?.in_active ? '#f32929' : '#3ccd3c', // Change background color\r\n-                                color: 'white', // Keep text color white\r\n-                                fontSize: '12px',\r\n-                                height: '24px',\r\n-                            }}\r\n-                        />\r\n-                    </IconButton>\r\n-\r\n-\r\n-                </Box>\r\n-            ),\r\n-        },\r\n-        {\r\n-            header: \"Actions\",\r\n-            cell: ({ row }) => (\r\n-\r\n-                <Box variant=\"contained\" color=\"primary\" sx={{ cursor: 'pointer', display: 'flex', gap: 2 }} >\r\n-                    <IconButton onClick={() => { navigate(`/patient-detail/${row?.original?._id}`) }}>\r\n-                        <NorthEastIcon sx={{ fontSize: '16px' }} />\r\n-                    </IconButton>\r\n-                    <IconButton onClick={() => navigate(`/update-patient/${row?.original?._id}`)}>\r\n-                        <DriveFileRenameOutlineIcon sx={{ fontSize: '16px' }} />\r\n-                    </IconButton>\r\n-\r\n-                    <IconButton onClick={() => { setSelectedRow(row?.original); setConfirmationDialog(true) }}>\r\n-                        <DeleteOutlineIcon sx={{ fontSize: '16px' }} />\r\n-                    </IconButton>\r\n-                </Box>\r\n-            ),\r\n-        },\r\n-\r\n-    ]\r\n-\r\n-    const HandleDelete = async () => {\r\n-\r\n-        try {\r\n-            let obj = {\r\n-                id: selectedRow?._id\r\n-            };\r\n-\r\n-            const promise = ApiServices.DeletePatient(obj);\r\n-\r\n-            // Handle the API response properly\r\n-            const response = await promise;\r\n-            console.log(response);\r\n-\r\n-            showPromiseToast(\r\n-                promise,\r\n-                \"Saving...\",\r\n-                \"Added Successfully\",\r\n-                \"Something Went Wrong\"\r\n-            );\r\n-\r\n-\r\n-\r\n-        } catch (error) {\r\n-            console.log(error);\r\n-            showErrorToast(error)\r\n-        }\r\n-        finally {\r\n-            getData()\r\n-        }\r\n-\r\n-    };\r\n-    const UpdateStaff = async () => {\r\n-\r\n-        try {\r\n-            let obj = {\r\n-                id: selectedRow?._id,\r\n-                in_active: status?.id\r\n-            };\r\n-\r\n-            const promise = ApiServices.UpdateStaff(obj);\r\n-\r\n-            // Handle the API response properly\r\n-            const response = await promise;\r\n-            console.log(response);\r\n-\r\n-            showPromiseToast(\r\n-                promise,\r\n-                \"Saving...\",\r\n-                \"Added Successfully\",\r\n-                \"Something Went Wrong\"\r\n-            );\r\n-\r\n-            setOpen(false)\r\n-\r\n-        } catch (error) {\r\n-            console.log(error);\r\n-        }\r\n-        finally {\r\n-            getData()\r\n-        }\r\n-\r\n-    };\r\n-    useEffect(() => {\r\n-        getData()\r\n-\r\n-    }, [])\r\n-\r\n-    return (\r\n-        <div>\r\n-            <SimpleDialog\r\n-                open={open}\r\n-                onClose={() => setOpen(false)}\r\n-                width={'300px'}\r\n-                title={'Update Status'}\r\n-            >\r\n-                <Box component=\"form\" onSubmit={handleSubmit2(UpdateStaff)}>\r\n-                    <Grid container >\r\n-                        <Grid item xs={12} sm={12} mt={2}>\r\n-\r\n-                            <Typography variant=\"p\" sx={{ mt: 1, fontWeight: 500 }}>\r\n-                                Type:\r\n-                            </Typography>\r\n-                            <SelectField\r\n-                                size={'small'}\r\n-                                newLabel={'Select Type'}\r\n-                                fullWidth={true}\r\n-                                options={[{ id: false, name: 'Active' }, { id: true, name: 'InActive' }]}\r\n-                                selected={status}\r\n-                                onSelect={(value) => {\r\n-                                    setStatus(value)\r\n-                                    getData(value)\r\n-\r\n-                                }}\r\n-                            // error={errors2?.type?.message}\r\n-                            // register={register2(\"type\", {\r\n-                            //     required: 'Please select type.',\r\n-                            // })}\r\n-                            />\r\n-\r\n-                        </Grid>\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-                        <Box sx={{ display: 'flex', justifyContent: 'center' }} >\r\n-\r\n-                            <PrimaryButton bgcolor={'black'} title=\"Submit\" type=\"submit\" />\r\n-\r\n-                        </Box>\r\n-\r\n-                    </Grid>\r\n-                </Box>\r\n-            </SimpleDialog>\r\n-            <ConfirmationDialog\r\n-                open={confirmationDialog}\r\n-                onClose={() => setConfirmationDialog(false)}\r\n-                message={\"Are you sure you want to delete?\"}\r\n-                action={async () => {\r\n-                    setConfirmationDialog(false);\r\n-                    HandleDelete()\r\n-\r\n-                }}\r\n-            />\r\n-            <Paper sx={{ width: \"100%\", overflow: \"hidden\", boxShadow: 'none', backgroundColor: '#ffff !important', borderRadius: '12px' }}>\r\n-                <Box sx={{ p: 2 }}>\r\n-                    <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n-                        <Typography variant=\"h5\" sx={{ mt: 4, mb: 4, fontWeight: 600 }}>\r\n-                            Patients\r\n-                        </Typography>\r\n-                        <PrimaryButton onClick={() => navigate('/create-patient')} title={\"Create\"} />\r\n-                    </Box>\r\n-                    {<DataTable loading={tableLoader} data={data} columns={columns} />}\r\n-                </Box>\r\n-            </Paper>\r\n-        </div>\r\n-    )\r\n-}\r\n-\r\n-export default Patients\r\n-import { Box, Chip, IconButton, Paper, Typography } from \"@mui/material\"\r\n-import DataTable from \"../../../components/DataTable\"\r\n-import { useEffect, useState } from \"react\"\r\n-import NorthEastIcon from '@mui/icons-material/NorthEast';\r\n-import { PrimaryButton } from \"../../../components/buttons\";\r\n-import { useNavigate } from \"react-router-dom\";\r\n-import ApiServices from \"../../../services/Apis\";\r\n-import moment from \"moment\";\r\n-import LocationOnOutlinedIcon from '@mui/icons-material/LocationOnOutlined';\r\n-import DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\r\n-import DriveFileRenameOutlineIcon from '@mui/icons-material/DriveFileRenameOutline';\r\n-import ConfirmationDialog from \"../../../components/confirmDialog\";\r\n-import { showErrorToast, showPromiseToast } from \"../../../components/Toaster\";\r\n-import SimpleDialog from \"../../../components/dialog\";\r\n-import { Grid } from \"rsuite\";\r\n-import InputField from \"../../../components/input\";\r\n-import { useForm } from \"react-hook-form\";\r\n-import SelectField from \"../../../components/select\";\r\n-\r\n-\r\n-const Patients = () => {\r\n-    const [active, setActive] = useState(false)\r\n-    const [tableLoader, setTableLoader] = useState(true)\r\n-    const navigate = useNavigate()\r\n-    const [status, setStatus] = useState(null)\r\n-    const [data, setData] = useState([])\r\n-    const [confirmationDialog, setConfirmationDialog] = useState(false)\r\n-    const [selectedRow, setSelectedRow] = useState(null)\r\n-    const [open, setOpen] = useState(false)\r\n-    const {\r\n-        register: register2,\r\n-        handleSubmit: handleSubmit2,\r\n-        setValue: setValue2,\r\n-        getValues: getValues2,\r\n-        reset,\r\n-        formState: { errors: errors2 },\r\n-\r\n-    } = useForm();\r\n-\r\n-    const getData = async () => {\r\n-        try {\r\n-            let params = {\r\n-                page: 1,\r\n-                limit: 999\r\n-            };\r\n-\r\n-            const data = await ApiServices.getPatients(params);\r\n-\r\n-\r\n-            setData(data?.data?.patients)\r\n-           \r\n-\r\n-\r\n-        } catch (error) {\r\n-            console.error(\"Error fetching location:\", error);\r\n-        }\r\n-        finally{\r\n-            setTableLoader(false)\r\n-        }\r\n-    };\r\n-    // // Dummy data\r\n-    // const data = [\r\n-    //     { id: 1, firstName: \"John\", lastName: \"Doe\", age: 30, city: \"New York\" },\r\n-    //     { id: 2, firstName: \"Jane\", lastName: \"Smith\", age: 25, city: \"Los Angeles\" },\r\n-    //     { id: 3, firstName: \"Bob\", lastName: \"Johnson\", age: 35, city: \"Chicago\" },\r\n-    //     { id: 4, firstName: \"Alice\", lastName: \"Brown\", age: 28, city: \"Houston\" },\r\n-    //     { id: 5, firstName: \"Charlie\", lastName: \"Davis\", age: 42, city: \"Phoenix\" },\r\n-    //     { id: 6, firstName: \"Eva\", lastName: \"Wilson\", age: 31, city: \"Philadelphia\" },\r\n-    //     { id: 7, firstName: \"Frank\", lastName: \"Moore\", age: 29, city: \"San Antonio\" },\r\n-    //     { id: 8, firstName: \"Grace\", lastName: \"Taylor\", age: 36, city: \"San Diego\" },\r\n-    //     { id: 9, firstName: \"Henry\", lastName: \"Anderson\", age: 41, city: \"Dallas\" },\r\n-    //     { id: 10, firstName: \"Ivy\", lastName: \"Thomas\", age: 27, city: \"San Jose\" },\r\n-    // ]\r\n-\r\n-    // Column definitions with sorting\r\n-    const columns = [\r\n-        {\r\n-            header: \"Title\",\r\n-            accessorKey: \"title\",\r\n-\r\n-        },\r\n-        {\r\n-            header: \"Name\",\r\n             accessorKey: \"name\",\r\n-            accessorFn: (row) => `${row.firstname} ${row.lastname}`,\r\n             cell: ({ row }) => (\r\n                 <Box variant=\"contained\" color=\"primary\" sx={{ cursor: 'pointer', display: 'flex' }} >\r\n \r\n                     {row?.original?.first_name + ' ' + row?.original?.last_name}\r\n"
                },
                {
                    "date": 1744133305386,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,8 +81,9 @@\n         },\r\n         {\r\n             header: \"Name\",\r\n             accessorKey: \"name\",\r\n+            accessorFn: (row) => `${row.first_name} ${row.last_name}`,\r\n             cell: ({ row }) => (\r\n                 <Box variant=\"contained\" color=\"primary\" sx={{ cursor: 'pointer', display: 'flex' }} >\r\n \r\n                     {row?.original?.first_name + ' ' + row?.original?.last_name}\r\n"
                },
                {
                    "date": 1744197173031,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -281,9 +281,9 @@\n                             Patients\r\n                         </Typography>\r\n                         <PrimaryButton onClick={() => navigate('/create-patient')} title={\"Create\"} />\r\n                     </Box>\r\n-                    {<DataTable loading={tableLoader} data={data} columns={columns} />}\r\n+                    {<DataTable alphabets={true} loading={tableLoader} data={data} columns={columns} />}\r\n                 </Box>\r\n             </Paper>\r\n         </div>\r\n     )\r\n"
                }
            ],
            "date": 1744117217682,
            "name": "Commit-0",
            "content": "import { Box, Chip, IconButton, Paper, Typography } from \"@mui/material\"\r\nimport DataTable from \"../../../components/DataTable\"\r\nimport { useEffect, useState } from \"react\"\r\nimport NorthEastIcon from '@mui/icons-material/NorthEast';\r\nimport { PrimaryButton } from \"../../../components/buttons\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ApiServices from \"../../../services/Apis\";\r\nimport moment from \"moment\";\r\nimport LocationOnOutlinedIcon from '@mui/icons-material/LocationOnOutlined';\r\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\r\nimport DriveFileRenameOutlineIcon from '@mui/icons-material/DriveFileRenameOutline';\r\nimport ConfirmationDialog from \"../../../components/confirmDialog\";\r\nimport { showErrorToast, showPromiseToast } from \"../../../components/Toaster\";\r\nimport SimpleDialog from \"../../../components/dialog\";\r\nimport { Grid } from \"rsuite\";\r\nimport InputField from \"../../../components/input\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport SelectField from \"../../../components/select\";\r\n\r\n\r\nconst Patients = () => {\r\n    const [active, setActive] = useState(false)\r\n    const [tableLoader, setTableLoader] = useState(true)\r\n    const navigate = useNavigate()\r\n    const [status, setStatus] = useState(null)\r\n    const [data, setData] = useState([])\r\n    const [confirmationDialog, setConfirmationDialog] = useState(false)\r\n    const [selectedRow, setSelectedRow] = useState(null)\r\n    const [open, setOpen] = useState(false)\r\n    const {\r\n        register: register2,\r\n        handleSubmit: handleSubmit2,\r\n        setValue: setValue2,\r\n        getValues: getValues2,\r\n        reset,\r\n        formState: { errors: errors2 },\r\n\r\n    } = useForm();\r\n\r\n    const getData = async () => {\r\n        try {\r\n            let params = {\r\n                page: 1,\r\n                limit: 999\r\n            };\r\n\r\n            const data = await ApiServices.getPatients(params);\r\n\r\n\r\n            setData(data?.data?.patients)\r\n\r\n\r\n        } catch (error) {\r\n            console.error(\"Error fetching location:\", error);\r\n        }\r\n    };\r\n    // // Dummy data\r\n    // const data = [\r\n    //     { id: 1, firstName: \"John\", lastName: \"Doe\", age: 30, city: \"New York\" },\r\n    //     { id: 2, firstName: \"Jane\", lastName: \"Smith\", age: 25, city: \"Los Angeles\" },\r\n    //     { id: 3, firstName: \"Bob\", lastName: \"Johnson\", age: 35, city: \"Chicago\" },\r\n    //     { id: 4, firstName: \"Alice\", lastName: \"Brown\", age: 28, city: \"Houston\" },\r\n    //     { id: 5, firstName: \"Charlie\", lastName: \"Davis\", age: 42, city: \"Phoenix\" },\r\n    //     { id: 6, firstName: \"Eva\", lastName: \"Wilson\", age: 31, city: \"Philadelphia\" },\r\n    //     { id: 7, firstName: \"Frank\", lastName: \"Moore\", age: 29, city: \"San Antonio\" },\r\n    //     { id: 8, firstName: \"Grace\", lastName: \"Taylor\", age: 36, city: \"San Diego\" },\r\n    //     { id: 9, firstName: \"Henry\", lastName: \"Anderson\", age: 41, city: \"Dallas\" },\r\n    //     { id: 10, firstName: \"Ivy\", lastName: \"Thomas\", age: 27, city: \"San Jose\" },\r\n    // ]\r\n\r\n    // Column definitions with sorting\r\n    const columns = [\r\n        {\r\n            header: \"Title\",\r\n            accessorKey: \"title\",\r\n\r\n        },\r\n        {\r\n            header: \"Name\",\r\n            accessorKey: \"name\",\r\n            cell: ({ row }) => (\r\n                <Box variant=\"contained\" color=\"primary\" sx={{ cursor: 'pointer', display: 'flex' }} >\r\n\r\n                    {row?.original?.first_name + ' ' + row?.original?.last_name}\r\n                </Box>\r\n            ),\r\n        },\r\n        {\r\n            header: \"Email\",\r\n            accessorKey: \"email\",\r\n\r\n        },\r\n\r\n        {\r\n            header: \"Phone\",\r\n            accessorKey: \"phone\",\r\n\r\n        }, {\r\n            header: \"Address\",\r\n            accessorKey: \"address\",\r\n\r\n        },\r\n        {\r\n            header: \"Status\",\r\n            accessorKey: \"status\",\r\n            cell: ({ row }) => (\r\n\r\n                <Box variant=\"contained\" color=\"primary\" sx={{ cursor: 'pointer', display: 'flex', gap: 2 }} >\r\n                    <IconButton onClick={() => { setSelectedRow(row?.original); setOpen(true) }}>\r\n                        <Chip\r\n\r\n                            label={row?.original?.in_active ? 'Inactive' : 'Active'}\r\n                            sx={{\r\n                                backgroundColor: row?.original?.in_active ? '#f32929' : '#3ccd3c', // Change background color\r\n                                color: 'white', // Keep text color white\r\n                                fontSize: '12px',\r\n                                height: '24px',\r\n                            }}\r\n                        />\r\n                    </IconButton>\r\n\r\n\r\n                </Box>\r\n            ),\r\n        },\r\n        {\r\n            header: \"Actions\",\r\n            cell: ({ row }) => (\r\n\r\n                <Box variant=\"contained\" color=\"primary\" sx={{ cursor: 'pointer', display: 'flex', gap: 2 }} >\r\n                    <IconButton onClick={() => { navigate(`/patient-detail/${row?.original?._id}`) }}>\r\n                        <NorthEastIcon sx={{ fontSize: '16px' }} />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => navigate(`/update-patient/${row?.original?._id}`)}>\r\n                        <DriveFileRenameOutlineIcon sx={{ fontSize: '16px' }} />\r\n                    </IconButton>\r\n\r\n                    <IconButton onClick={() => { setSelectedRow(row?.original); setConfirmationDialog(true) }}>\r\n                        <DeleteOutlineIcon sx={{ fontSize: '16px' }} />\r\n                    </IconButton>\r\n                </Box>\r\n            ),\r\n        },\r\n\r\n    ]\r\n\r\n    const HandleDelete = async () => {\r\n\r\n        try {\r\n            let obj = {\r\n                id: selectedRow?._id\r\n            };\r\n\r\n            const promise = ApiServices.DeletePatient(obj);\r\n\r\n            // Handle the API response properly\r\n            const response = await promise;\r\n            console.log(response);\r\n\r\n            showPromiseToast(\r\n                promise,\r\n                \"Saving...\",\r\n                \"Added Successfully\",\r\n                \"Something Went Wrong\"\r\n            );\r\n\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            showErrorToast(error)\r\n        }\r\n        finally {\r\n            getData()\r\n        }\r\n\r\n    };\r\n    const UpdateStaff = async () => {\r\n\r\n        try {\r\n            let obj = {\r\n                id: selectedRow?._id,\r\n                in_active: status?.id\r\n            };\r\n\r\n            const promise = ApiServices.UpdateStaff(obj);\r\n\r\n            // Handle the API response properly\r\n            const response = await promise;\r\n            console.log(response);\r\n\r\n            showPromiseToast(\r\n                promise,\r\n                \"Saving...\",\r\n                \"Added Successfully\",\r\n                \"Something Went Wrong\"\r\n            );\r\n\r\n            setOpen(false)\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        finally {\r\n            getData()\r\n        }\r\n\r\n    };\r\n    useEffect(() => {\r\n        getData()\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <SimpleDialog\r\n                open={open}\r\n                onClose={() => setOpen(false)}\r\n                width={'300px'}\r\n                title={'Update Status'}\r\n            >\r\n                <Box component=\"form\" onSubmit={handleSubmit2(UpdateStaff)}>\r\n                    <Grid container >\r\n                        <Grid item xs={12} sm={12} mt={2}>\r\n\r\n                            <Typography variant=\"p\" sx={{ mt: 1, fontWeight: 500 }}>\r\n                                Type:\r\n                            </Typography>\r\n                            <SelectField\r\n                                size={'small'}\r\n                                newLabel={'Select Type'}\r\n                                fullWidth={true}\r\n                                options={[{ id: false, name: 'Active' }, { id: true, name: 'InActive' }]}\r\n                                selected={status}\r\n                                onSelect={(value) => {\r\n                                    setStatus(value)\r\n                                    getData(value)\r\n\r\n                                }}\r\n                            // error={errors2?.type?.message}\r\n                            // register={register2(\"type\", {\r\n                            //     required: 'Please select type.',\r\n                            // })}\r\n                            />\r\n\r\n                        </Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        <Box sx={{ display: 'flex', justifyContent: 'center' }} >\r\n\r\n                            <PrimaryButton bgcolor={'black'} title=\"Submit\" type=\"submit\" />\r\n\r\n                        </Box>\r\n\r\n                    </Grid>\r\n                </Box>\r\n            </SimpleDialog>\r\n            <ConfirmationDialog\r\n                open={confirmationDialog}\r\n                onClose={() => setConfirmationDialog(false)}\r\n                message={\"Are you sure you want to delete?\"}\r\n                action={async () => {\r\n                    setConfirmationDialog(false);\r\n                    HandleDelete()\r\n\r\n                }}\r\n            />\r\n            <Paper sx={{ width: \"100%\", overflow: \"hidden\", boxShadow: 'none', backgroundColor: '#ffff !important', borderRadius: '12px' }}>\r\n                <Box sx={{ p: 2 }}>\r\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                    <Typography variant=\"h4\" sx={{ mt: 4,mb:4, fontWeight: 600 }}>\r\n                    Patients\r\n                </Typography>\r\n                        <PrimaryButton onClick={() => navigate('/create-patient')} title={\"Create\"} />\r\n                    </Box>\r\n                    {<DataTable data={data} columns={columns} />}\r\n                </Box>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Patients\r\n"
        }
    ]
}