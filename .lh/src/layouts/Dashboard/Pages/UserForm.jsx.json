{
    "sourceFile": "src/layouts/Dashboard/Pages/UserForm.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 115,
            "patches": [
                {
                    "date": 1743296172921,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1743296378376,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -741,9 +741,9 @@\n \r\n     return (\r\n         <div>\r\n \r\n-            <Paper sx={{ width: \"100%\", overflow: \"hidden\", boxShadow: 'none', backgroundColor: '#eff6ff', borderRadius: '12px' }}>\r\n+            <Paper sx={{ width: \"90%\", overflow: \"hidden\", boxShadow: 'none', backgroundColor: '#eff6ff', borderRadius: '12px' }}>\r\n \r\n \r\n \r\n                 <Box component={'form'} p={3} sx={{ borderRadius: '12px' }} onSubmit={handleSubmit(UpdateConsentForm)} >\r\n"
                },
                {
                    "date": 1743296387653,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -741,9 +741,9 @@\n \r\n     return (\r\n         <div>\r\n \r\n-            <Paper sx={{ width: \"90%\", overflow: \"hidden\", boxShadow: 'none', backgroundColor: '#eff6ff', borderRadius: '12px' }}>\r\n+            <Paper sx={{ width: \"90%\", overflow: \"hidden\", boxShadow: 'none', backgroundColor: '#eff6ff', borderRadius: '12px',margin:'0 auto' }}>\r\n \r\n \r\n \r\n                 <Box component={'form'} p={3} sx={{ borderRadius: '12px' }} onSubmit={handleSubmit(UpdateConsentForm)} >\r\n"
                },
                {
                    "date": 1743296394471,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -741,9 +741,9 @@\n \r\n     return (\r\n         <div>\r\n \r\n-            <Paper sx={{ width: \"90%\", overflow: \"hidden\", boxShadow: 'none', backgroundColor: '#eff6ff', borderRadius: '12px',margin:'0 auto' }}>\r\n+            <Paper sx={{ width: \"90%\", overflow: \"hidden\", boxShadow: 'none', backgroundColor: '#eff6ff', borderRadius: '12px',margin:'20 auto' }}>\r\n \r\n \r\n \r\n                 <Box component={'form'} p={3} sx={{ borderRadius: '12px' }} onSubmit={handleSubmit(UpdateConsentForm)} >\r\n"
                },
                {
                    "date": 1743296405362,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -741,9 +741,9 @@\n \r\n     return (\r\n         <div>\r\n \r\n-            <Paper sx={{ width: \"90%\", overflow: \"hidden\", boxShadow: 'none', backgroundColor: '#eff6ff', borderRadius: '12px',margin:'20 auto' }}>\r\n+            <Paper sx={{ width: \"90%\", overflow: \"hidden\", boxShadow: 'none', backgroundColor: '#eff6ff', borderRadius: '12px',margin:'20px auto' }}>\r\n \r\n \r\n \r\n                 <Box component={'form'} p={3} sx={{ borderRadius: '12px' }} onSubmit={handleSubmit(UpdateConsentForm)} >\r\n"
                },
                {
                    "date": 1743296410719,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -741,9 +741,9 @@\n \r\n     return (\r\n         <div>\r\n \r\n-            <Paper sx={{ width: \"90%\", overflow: \"hidden\", boxShadow: 'none', backgroundColor: '#eff6ff', borderRadius: '12px',margin:'20px auto' }}>\r\n+            <Paper sx={{ width: \"90%\", overflow: \"hidden\", boxShadow: 'none', backgroundColor: '#eff6ff', borderRadius: '12px',margin:'40px auto' }}>\r\n \r\n \r\n \r\n                 <Box component={'form'} p={3} sx={{ borderRadius: '12px' }} onSubmit={handleSubmit(UpdateConsentForm)} >\r\n"
                },
                {
                    "date": 1743296454705,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -314,9 +314,9 @@\n                 \"Added Successfully\",\r\n                 \"Something Went Wrong\"\r\n             );\r\n \r\n-           \r\n+\r\n             if (response?.responseCode === 200) {\r\n                 console.log(response);\r\n                 setImageURL(null)\r\n                 navigate('/consent-forms')\r\n@@ -740,13 +740,13 @@\n \r\n \r\n     return (\r\n         <div>\r\n+            <Box component={'img'}></Box>\r\n+            <Paper sx={{ width: \"90%\", overflow: \"hidden\", boxShadow: 'none', backgroundColor: '#eff6ff', borderRadius: '12px', margin: '40px auto' }}>\r\n \r\n-            <Paper sx={{ width: \"90%\", overflow: \"hidden\", boxShadow: 'none', backgroundColor: '#eff6ff', borderRadius: '12px',margin:'40px auto' }}>\r\n \r\n \r\n-\r\n                 <Box component={'form'} p={3} sx={{ borderRadius: '12px' }} onSubmit={handleSubmit(UpdateConsentForm)} >\r\n                     <Typography variant=\"h5\" sx={{ fontWeight: 700 }}>\r\n                         Medical History Form\r\n                     </Typography>\r\n"
                },
                {
                    "date": 1743296462700,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -740,9 +740,9 @@\n \r\n \r\n     return (\r\n         <div>\r\n-            <Box component={'img'}></Box>\r\n+            <Box component={'img'} src={Images.logo}></Box>\r\n             <Paper sx={{ width: \"90%\", overflow: \"hidden\", boxShadow: 'none', backgroundColor: '#eff6ff', borderRadius: '12px', margin: '40px auto' }}>\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1743296471413,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -740,9 +740,9 @@\n \r\n \r\n     return (\r\n         <div>\r\n-            <Box component={'img'} src={Images.logo}></Box>\r\n+            <Box component={'img'} src={Images.logo} width={'100px'}></Box>\r\n             <Paper sx={{ width: \"90%\", overflow: \"hidden\", boxShadow: 'none', backgroundColor: '#eff6ff', borderRadius: '12px', margin: '40px auto' }}>\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1743296487964,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,8 +21,9 @@\n import UploadFileIcon from '@mui/icons-material/UploadFile';\r\n import CloseIcon from '@mui/icons-material/Close';\r\n import dayjs from \"dayjs\";\r\n import { id } from \"date-fns/locale\";\r\n+import { Images } from \"../../../assets/images\";\r\n \r\n \r\n const UserForm = () => {\r\n     const { id } = useParams()\r\n@@ -740,9 +741,9 @@\n \r\n \r\n     return (\r\n         <div>\r\n-            <Box component={'img'} src={Images.logo} width={'100px'}></Box>\r\n+            <Box component={'img'} src={Images.logo} width={'100px'} sx={{textAlign:'center'}}></Box>\r\n             <Paper sx={{ width: \"90%\", overflow: \"hidden\", boxShadow: 'none', backgroundColor: '#eff6ff', borderRadius: '12px', margin: '40px auto' }}>\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1743296502261,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -741,9 +741,11 @@\n \r\n \r\n     return (\r\n         <div>\r\n+            <Box>\r\n             <Box component={'img'} src={Images.logo} width={'100px'} sx={{textAlign:'center'}}></Box>\r\n+            </Box>\r\n             <Paper sx={{ width: \"90%\", overflow: \"hidden\", boxShadow: 'none', backgroundColor: '#eff6ff', borderRadius: '12px', margin: '40px auto' }}>\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1743296521734,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -741,9 +741,9 @@\n \r\n \r\n     return (\r\n         <div>\r\n-            <Box>\r\n+            <Box sx={{display:'flex',justifyContent:'center'}}>\r\n             <Box component={'img'} src={Images.logo} width={'100px'} sx={{textAlign:'center'}}></Box>\r\n             </Box>\r\n             <Paper sx={{ width: \"90%\", overflow: \"hidden\", boxShadow: 'none', backgroundColor: '#eff6ff', borderRadius: '12px', margin: '40px auto' }}>\r\n \r\n"
                },
                {
                    "date": 1743296528308,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -742,9 +742,9 @@\n \r\n     return (\r\n         <div>\r\n             <Box sx={{display:'flex',justifyContent:'center'}}>\r\n-            <Box component={'img'} src={Images.logo} width={'100px'} sx={{textAlign:'center'}}></Box>\r\n+            <Box component={'img'} src={Images.logo} width={'200px'} sx={{textAlign:'center'}}></Box>\r\n             </Box>\r\n             <Paper sx={{ width: \"90%\", overflow: \"hidden\", boxShadow: 'none', backgroundColor: '#eff6ff', borderRadius: '12px', margin: '40px auto' }}>\r\n \r\n \r\n"
                },
                {
                    "date": 1743296578484,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -768,8 +768,9 @@\n \r\n                                 Select Form :\r\n                             </InputLabel>\r\n                             <SelectField\r\n+                            disabled={true}\r\n                                 size={'small'}\r\n                                 newLabel={'Select Form'}\r\n                                 fullWidth={true}\r\n                                 options={[]}\r\n"
                },
                {
                    "date": 1743296586850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -804,8 +804,9 @@\n                                             </InputLabel>\r\n                                             <Controller\r\n                                                 name=\"treatmentDate\"\r\n                                                 control={control}\r\n+                                                disabled={true}\r\n                                                 rules={{ required: \"Please select a date\" }}\r\n                                                 render={({ field }) => (\r\n                                                     <DatePicker\r\n                                                         {...field}\r\n"
                },
                {
                    "date": 1743296594749,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -860,8 +860,9 @@\n                                             </InputLabel>\r\n                                             <Controller\r\n                                                 name=\"consultationDate\"\r\n                                                 control={control}\r\n+                                                disabled={true}\r\n                                                 rules={{ required: \"Please select a date\" }}\r\n                                                 render={({ field }) => (\r\n                                                     <DatePicker\r\n                                                         {...field}\r\n"
                },
                {
                    "date": 1743296600763,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -913,9 +913,9 @@\n                                     Existing or New Patient :\r\n                                 </InputLabel>\r\n                                 <FormControl component=\"fieldset\">\r\n \r\n-                                    <RadioGroup row value={patientType} onChange={handleChange}>\r\n+                                    <RadioGroup row value={patientType} >\r\n                                         <FormControlLabel value=\"existing\" control={<Radio />} label=\"Existing\" />\r\n                                         <FormControlLabel value=\"new\" control={<Radio />} label=\"New\" />\r\n                                     </RadioGroup>\r\n                                 </FormControl>\r\n"
                },
                {
                    "date": 1743296614107,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -992,8 +992,9 @@\n                                     Select Aftercare Document :\r\n                                 </InputLabel>\r\n                                     <SelectField\r\n                                         size={'small'}\r\n+                                        disabled={true}\r\n                                         newLabel={'Select Document'}\r\n                                         fullWidth={true}\r\n                                         options={documents}\r\n                                         selected={selectedDocument}\r\n"
                },
                {
                    "date": 1743296633891,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1012,8 +1012,9 @@\n                         </Grid>\r\n                         <Grid item xs={3} mt={2}><InputField\r\n                             label={\"Patient First Name :*\"}\r\n                             size={'small'}\r\n+                            disabled={true}\r\n                             placeholder={\"Patient First Name\"}\r\n                             error={errors?.fname?.message}\r\n                             register={register(\"fname\", {\r\n                                 required:\r\n@@ -1023,8 +1024,9 @@\n                         /></Grid>\r\n                         <Grid item xs={3} mt={2}><InputField\r\n                             label={\"Patient Last Name :*\"}\r\n                             size={'small'}\r\n+                            disabled={true}\r\n                             placeholder={\" Patient Last Name\"}\r\n                             error={errors?.lname?.message}\r\n                             register={register(\"lname\", {\r\n                                 required:\r\n"
                },
                {
                    "date": 1743296641251,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1036,8 +1036,9 @@\n                         /></Grid>\r\n                         <Grid item xs={3} mt={2}><InputField\r\n                             label={\"Patient Email :*\"}\r\n                             size={'small'}\r\n+                            disabled={true}\r\n                             placeholder={\"Patient Email\"}\r\n                             error={errors?.email?.message}\r\n                             register={register(\"email\", {\r\n                                 required:\r\n@@ -1063,8 +1064,9 @@\n                                             </InputLabel>\r\n                                             <Controller\r\n                                                 name=\"selectedDate\"\r\n                                                 control={control}\r\n+                                                disabled={true}\r\n                                                 rules={{ required: \"Please select a date\" }}\r\n                                                 render={({ field }) => (\r\n                                                     <DatePicker\r\n                                                         {...field}\r\n"
                },
                {
                    "date": 1743296647250,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1104,8 +1104,9 @@\n                             </LocalizationProvider>\r\n                         </Grid>\r\n                         <Grid item xs={3} mt={2}><InputField\r\n                             label={\"Phone Number :*\"}\r\n+                            disabled={true}\r\n                             size={'small'}\r\n                             placeholder={\"Phone Number\"}\r\n                             error={errors?.phone?.message}\r\n                             register={register(\"phone\", {\r\n@@ -1115,8 +1116,9 @@\n                             })}\r\n                         /></Grid>\r\n                         <Grid item xs={3} mt={2}><InputField\r\n                             label={\"Post Code :*\"}\r\n+                            disabled={true}\r\n                             size={'small'}\r\n                             placeholder={\"Post Code\"}\r\n                             error={errors?.post?.message}\r\n                             register={register(\"post\", {\r\n"
                },
                {
                    "date": 1743296654962,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1128,8 +1128,9 @@\n                             })}\r\n                         /></Grid>\r\n                         <Grid item xs={3} mt={2}><InputField\r\n                             label={\"Address :*\"}\r\n+                            disabled={true}\r\n                             size={'small'}\r\n                             placeholder={\"Address\"}\r\n                             error={errors?.address?.message}\r\n                             register={register(\"address\", {\r\n@@ -1139,8 +1140,9 @@\n                             })}\r\n                         /></Grid>\r\n                         <Grid item xs={3} mt={2}><InputField\r\n                             label={\"Notes :\"}\r\n+                            disabled={true}\r\n                             multiline\r\n                             rows={3}\r\n                             size={'small'}\r\n                             placeholder={\"Notes\"}\r\n@@ -1162,8 +1164,9 @@\n \r\n \r\n                         <Grid item xs={3} mt={2}><InputField\r\n                             label={\"Name :\"}\r\n+                            disabled={true}\r\n                             size={'small'}\r\n                             placeholder={\"Name\"}\r\n                             error={errors?.name?.message}\r\n                             register={register(\"name\", {\r\n"
                },
                {
                    "date": 1743296661207,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1177,8 +1177,9 @@\n                         /></Grid>\r\n \r\n                         <Grid item xs={3} mt={2}><InputField\r\n                             label={\"Email :\"}\r\n+                            disabled={true}\r\n                             size={'small'}\r\n                             placeholder={\"Email\"}\r\n                             error={errors?.kinemail?.message}\r\n                             register={register(\"kinemail\", {\r\n@@ -1189,8 +1190,9 @@\n                         /></Grid>\r\n \r\n                         <Grid item xs={3} mt={2}><InputField\r\n                             label={\"Phone Number :\"}\r\n+                            disabled={true}\r\n                             size={'small'}\r\n                             placeholder={\"Phone Number\"}\r\n                             error={errors?.kinphone?.message}\r\n                             register={register(\"kinphone\", {\r\n@@ -1201,8 +1203,9 @@\n                         /></Grid>\r\n \r\n                         <Grid item xs={3} mt={2}><InputField\r\n                             label={\"Address :\"}\r\n+                            disabled={true}\r\n                             size={'small'}\r\n                             placeholder={\"Address\"}\r\n                             error={errors?.kinaddress?.message}\r\n                             register={register(\"kinaddress\", {\r\n"
                },
                {
                    "date": 1743296668253,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1226,8 +1226,9 @@\n \r\n \r\n                         <Grid item xs={3} mt={2}><InputField\r\n                             label={\"Name :\"}\r\n+                            disabled={true}\r\n                             size={'small'}\r\n                             placeholder={\"Name\"}\r\n                             error={errors?.genname?.message}\r\n                             register={register(\"genname\", {\r\n@@ -1238,8 +1239,9 @@\n                         /></Grid>\r\n \r\n                         <Grid item xs={3} mt={2}><InputField\r\n                             label={\"Email :\"}\r\n+                            disabled={true}\r\n                             size={'small'}\r\n                             placeholder={\"Email\"}\r\n                             error={errors?.genemail?.message}\r\n                             register={register(\"genemail\", {\r\n@@ -1250,8 +1252,9 @@\n                         /></Grid>\r\n \r\n                         <Grid item xs={3} mt={2}><InputField\r\n                             label={\"Phone Number :\"}\r\n+                            disabled={true}\r\n                             size={'small'}\r\n                             placeholder={\"Phone Number\"}\r\n                             error={errors?.genphone?.message}\r\n                             register={register(\"genphone\", {\r\n"
                },
                {
                    "date": 1743296676432,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1284,9 +1284,9 @@\n                             <Grid item xs={6} mt={2}>\r\n                                 <FormLabel component=\"legend\" sx={{ color: 'black' }}>Can we have permission to use your images for marketing?</FormLabel>\r\n                                 <FormControl component=\"fieldset\">\r\n \r\n-                                    <RadioGroup row name=\"marketing\" value={permissions.marketing} onChange={handleChange2}>\r\n+                                    <RadioGroup row name=\"marketing\" value={permissions.marketing} >\r\n                                         <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\r\n                                         <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                                     </RadioGroup>\r\n                                 </FormControl>\r\n"
                },
                {
                    "date": 1743296690615,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1265,8 +1265,9 @@\n                         /></Grid>\r\n \r\n                         <Grid item xs={3} mt={2}><InputField\r\n                             label={\"Address :\"}\r\n+                            disabled={true}\r\n                             size={'small'}\r\n                             placeholder={\"Address\"}\r\n                             error={errors?.genaddress?.message}\r\n                             register={register(\"genaddress\", {\r\n@@ -1283,9 +1284,9 @@\n                             <Grid item xs={6} mt={2}>\r\n                                 <FormLabel component=\"legend\" sx={{ color: 'black' }}>Can we have permission to use your images for marketing?</FormLabel>\r\n                                 <FormControl component=\"fieldset\">\r\n \r\n-                                    <RadioGroup row name=\"marketing\" value={permissions.marketing} >\r\n+                                    <RadioGroup row name=\"marketing\" value={permissions.marketing} onChange={handleChange2}>\r\n                                         <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\r\n                                         <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                                     </RadioGroup>\r\n                                 </FormControl>\r\n@@ -1313,8 +1314,9 @@\n                         <Grid container spacing={2} p={2}>\r\n                             {/* Patient Concerns */}\r\n                             <Grid item xs={6} mt={2}>\r\n                                 <InputField\r\n+                                   disabled={true}\r\n                                     label=\"Patient concerns\"\r\n                                     size=\"small\"\r\n                                     placeholder=\"Patient concerns\"\r\n                                     error={errors?.patientConcerns?.message}\r\n"
                },
                {
                    "date": 1743296696244,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1328,8 +1328,9 @@\n \r\n                             {/* Patient Goal */}\r\n                             <Grid item xs={6} mt={2}>\r\n                                 <InputField\r\n+                                   disabled={true}\r\n                                     label=\"Patient goal\"\r\n                                     size=\"small\"\r\n                                     placeholder=\"Patient goal\"\r\n                                     error={errors?.patientGoal?.message}\r\n@@ -1341,8 +1342,9 @@\n \r\n                             {/* Advised Plan/Product */}\r\n                             <Grid item xs={6} mt={2}>\r\n                                 <InputField\r\n+                                   disabled={true}\r\n                                     label=\"Advised Plan/product\"\r\n                                     size=\"small\"\r\n                                     placeholder=\"Advised Plan/product\"\r\n                                     error={errors?.advisedPlan?.message}\r\n"
                },
                {
                    "date": 1743296707775,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1356,8 +1356,9 @@\n \r\n                             {/* Expected Result */}\r\n                             <Grid item xs={6} mt={2}>\r\n                                 <InputField\r\n+                                   disabled={true}\r\n                                     label=\"Expected Result\"\r\n                                     size=\"small\"\r\n                                     placeholder=\"Expected Result\"\r\n                                     error={errors?.expectedResult?.message}\r\n@@ -1387,8 +1388,9 @@\n                                                 }}>\r\n                                                     Patient Date :*\r\n                                                 </InputLabel>\r\n                                                 <Controller\r\n+                                                   disabled={true}\r\n                                                     name=\"patientDate\"\r\n                                                     control={control}\r\n                                                     rules={{ required: \"Please select a date\" }}\r\n                                                     render={({ field }) => (\r\n"
                },
                {
                    "date": 1743296720362,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1487,8 +1487,9 @@\n \r\n                                             <Controller\r\n                                                 name={`records.${index}.date`}\r\n                                                 control={control}\r\n+                                                disabled={true}\r\n                                                 rules={{ required: \"Please select a date\" }}\r\n                                                 render={({ field }) => (\r\n                                                     <DatePicker\r\n                                                         {...field}\r\n"
                },
                {
                    "date": 1743296728292,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1522,8 +1522,9 @@\n \r\n                                     {/* Amount Field */}\r\n                                     <Grid item xs={3} mt={2}>\r\n                                         <InputField\r\n+                                           disabled={true}\r\n                                             label=\"Amount\"\r\n                                             placeholder=\"Order Amount\"\r\n                                             size=\"small\"\r\n                                             register={register(`records.${index}.amount`)}\r\n@@ -1534,8 +1535,9 @@\n \r\n                                     {/* Description Field */}\r\n                                     <Grid item xs={4}>\r\n                                         <InputField\r\n+                                           disabled={true}\r\n                                             label=\"Description\"\r\n                                             multiline\r\n                                             rows={3}\r\n                                             placeholder=\"Description\"\r\n"
                },
                {
                    "date": 1743296735164,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1557,18 +1557,18 @@\n                         </LocalizationProvider>\r\n \r\n \r\n \r\n-                        <Grid container p={2}>\r\n+                        {/* <Grid container p={2}>\r\n                             <Button\r\n                                 variant=\"contained\"\r\n                                 color=\"primary\"\r\n                                 onClick={() => append({ date: \"\", amount: \"\", description: \"\" })}\r\n                                 sx={{ mt: 2, textTransform: 'capitalize' }}\r\n                             >\r\n                                 Add More\r\n                             </Button>\r\n-                        </Grid>\r\n+                        </Grid> */}\r\n                         <Grid container p={1}>\r\n                             <Divider sx={{ mt: 4, width: '100%' }} />\r\n                         </Grid>\r\n                         <Grid item xs={12} sm={5}>\r\n"
                },
                {
                    "date": 1743296747632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1570,9 +1570,9 @@\n                         </Grid> */}\r\n                         <Grid container p={1}>\r\n                             <Divider sx={{ mt: 4, width: '100%' }} />\r\n                         </Grid>\r\n-                        <Grid item xs={12} sm={5}>\r\n+                        {/* <Grid item xs={12} sm={5}>\r\n                             <InputLabel sx={{\r\n                                 textTransform: \"capitalize\", mt: 2,\r\n                                 textAlign: \"left\",\r\n                                 fontWeight: 600,\r\n@@ -1651,9 +1651,9 @@\n                                         )}\r\n                                     </>\r\n                                 )}\r\n                             />\r\n-                        </Grid>\r\n+                        </Grid> */}\r\n \r\n                         <Grid container p={2}>\r\n                             {uploadedImages?.length > 0 && (\r\n                                 <Grid item xs={12}>\r\n"
                },
                {
                    "date": 1743296757424,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1706,9 +1706,9 @@\n                         </Grid>\r\n                         <Grid container p={1}>\r\n                             <Divider sx={{ mt: 4, width: '100%' }} />\r\n                         </Grid>\r\n-                        <Grid item xs={12} sm={5}>\r\n+                        {/* <Grid item xs={12} sm={5}>\r\n                             <InputLabel sx={{\r\n                                 textTransform: \"capitalize\", mt: 2,\r\n                                 textAlign: \"left\",\r\n                                 fontWeight: 600,\r\n@@ -1787,9 +1787,9 @@\n                                         )}\r\n                                     </>\r\n                                 )}\r\n                             />\r\n-                        </Grid>\r\n+                        </Grid> */}\r\n \r\n                         <Grid container p={2}>\r\n                             {beforeImages?.length > 0 && (\r\n                                 <Grid item xs={12}>\r\n"
                },
                {
                    "date": 1743296763719,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1842,9 +1842,9 @@\n                         </Grid>\r\n                         <Grid container p={1}>\r\n                             <Divider sx={{ mt: 4, width: '100%' }} />\r\n                         </Grid>\r\n-                        <Grid item xs={12} sm={5}>\r\n+                        {/* <Grid item xs={12} sm={5}>\r\n                             <InputLabel sx={{\r\n                                 textTransform: \"capitalize\", mt: 2,\r\n                                 textAlign: \"left\",\r\n                                 fontWeight: 600,\r\n@@ -1923,9 +1923,9 @@\n                                         )}\r\n                                     </>\r\n                                 )}\r\n                             />\r\n-                        </Grid>\r\n+                        </Grid> */}\r\n \r\n                         <Grid container p={2}>\r\n                             {afterImages?.length > 0 && (\r\n                                 <Grid item xs={12}>\r\n"
                },
                {
                    "date": 1743296774455,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1992,8 +1992,9 @@\n                                             </InputLabel>\r\n                                             <Controller\r\n                                                 name={`furtherFields.${index}.date`}\r\n                                                 control={control}\r\n+                                                disabled={true}\r\n                                                 rules={{ required: \"Please select a date\" }}\r\n                                                 render={({ field }) => (\r\n                                                     <DatePicker\r\n                                                         {...field}\r\n"
                },
                {
                    "date": 1743296785608,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2076,8 +2076,9 @@\n                         <Grid container p={1}>\r\n                             <Divider sx={{ mt: 4, width: '100%' }} />\r\n                         </Grid>\r\n                         <Grid item xs={6} mt={2}><InputField\r\n+                           disabled={true}\r\n                             label={\"Notes :\"}\r\n                             multiline\r\n                             rows={3}\r\n                             size={'small'}\r\n"
                },
                {
                    "date": 1743297100251,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1462,8 +1462,164 @@\n                         </Grid>\r\n                         <Grid container p={1}>\r\n                             <Divider sx={{ mt: 4, width: '100%' }} />\r\n                         </Grid>\r\n+                        <Typography variant=\"h5\" fontWeight=\"bold\" mb={2} p={2}>\r\n+                            Treatment plan section\r\n+                        </Typography>\r\n+\r\n+                        <Grid container spacing={2} p={2}>\r\n+                            {/* Patient Concerns */}\r\n+                            <Grid item xs={6} mt={2}>\r\n+                                <InputField\r\n+                                   disabled={true}\r\n+                                    label=\"Patient concerns\"\r\n+                                    size=\"small\"\r\n+                                    placeholder=\"Patient concerns\"\r\n+                                    error={errors?.patientConcerns?.message}\r\n+                                    register={register(\"patientConcerns\", { required: false })}\r\n+                                    multiline\r\n+                                    rows={4}\r\n+                                />\r\n+                            </Grid>\r\n+\r\n+                            {/* Patient Goal */}\r\n+                            <Grid item xs={6} mt={2}>\r\n+                                <InputField\r\n+                                   disabled={true}\r\n+                                    label=\"Patient goal\"\r\n+                                    size=\"small\"\r\n+                                    placeholder=\"Patient goal\"\r\n+                                    error={errors?.patientGoal?.message}\r\n+                                    register={register(\"patientGoal\", { required: false })}\r\n+                                    multiline\r\n+                                    rows={4}\r\n+                                />\r\n+                            </Grid>\r\n+\r\n+                            {/* Advised Plan/Product */}\r\n+                            <Grid item xs={6} mt={2}>\r\n+                                <InputField\r\n+                                   disabled={true}\r\n+                                    label=\"Advised Plan/product\"\r\n+                                    size=\"small\"\r\n+                                    placeholder=\"Advised Plan/product\"\r\n+                                    error={errors?.advisedPlan?.message}\r\n+                                    register={register(\"advisedPlan\", { required: false })}\r\n+                                    multiline\r\n+                                    rows={4}\r\n+                                />\r\n+                            </Grid>\r\n+\r\n+                            {/* Expected Result */}\r\n+                            <Grid item xs={6} mt={2}>\r\n+                                <InputField\r\n+                                   disabled={true}\r\n+                                    label=\"Expected Result\"\r\n+                                    size=\"small\"\r\n+                                    placeholder=\"Expected Result\"\r\n+                                    error={errors?.expectedResult?.message}\r\n+                                    register={register(\"expectedResult\", { required: false })}\r\n+                                    multiline\r\n+                                    rows={4}\r\n+                                />\r\n+                            </Grid>\r\n+                        </Grid>\r\n+                        <Typography variant=\"p\" fontWeight={500} mb={2} p={2}>\r\n+                            I confirm my medical history to be true and correct. I agree I have read and understood all the contents of this document. I have read and understood all the content of this document and agree with the treatment plan. I give my consent to treatment and understand the possible complications and side effects. I confirm I have received an aftercare sheet\r\n+                        </Typography>\r\n+                        <Grid container spacing={5} p={2} alignItems=\"center\">\r\n+                            {/* Date Field */}\r\n+                            <Grid item xs={6} mt={2}>\r\n+                                <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n+                                    <Grid container spacing={2}>\r\n+                                        {/* Single Date Selection */}\r\n+                                        <Grid item xs={12}>\r\n+                                            <Box>\r\n+                                                <InputLabel sx={{\r\n+                                                    textTransform: \"capitalize\", textAlign: 'left', fontWeight: 700, display: 'block',\r\n+\r\n+                                                    fontSize: \"14px\",\r\n+                                                    color: \"#333\",\r\n+                                                    marginBottom: 1.5,\r\n+                                                }}>\r\n+                                                    Patient Date :*\r\n+                                                </InputLabel>\r\n+                                                <Controller\r\n+                                                   disabled={true}\r\n+                                                    name=\"patientDate\"\r\n+                                                    control={control}\r\n+                                                    rules={{ required: \"Please select a date\" }}\r\n+                                                    render={({ field }) => (\r\n+                                                        <DatePicker\r\n+                                                            {...field}\r\n+                                                            value={field.value || null}\r\n+                                                            onChange={(newValue) => field.onChange(newValue)}\r\n+                                                            slotProps={{\r\n+                                                                textField: {\r\n+                                                                    size: \"small\",\r\n+                                                                    fullWidth: true,\r\n+                                                                    sx: {\r\n+                                                                        \"& .MuiOutlinedInput-root\": {\r\n+                                                                            borderRadius: '12px',\r\n+                                                                            \"& fieldset\": { border: \"1 solid #e0e0e0\" }, // Default border\r\n+                                                                            \"&:hover fieldset\": { border: \"1 solid #0076bf\" }, // On hover\r\n+                                                                            \"&.Mui-focused fieldset\": { border: \"1 solid #0076bf !important\" } // On focus\r\n+                                                                        },\r\n+                                                                    },\r\n+                                                                },\r\n+                                                            }}\r\n+                                                        />\r\n+                                                    )}\r\n+                                                />\r\n+                                                {errors.patientDate && (\r\n+                                                    <Typography color=\"error\">{errors.patientDate.message}</Typography>\r\n+                                                )}\r\n+                                            </Box>\r\n+                                        </Grid>\r\n+\r\n+\r\n+\r\n+\r\n+                                    </Grid>\r\n+\r\n+\r\n+                                </LocalizationProvider>\r\n+                            </Grid>\r\n+\r\n+                            {/* Signature Canvas */}\r\n+                            <Grid item xs={6} mt={2}>\r\n+                                <Typography>Patient Signature:</Typography>\r\n+                                <SignatureCanvas\r\n+                                    ref={sigCanvas}\r\n+                                    penColor=\"black\"\r\n+                                    canvasProps={{\r\n+                                        width: 300,\r\n+                                        height: 150,\r\n+                                        className: \"sigCanvas\",\r\n+                                        style: { border: \"1px dashed black\" },\r\n+                                    }}\r\n+                                />\r\n+                                <Grid container spacing={1} mt={1}>\r\n+                                    <Grid item>\r\n+                                        <Button variant=\"contained\" color=\"secondary\" onClick={handleClear}>\r\n+                                            Clear Signature\r\n+                                        </Button>\r\n+                                    </Grid>\r\n+                                    <Grid item>\r\n+                                        <Button variant=\"contained\" color=\"primary\" onClick={handleSave}>\r\n+                                            Save Signature\r\n+                                        </Button>\r\n+                                    </Grid>\r\n+\r\n+                                </Grid>\r\n+\r\n+\r\n+                            </Grid>\r\n+                        </Grid>\r\n+                        <Grid container p={1}>\r\n+                            <Divider sx={{ mt: 4, width: '100%' }} />\r\n+                        </Grid>\r\n                         <Typography variant=\"h5\" p={2} fontWeight={'bold'}>Treatment Record Section</Typography>\r\n \r\n                         <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                             {fields.map((item, index) => (\r\n"
                },
                {
                    "date": 1743297220471,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1527,66 +1527,10 @@\n                         <Typography variant=\"p\" fontWeight={500} mb={2} p={2}>\r\n                             I confirm my medical history to be true and correct. I agree I have read and understood all the contents of this document. I have read and understood all the content of this document and agree with the treatment plan. I give my consent to treatment and understand the possible complications and side effects. I confirm I have received an aftercare sheet\r\n                         </Typography>\r\n                         <Grid container spacing={5} p={2} alignItems=\"center\">\r\n-                            {/* Date Field */}\r\n-                            <Grid item xs={6} mt={2}>\r\n-                                <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n-                                    <Grid container spacing={2}>\r\n-                                        {/* Single Date Selection */}\r\n-                                        <Grid item xs={12}>\r\n-                                            <Box>\r\n-                                                <InputLabel sx={{\r\n-                                                    textTransform: \"capitalize\", textAlign: 'left', fontWeight: 700, display: 'block',\r\n+                            \r\n \r\n-                                                    fontSize: \"14px\",\r\n-                                                    color: \"#333\",\r\n-                                                    marginBottom: 1.5,\r\n-                                                }}>\r\n-                                                    Patient Date :*\r\n-                                                </InputLabel>\r\n-                                                <Controller\r\n-                                                   disabled={true}\r\n-                                                    name=\"patientDate\"\r\n-                                                    control={control}\r\n-                                                    rules={{ required: \"Please select a date\" }}\r\n-                                                    render={({ field }) => (\r\n-                                                        <DatePicker\r\n-                                                            {...field}\r\n-                                                            value={field.value || null}\r\n-                                                            onChange={(newValue) => field.onChange(newValue)}\r\n-                                                            slotProps={{\r\n-                                                                textField: {\r\n-                                                                    size: \"small\",\r\n-                                                                    fullWidth: true,\r\n-                                                                    sx: {\r\n-                                                                        \"& .MuiOutlinedInput-root\": {\r\n-                                                                            borderRadius: '12px',\r\n-                                                                            \"& fieldset\": { border: \"1 solid #e0e0e0\" }, // Default border\r\n-                                                                            \"&:hover fieldset\": { border: \"1 solid #0076bf\" }, // On hover\r\n-                                                                            \"&.Mui-focused fieldset\": { border: \"1 solid #0076bf !important\" } // On focus\r\n-                                                                        },\r\n-                                                                    },\r\n-                                                                },\r\n-                                                            }}\r\n-                                                        />\r\n-                                                    )}\r\n-                                                />\r\n-                                                {errors.patientDate && (\r\n-                                                    <Typography color=\"error\">{errors.patientDate.message}</Typography>\r\n-                                                )}\r\n-                                            </Box>\r\n-                                        </Grid>\r\n-\r\n-\r\n-\r\n-\r\n-                                    </Grid>\r\n-\r\n-\r\n-                                </LocalizationProvider>\r\n-                            </Grid>\r\n-\r\n                             {/* Signature Canvas */}\r\n                             <Grid item xs={6} mt={2}>\r\n                                 <Typography>Patient Signature:</Typography>\r\n                                 <SignatureCanvas\r\n"
                },
                {
                    "date": 1743297228933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1509,25 +1509,10 @@\n                                     rows={4}\r\n                                 />\r\n                             </Grid>\r\n \r\n-                            {/* Expected Result */}\r\n-                            <Grid item xs={6} mt={2}>\r\n-                                <InputField\r\n-                                   disabled={true}\r\n-                                    label=\"Expected Result\"\r\n-                                    size=\"small\"\r\n-                                    placeholder=\"Expected Result\"\r\n-                                    error={errors?.expectedResult?.message}\r\n-                                    register={register(\"expectedResult\", { required: false })}\r\n-                                    multiline\r\n-                                    rows={4}\r\n-                                />\r\n-                            </Grid>\r\n-                        </Grid>\r\n-                        <Typography variant=\"p\" fontWeight={500} mb={2} p={2}>\r\n-                            I confirm my medical history to be true and correct. I agree I have read and understood all the contents of this document. I have read and understood all the content of this document and agree with the treatment plan. I give my consent to treatment and understand the possible complications and side effects. I confirm I have received an aftercare sheet\r\n-                        </Typography>\r\n+                       \r\n+                       \r\n                         <Grid container spacing={5} p={2} alignItems=\"center\">\r\n                             \r\n \r\n                             {/* Signature Canvas */}\r\n"
                },
                {
                    "date": 1743297236612,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1495,24 +1495,12 @@\n                                     rows={4}\r\n                                 />\r\n                             </Grid>\r\n \r\n-                            {/* Advised Plan/Product */}\r\n-                            <Grid item xs={6} mt={2}>\r\n-                                <InputField\r\n-                                   disabled={true}\r\n-                                    label=\"Advised Plan/product\"\r\n-                                    size=\"small\"\r\n-                                    placeholder=\"Advised Plan/product\"\r\n-                                    error={errors?.advisedPlan?.message}\r\n-                                    register={register(\"advisedPlan\", { required: false })}\r\n-                                    multiline\r\n-                                    rows={4}\r\n-                                />\r\n-                            </Grid>\r\n+                          \r\n \r\n+                        </Grid>\r\n                        \r\n-                       \r\n                         <Grid container spacing={5} p={2} alignItems=\"center\">\r\n                             \r\n \r\n                             {/* Signature Canvas */}\r\n"
                },
                {
                    "date": 1743297244287,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1481,21 +1481,10 @@\n                                     rows={4}\r\n                                 />\r\n                             </Grid>\r\n \r\n-                            {/* Patient Goal */}\r\n-                            <Grid item xs={6} mt={2}>\r\n-                                <InputField\r\n-                                   disabled={true}\r\n-                                    label=\"Patient goal\"\r\n-                                    size=\"small\"\r\n-                                    placeholder=\"Patient goal\"\r\n-                                    error={errors?.patientGoal?.message}\r\n-                                    register={register(\"patientGoal\", { required: false })}\r\n-                                    multiline\r\n-                                    rows={4}\r\n-                                />\r\n-                            </Grid>\r\n+                           \r\n+                         \r\n \r\n                           \r\n \r\n                         </Grid>\r\n"
                },
                {
                    "date": 1743297260415,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1463,32 +1463,12 @@\n                         <Grid container p={1}>\r\n                             <Divider sx={{ mt: 4, width: '100%' }} />\r\n                         </Grid>\r\n                         <Typography variant=\"h5\" fontWeight=\"bold\" mb={2} p={2}>\r\n-                            Treatment plan section\r\n+                            Patient Consent\r\n                         </Typography>\r\n \r\n-                        <Grid container spacing={2} p={2}>\r\n-                            {/* Patient Concerns */}\r\n-                            <Grid item xs={6} mt={2}>\r\n-                                <InputField\r\n-                                   disabled={true}\r\n-                                    label=\"Patient concerns\"\r\n-                                    size=\"small\"\r\n-                                    placeholder=\"Patient concerns\"\r\n-                                    error={errors?.patientConcerns?.message}\r\n-                                    register={register(\"patientConcerns\", { required: false })}\r\n-                                    multiline\r\n-                                    rows={4}\r\n-                                />\r\n-                            </Grid>\r\n-\r\n-                           \r\n-                         \r\n-\r\n-                          \r\n-\r\n-                        </Grid>\r\n+                      \r\n                        \r\n                         <Grid container spacing={5} p={2} alignItems=\"center\">\r\n                             \r\n \r\n"
                },
                {
                    "date": 1743297269284,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1470,9 +1470,20 @@\n                       \r\n                        \r\n                         <Grid container spacing={5} p={2} alignItems=\"center\">\r\n                             \r\n-\r\n+                        <Grid item xs={6} mt={2}>\r\n+                                <InputField\r\n+                                   disabled={true}\r\n+                                    label=\"Details\"\r\n+                                    size=\"small\"\r\n+                                    placeholder=\"Patient concerns\"\r\n+                                    error={errors?.patientConcerns?.message}\r\n+                                    register={register(\"patientConcerns\", { required: false })}\r\n+                                    multiline\r\n+                                    rows={4}\r\n+                                />\r\n+                            </Grid>\r\n                             {/* Signature Canvas */}\r\n                             <Grid item xs={6} mt={2}>\r\n                                 <Typography>Patient Signature:</Typography>\r\n                                 <SignatureCanvas\r\n"
                },
                {
                    "date": 1743297277671,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1475,9 +1475,10 @@\n                                 <InputField\r\n                                    disabled={true}\r\n                                     label=\"Details\"\r\n                                     size=\"small\"\r\n-                                    placeholder=\"Patient concerns\"\r\n+                                    multiline\r\n+                                    placeholder=\"Details\"\r\n                                     error={errors?.patientConcerns?.message}\r\n                                     register={register(\"patientConcerns\", { required: false })}\r\n                                     multiline\r\n                                     rows={4}\r\n"
                },
                {
                    "date": 1743297290224,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1475,11 +1475,11 @@\n                                 <InputField\r\n                                    disabled={true}\r\n                                     label=\"Details\"\r\n                                     size=\"small\"\r\n-                                    multiline\r\n+                                    \r\n                                     placeholder=\"Details\"\r\n-                                    error={errors?.patientConcerns?.message}\r\n+                                    error={errors?.details?.message}\r\n                                     register={register(\"patientConcerns\", { required: false })}\r\n                                     multiline\r\n                                     rows={4}\r\n                                 />\r\n"
                },
                {
                    "date": 1743297326238,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,8 +108,9 @@\n     const [selectedPatient, setSelectedPatient] = useState(null)\r\n     const [documents, setDocuments] = useState([])\r\n     const [selectedDocument, setSelectedDocument] = useState(null)\r\n     const sigCanvas = useRef(null);\r\n+    const sigCanvasNew = useRef(null);\r\n     const [signature, setSignature] = useState(null);\r\n     const [uploadedImages, setUploadedImages] = useState([])\r\n     const [imageLoader, setImageLoader] = useState(false)\r\n     const [beforeImages, setBeforeImages] = useState([])\r\n@@ -1478,9 +1479,9 @@\n                                     size=\"small\"\r\n                                     \r\n                                     placeholder=\"Details\"\r\n                                     error={errors?.details?.message}\r\n-                                    register={register(\"patientConcerns\", { required: false })}\r\n+                                    register={register(\"details\", { required: false })}\r\n                                     multiline\r\n                                     rows={4}\r\n                                 />\r\n                             </Grid>\r\n"
                },
                {
                    "date": 1743297346098,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1488,9 +1488,9 @@\n                             {/* Signature Canvas */}\r\n                             <Grid item xs={6} mt={2}>\r\n                                 <Typography>Patient Signature:</Typography>\r\n                                 <SignatureCanvas\r\n-                                    ref={sigCanvas}\r\n+                                    ref={sigCanvasNew}\r\n                                     penColor=\"black\"\r\n                                     canvasProps={{\r\n                                         width: 300,\r\n                                         height: 150,\r\n"
                },
                {
                    "date": 1743297364286,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -157,8 +157,14 @@\n             sigCanvas.current.clear();\r\n             setSignature(null);\r\n         }\r\n     };\r\n+    const handleClear2 = () => {\r\n+        if (sigCanvasNew.current) {\r\n+            sigCanvas.current.clear();\r\n+            setSignature(null);\r\n+        }\r\n+    };\r\n     const [permissions, setPermissions] = useState({\r\n         marketing: \"\",\r\n         offers: \"\",\r\n     });\r\n"
                },
                {
                    "date": 1743297370121,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -159,10 +159,10 @@\n         }\r\n     };\r\n     const handleClear2 = () => {\r\n         if (sigCanvasNew.current) {\r\n-            sigCanvas.current.clear();\r\n-            setSignature(null);\r\n+            sigCanvasNew.current.clear();\r\n+            \r\n         }\r\n     };\r\n     const [permissions, setPermissions] = useState({\r\n         marketing: \"\",\r\n"
                },
                {
                    "date": 1743297382565,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1505,9 +1505,9 @@\n                                     }}\r\n                                 />\r\n                                 <Grid container spacing={1} mt={1}>\r\n                                     <Grid item>\r\n-                                        <Button variant=\"contained\" color=\"secondary\" onClick={handleClear}>\r\n+                                        <Button variant=\"contained\" color=\"secondary\" onClick={handleClear2}>\r\n                                             Clear Signature\r\n                                         </Button>\r\n                                     </Grid>\r\n                                     <Grid item>\r\n"
                },
                {
                    "date": 1743297393550,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -149,9 +149,39 @@\n \r\n             }\r\n         }\r\n     };\r\n+    const handleSave2 = async () => {\r\n+        if (sigCanvas.current) {\r\n+            const dataURL = await sigCanvas.current.toDataURL();\r\n+            setSignature(dataURL);\r\n+            try {\r\n+                const file = dataURL;\r\n+                if (file) {\r\n+                    setValue(\"image\", file, { shouldValidate: true }); // Set value and trigger validation\r\n+                }\r\n \r\n+                let obj = {\r\n+                    document: dataURL,\r\n+                    filename: moment().unix() + \"_Sign.png\"\r\n+                }\r\n+\r\n+                const response = await axios.post(\r\n+                    'https://cosmetic.theappkit.com/api/system/uploadDoc',\r\n+                    obj\r\n+                );\r\n+\r\n+                console.log(response?.data?.data?.path);\r\n+\r\n+                setSignature('https://cosmetic.theappkit.com' + response?.data?.data?.path);\r\n+\r\n+\r\n+            } catch (error) {\r\n+                console.log(error);\r\n+\r\n+            }\r\n+        }\r\n+    };\r\n     // Handle Clear Signature\r\n     const handleClear = () => {\r\n         if (sigCanvas.current) {\r\n             sigCanvas.current.clear();\r\n"
                },
                {
                    "date": 1743297401888,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -150,10 +150,10 @@\n             }\r\n         }\r\n     };\r\n     const handleSave2 = async () => {\r\n-        if (sigCanvas.current) {\r\n-            const dataURL = await sigCanvas.current.toDataURL();\r\n+        if (sigCanvasNew.current) {\r\n+            const dataURL = await sigCanvasNew.current.toDataURL();\r\n             setSignature(dataURL);\r\n             try {\r\n                 const file = dataURL;\r\n                 if (file) {\r\n"
                },
                {
                    "date": 1743297418686,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -171,9 +171,9 @@\n                 );\r\n \r\n                 console.log(response?.data?.data?.path);\r\n \r\n-                setSignature('https://cosmetic.theappkit.com' + response?.data?.data?.path);\r\n+                setConsentSign('https://cosmetic.theappkit.com' + response?.data?.data?.path);\r\n \r\n \r\n             } catch (error) {\r\n                 console.log(error);\r\n"
                },
                {
                    "date": 1743297431001,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,8 +116,9 @@\n     const [beforeImages, setBeforeImages] = useState([])\r\n     const [imageLoaderBefore, setImageLoaderBefore] = useState(false)\r\n     const [afterImages, setAfterImages] = useState([])\r\n     const [imageLoaderAfter, setImageLoaderAfter] = useState(false)\r\n+    const [consentSign, setConsentSign] = useState(false)\r\n \r\n     // Handle Save Signature\r\n     const handleSave = async () => {\r\n         if (sigCanvas.current) {\r\n"
                },
                {
                    "date": 1743297444883,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1541,9 +1541,9 @@\n                                             Clear Signature\r\n                                         </Button>\r\n                                     </Grid>\r\n                                     <Grid item>\r\n-                                        <Button variant=\"contained\" color=\"primary\" onClick={handleSave}>\r\n+                                        <Button variant=\"contained\" color=\"primary\" onClick={handleSave2}>\r\n                                             Save Signature\r\n                                         </Button>\r\n                                     </Grid>\r\n \r\n"
                },
                {
                    "date": 1743297481548,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1501,8 +1501,62 @@\n                         <Grid container p={1}>\r\n                             <Divider sx={{ mt: 4, width: '100%' }} />\r\n                         </Grid>\r\n                         <Typography variant=\"h5\" fontWeight=\"bold\" mb={2} p={2}>\r\n+                            Side Effects\r\n+                        </Typography>\r\n+\r\n+                      \r\n+                       \r\n+                        <Grid container spacing={5} p={2} alignItems=\"center\">\r\n+                            \r\n+                        <Grid item xs={6} mt={2}>\r\n+                                <InputField\r\n+                                   disabled={true}\r\n+                                    label=\"Details\"\r\n+                                    size=\"small\"\r\n+                                    \r\n+                                    placeholder=\"Details\"\r\n+                                    error={errors?.details?.message}\r\n+                                    register={register(\"details\", { required: false })}\r\n+                                    multiline\r\n+                                    rows={4}\r\n+                                />\r\n+                            </Grid>\r\n+                            {/* Signature Canvas */}\r\n+                            <Grid item xs={6} mt={2}>\r\n+                                <Typography>Patient Signature:</Typography>\r\n+                                <SignatureCanvas\r\n+                                    ref={sigCanvasNew}\r\n+                                    penColor=\"black\"\r\n+                                    canvasProps={{\r\n+                                        width: 300,\r\n+                                        height: 150,\r\n+                                        className: \"sigCanvas\",\r\n+                                        style: { border: \"1px dashed black\" },\r\n+                                    }}\r\n+                                />\r\n+                                <Grid container spacing={1} mt={1}>\r\n+                                    <Grid item>\r\n+                                        <Button variant=\"contained\" color=\"secondary\" onClick={handleClear2}>\r\n+                                            Clear Signature\r\n+                                        </Button>\r\n+                                    </Grid>\r\n+                                    <Grid item>\r\n+                                        <Button variant=\"contained\" color=\"primary\" onClick={handleSave2}>\r\n+                                            Save Signature\r\n+                                        </Button>\r\n+                                    </Grid>\r\n+\r\n+                                </Grid>\r\n+\r\n+\r\n+                            </Grid>\r\n+                        </Grid>\r\n+                        <Grid container p={1}>\r\n+                            <Divider sx={{ mt: 4, width: '100%' }} />\r\n+                        </Grid>\r\n+                        <Typography variant=\"h5\" fontWeight=\"bold\" mb={2} p={2}>\r\n                             Patient Consent\r\n                         </Typography>\r\n \r\n                       \r\n"
                },
                {
                    "date": 1743297494300,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1515,10 +1515,10 @@\n                                     label=\"Details\"\r\n                                     size=\"small\"\r\n                                     \r\n                                     placeholder=\"Details\"\r\n-                                    error={errors?.details?.message}\r\n-                                    register={register(\"details\", { required: false })}\r\n+                                    error={errors?.effectdetails?.message}\r\n+                                    register={register(\"effectdetails\", { required: false })}\r\n                                     multiline\r\n                                     rows={4}\r\n                                 />\r\n                             </Grid>\r\n"
                },
                {
                    "date": 1743297501383,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1521,37 +1521,9 @@\n                                     multiline\r\n                                     rows={4}\r\n                                 />\r\n                             </Grid>\r\n-                            {/* Signature Canvas */}\r\n-                            <Grid item xs={6} mt={2}>\r\n-                                <Typography>Patient Signature:</Typography>\r\n-                                <SignatureCanvas\r\n-                                    ref={sigCanvasNew}\r\n-                                    penColor=\"black\"\r\n-                                    canvasProps={{\r\n-                                        width: 300,\r\n-                                        height: 150,\r\n-                                        className: \"sigCanvas\",\r\n-                                        style: { border: \"1px dashed black\" },\r\n-                                    }}\r\n-                                />\r\n-                                <Grid container spacing={1} mt={1}>\r\n-                                    <Grid item>\r\n-                                        <Button variant=\"contained\" color=\"secondary\" onClick={handleClear2}>\r\n-                                            Clear Signature\r\n-                                        </Button>\r\n-                                    </Grid>\r\n-                                    <Grid item>\r\n-                                        <Button variant=\"contained\" color=\"primary\" onClick={handleSave2}>\r\n-                                            Save Signature\r\n-                                        </Button>\r\n-                                    </Grid>\r\n-\r\n-                                </Grid>\r\n-\r\n-\r\n-                            </Grid>\r\n+                            \r\n                         </Grid>\r\n                         <Grid container p={1}>\r\n                             <Divider sx={{ mt: 4, width: '100%' }} />\r\n                         </Grid>\r\n"
                },
                {
                    "date": 1743297535264,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1662,15 +1662,15 @@\n                                             register={register(`records.${index}.description`)}\r\n                                         />\r\n                                     </Grid>\r\n                                     {/* Remove Button (only for additional fields) */}\r\n-                                    <Grid item xs={1}>\r\n+                                    {/* <Grid item xs={1}>\r\n                                         {index > 0 && (\r\n                                             <IconButton color=\"error\" onClick={() => remove(index)}>\r\n                                                 <DeleteIcon />\r\n                                             </IconButton>\r\n                                         )}\r\n-                                    </Grid>\r\n+                                    </Grid> */}\r\n                                 </Grid>\r\n                             ))}\r\n                         </LocalizationProvider>\r\n \r\n"
                },
                {
                    "date": 1743297543480,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1801,9 +1801,9 @@\n                                                 }}\r\n                                             >\r\n                                                 {file.split(\"/\").pop()}\r\n                                             </Typography>\r\n-                                            <Box sx={{ position: \"absolute\", top: 0, right: 0 }}>\r\n+                                            {/* <Box sx={{ position: \"absolute\", top: 0, right: 0 }}>\r\n                                                 <IconButton\r\n                                                     onClick={() => handleRemoveImage(index)}\r\n                                                     sx={{\r\n                                                         backgroundColor: \"rgba(0,0,0,0.6)\",\r\n@@ -1816,9 +1816,9 @@\n                                                     }}\r\n                                                 >\r\n                                                     <CloseIcon fontSize=\"small\" />\r\n                                                 </IconButton>\r\n-                                            </Box>\r\n+                                            </Box> */}\r\n                                         </Box>\r\n                                     ))}\r\n                             </Box>\r\n                         </Grid>\r\n"
                },
                {
                    "date": 1743297550596,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1937,9 +1937,9 @@\n                                                 }}\r\n                                             >\r\n                                                 {file.split(\"/\").pop()}\r\n                                             </Typography>\r\n-                                            <Box sx={{ position: \"absolute\", top: 0, right: 0 }}>\r\n+                                            {/* <Box sx={{ position: \"absolute\", top: 0, right: 0 }}>\r\n                                                 <IconButton\r\n                                                     onClick={() => handleRemoveImage2(index)}\r\n                                                     sx={{\r\n                                                         backgroundColor: \"rgba(0,0,0,0.6)\",\r\n@@ -1952,9 +1952,9 @@\n                                                     }}\r\n                                                 >\r\n                                                     <CloseIcon fontSize=\"small\" />\r\n                                                 </IconButton>\r\n-                                            </Box>\r\n+                                            </Box> */}\r\n                                         </Box>\r\n                                     ))}\r\n                             </Box>\r\n                         </Grid>\r\n"
                },
                {
                    "date": 1743297561030,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2073,9 +2073,9 @@\n                                                 }}\r\n                                             >\r\n                                                 {file.split(\"/\").pop()}\r\n                                             </Typography>\r\n-                                            <Box sx={{ position: \"absolute\", top: 0, right: 0 }}>\r\n+                                            {/* <Box sx={{ position: \"absolute\", top: 0, right: 0 }}>\r\n                                                 <IconButton\r\n                                                     onClick={() => handleRemoveImage3(index)}\r\n                                                     sx={{\r\n                                                         backgroundColor: \"rgba(0,0,0,0.6)\",\r\n@@ -2088,9 +2088,9 @@\n                                                     }}\r\n                                                 >\r\n                                                     <CloseIcon fontSize=\"small\" />\r\n                                                 </IconButton>\r\n-                                            </Box>\r\n+                                            </Box> */}\r\n                                         </Box>\r\n                                     ))}\r\n                             </Box>\r\n                         </Grid>\r\n@@ -2174,15 +2174,15 @@\n                                         </Grid>\r\n                                     </Grid>\r\n \r\n                                     {/* Remove Button */}\r\n-                                    <Grid item xs={1} display=\"flex\" justifyContent=\"flex-end\">\r\n+                                    {/* <Grid item xs={1} display=\"flex\" justifyContent=\"flex-end\">\r\n                                         {furtherFields.length > 1 && (\r\n                                             <IconButton color=\"error\" onClick={() => removeFurther(index)}>\r\n                                                 <DeleteIcon />\r\n                                             </IconButton>\r\n                                         )}\r\n-                                    </Grid>\r\n+                                    </Grid> */}\r\n                                 </Grid>\r\n                             ))}\r\n                         </LocalizationProvider>\r\n \r\n"
                },
                {
                    "date": 1743297582660,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2184,14 +2184,14 @@\n                                     </Grid> */}\r\n                                 </Grid>\r\n                             ))}\r\n                         </LocalizationProvider>\r\n-\r\n+{/* \r\n                         <Grid p={2}>\r\n                             <Button variant=\"contained\" color=\"secondary\" onClick={() => appendFurther({ date: null, sign: \"\" })} sx={{ mt: 2 }}>\r\n                                 Add More Further Records\r\n                             </Button>\r\n-                        </Grid>\r\n+                        </Grid> */}\r\n                         <Grid container p={1}>\r\n                             <Divider sx={{ mt: 4, width: '100%' }} />\r\n                         </Grid>\r\n                         <Grid item xs={6} mt={2}><InputField\r\n"
                },
                {
                    "date": 1743297597601,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2209,9 +2209,9 @@\n                             })}\r\n                         /></Grid>\r\n                     </Grid>\r\n                     <Box sx={{ display: 'flex', justifyContent: 'flex-end', width: '100%', mt: 2 }}>\r\n-                        <PrimaryButton loader={loader} disabled={loader} type={'submit'} title={\"Update\"} />\r\n+                        <PrimaryButton loader={loader} disabled={loader} type={'submit'} title={\"Submit FOrm\"} />\r\n                     </Box>\r\n                 </Box>\r\n             </Paper>\r\n         </div >\r\n"
                },
                {
                    "date": 1743297617434,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -674,21 +674,21 @@\n     useEffect(() => {\r\n         getPatients()\r\n         getDocuments()\r\n     }, [])\r\n-    useEffect(() => {\r\n-        // Disable drawing on the single canvas\r\n-        if (sigCanvas.current) {\r\n-            sigCanvas.current.off();\r\n-        }\r\n+    // useEffect(() => {\r\n+    //     // Disable drawing on the single canvas\r\n+    //     if (sigCanvas.current) {\r\n+    //         sigCanvas.current.off();\r\n+    //     }\r\n \r\n-        // Disable drawing on all multiple canvases\r\n-        signCanvasRefs.current.forEach((canvas) => {\r\n-            if (canvas) {\r\n-                canvas.off();\r\n-            }\r\n-        });\r\n-    }, []);\r\n+    //     // Disable drawing on all multiple canvases\r\n+    //     signCanvasRefs.current.forEach((canvas) => {\r\n+    //         if (canvas) {\r\n+    //             canvas.off();\r\n+    //         }\r\n+    //     });\r\n+    // }, []);\r\n     const getData = async () => {\r\n         try {\r\n             let params = {\r\n                 id: id,\r\n@@ -2209,9 +2209,9 @@\n                             })}\r\n                         /></Grid>\r\n                     </Grid>\r\n                     <Box sx={{ display: 'flex', justifyContent: 'flex-end', width: '100%', mt: 2 }}>\r\n-                        <PrimaryButton loader={loader} disabled={loader} type={'submit'} title={\"Submit FOrm\"} />\r\n+                        <PrimaryButton loader={loader} disabled={loader} type={'submit'} title={\"Submit Form\"} />\r\n                     </Box>\r\n                 </Box>\r\n             </Paper>\r\n         </div >\r\n"
                },
                {
                    "date": 1743297692926,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -191,9 +191,9 @@\n     };\r\n     const handleClear2 = () => {\r\n         if (sigCanvasNew.current) {\r\n             sigCanvasNew.current.clear();\r\n-            \r\n+\r\n         }\r\n     };\r\n     const [permissions, setPermissions] = useState({\r\n         marketing: \"\",\r\n@@ -335,10 +335,18 @@\n                 treatment_record: formData?.records,\r\n                 extra_notes: getValues('extranotes'),\r\n                 permission_marketing: permissions?.marketing,\r\n                 offers: permissions?.offers,\r\n+                side_effect: {\r\n+                    details: \"Possible redness after treatment\"\r\n+                },\r\n \r\n+                patient_consent: {\r\n+                    details: \"Patient agreed to proceed with treatment.\",\r\n+                    sign: \"base64EncodedSignatureOrImageUrl\"\r\n+                },\r\n \r\n+\r\n             };\r\n             console.log(obj);\r\n \r\n             const promise = ApiServices.UpdateForm(obj);\r\n@@ -779,10 +787,10 @@\n \r\n \r\n     return (\r\n         <div>\r\n-            <Box sx={{display:'flex',justifyContent:'center'}}>\r\n-            <Box component={'img'} src={Images.logo} width={'200px'} sx={{textAlign:'center'}}></Box>\r\n+            <Box sx={{ display: 'flex', justifyContent: 'center' }}>\r\n+                <Box component={'img'} src={Images.logo} width={'200px'} sx={{ textAlign: 'center' }}></Box>\r\n             </Box>\r\n             <Paper sx={{ width: \"90%\", overflow: \"hidden\", boxShadow: 'none', backgroundColor: '#eff6ff', borderRadius: '12px', margin: '40px auto' }}>\r\n \r\n \r\n@@ -806,9 +814,9 @@\n \r\n                                 Select Form :\r\n                             </InputLabel>\r\n                             <SelectField\r\n-                            disabled={true}\r\n+                                disabled={true}\r\n                                 size={'small'}\r\n                                 newLabel={'Select Form'}\r\n                                 fullWidth={true}\r\n                                 options={[]}\r\n@@ -1352,9 +1360,9 @@\n                         <Grid container spacing={2} p={2}>\r\n                             {/* Patient Concerns */}\r\n                             <Grid item xs={6} mt={2}>\r\n                                 <InputField\r\n-                                   disabled={true}\r\n+                                    disabled={true}\r\n                                     label=\"Patient concerns\"\r\n                                     size=\"small\"\r\n                                     placeholder=\"Patient concerns\"\r\n                                     error={errors?.patientConcerns?.message}\r\n@@ -1366,9 +1374,9 @@\n \r\n                             {/* Patient Goal */}\r\n                             <Grid item xs={6} mt={2}>\r\n                                 <InputField\r\n-                                   disabled={true}\r\n+                                    disabled={true}\r\n                                     label=\"Patient goal\"\r\n                                     size=\"small\"\r\n                                     placeholder=\"Patient goal\"\r\n                                     error={errors?.patientGoal?.message}\r\n@@ -1380,9 +1388,9 @@\n \r\n                             {/* Advised Plan/Product */}\r\n                             <Grid item xs={6} mt={2}>\r\n                                 <InputField\r\n-                                   disabled={true}\r\n+                                    disabled={true}\r\n                                     label=\"Advised Plan/product\"\r\n                                     size=\"small\"\r\n                                     placeholder=\"Advised Plan/product\"\r\n                                     error={errors?.advisedPlan?.message}\r\n@@ -1394,9 +1402,9 @@\n \r\n                             {/* Expected Result */}\r\n                             <Grid item xs={6} mt={2}>\r\n                                 <InputField\r\n-                                   disabled={true}\r\n+                                    disabled={true}\r\n                                     label=\"Expected Result\"\r\n                                     size=\"small\"\r\n                                     placeholder=\"Expected Result\"\r\n                                     error={errors?.expectedResult?.message}\r\n@@ -1426,9 +1434,9 @@\n                                                 }}>\r\n                                                     Patient Date :*\r\n                                                 </InputLabel>\r\n                                                 <Controller\r\n-                                                   disabled={true}\r\n+                                                    disabled={true}\r\n                                                     name=\"patientDate\"\r\n                                                     control={control}\r\n                                                     rules={{ required: \"Please select a date\" }}\r\n                                                     render={({ field }) => (\r\n@@ -1504,44 +1512,44 @@\n                         <Typography variant=\"h5\" fontWeight=\"bold\" mb={2} p={2}>\r\n                             Side Effects\r\n                         </Typography>\r\n \r\n-                      \r\n-                       \r\n+\r\n+\r\n                         <Grid container spacing={5} p={2} alignItems=\"center\">\r\n-                            \r\n-                        <Grid item xs={6} mt={2}>\r\n+\r\n+                            <Grid item xs={6} mt={2}>\r\n                                 <InputField\r\n-                                   disabled={true}\r\n+                                    disabled={true}\r\n                                     label=\"Details\"\r\n                                     size=\"small\"\r\n-                                    \r\n+\r\n                                     placeholder=\"Details\"\r\n                                     error={errors?.effectdetails?.message}\r\n                                     register={register(\"effectdetails\", { required: false })}\r\n                                     multiline\r\n                                     rows={4}\r\n                                 />\r\n                             </Grid>\r\n-                            \r\n+\r\n                         </Grid>\r\n                         <Grid container p={1}>\r\n                             <Divider sx={{ mt: 4, width: '100%' }} />\r\n                         </Grid>\r\n                         <Typography variant=\"h5\" fontWeight=\"bold\" mb={2} p={2}>\r\n                             Patient Consent\r\n                         </Typography>\r\n \r\n-                      \r\n-                       \r\n+\r\n+\r\n                         <Grid container spacing={5} p={2} alignItems=\"center\">\r\n-                            \r\n-                        <Grid item xs={6} mt={2}>\r\n+\r\n+                            <Grid item xs={6} mt={2}>\r\n                                 <InputField\r\n-                                   disabled={true}\r\n+                                    disabled={true}\r\n                                     label=\"Details\"\r\n                                     size=\"small\"\r\n-                                    \r\n+\r\n                                     placeholder=\"Details\"\r\n                                     error={errors?.details?.message}\r\n                                     register={register(\"details\", { required: false })}\r\n                                     multiline\r\n@@ -1640,9 +1648,9 @@\n \r\n                                     {/* Amount Field */}\r\n                                     <Grid item xs={3} mt={2}>\r\n                                         <InputField\r\n-                                           disabled={true}\r\n+                                            disabled={true}\r\n                                             label=\"Amount\"\r\n                                             placeholder=\"Order Amount\"\r\n                                             size=\"small\"\r\n                                             register={register(`records.${index}.amount`)}\r\n@@ -1653,9 +1661,9 @@\n \r\n                                     {/* Description Field */}\r\n                                     <Grid item xs={4}>\r\n                                         <InputField\r\n-                                           disabled={true}\r\n+                                            disabled={true}\r\n                                             label=\"Description\"\r\n                                             multiline\r\n                                             rows={3}\r\n                                             placeholder=\"Description\"\r\n@@ -2184,9 +2192,9 @@\n                                     </Grid> */}\r\n                                 </Grid>\r\n                             ))}\r\n                         </LocalizationProvider>\r\n-{/* \r\n+                        {/* \r\n                         <Grid p={2}>\r\n                             <Button variant=\"contained\" color=\"secondary\" onClick={() => appendFurther({ date: null, sign: \"\" })} sx={{ mt: 2 }}>\r\n                                 Add More Further Records\r\n                             </Button>\r\n@@ -2194,9 +2202,9 @@\n                         <Grid container p={1}>\r\n                             <Divider sx={{ mt: 4, width: '100%' }} />\r\n                         </Grid>\r\n                         <Grid item xs={6} mt={2}><InputField\r\n-                           disabled={true}\r\n+                            disabled={true}\r\n                             label={\"Notes :\"}\r\n                             multiline\r\n                             rows={3}\r\n                             size={'small'}\r\n"
                },
                {
                    "date": 1743297703051,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -336,9 +336,9 @@\n                 extra_notes: getValues('extranotes'),\r\n                 permission_marketing: permissions?.marketing,\r\n                 offers: permissions?.offers,\r\n                 side_effect: {\r\n-                    details: \"Possible redness after treatment\"\r\n+                    details:getValues('effectdetails')\r\n                 },\r\n \r\n                 patient_consent: {\r\n                     details: \"Patient agreed to proceed with treatment.\",\r\n"
                },
                {
                    "date": 1743297711111,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -340,9 +340,9 @@\n                     details:getValues('effectdetails')\r\n                 },\r\n \r\n                 patient_consent: {\r\n-                    details: \"Patient agreed to proceed with treatment.\",\r\n+                    details: getValues('details'),\r\n                     sign: \"base64EncodedSignatureOrImageUrl\"\r\n                 },\r\n \r\n \r\n"
                },
                {
                    "date": 1743297722540,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -341,9 +341,9 @@\n                 },\r\n \r\n                 patient_consent: {\r\n                     details: getValues('details'),\r\n-                    sign: \"base64EncodedSignatureOrImageUrl\"\r\n+                    sign: consentSign\r\n                 },\r\n \r\n \r\n             };\r\n"
                },
                {
                    "date": 1743297850571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2217,9 +2217,9 @@\n                             })}\r\n                         /></Grid>\r\n                     </Grid>\r\n                     <Box sx={{ display: 'flex', justifyContent: 'flex-end', width: '100%', mt: 2 }}>\r\n-                        <PrimaryButton loader={loader} disabled={loader} type={'submit'} title={\"Submit Form\"} />\r\n+                        <PrimaryButton loader={loader} disabled={loader ||  formData?.is_completed} type={'submit'} title={formData?.is_completed ? 'Submitted' : \"Submit Form\"} />\r\n                     </Box>\r\n                 </Box>\r\n             </Paper>\r\n         </div >\r\n"
                },
                {
                    "date": 1743297883660,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1360,9 +1360,9 @@\n                         <Grid container spacing={2} p={2}>\r\n                             {/* Patient Concerns */}\r\n                             <Grid item xs={6} mt={2}>\r\n                                 <InputField\r\n-                                    disabled={true}\r\n+                                \r\n                                     label=\"Patient concerns\"\r\n                                     size=\"small\"\r\n                                     placeholder=\"Patient concerns\"\r\n                                     error={errors?.patientConcerns?.message}\r\n"
                },
                {
                    "date": 1743297895167,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1544,9 +1544,9 @@\n                         <Grid container spacing={5} p={2} alignItems=\"center\">\r\n \r\n                             <Grid item xs={6} mt={2}>\r\n                                 <InputField\r\n-                                    disabled={true}\r\n+                                    \r\n                                     label=\"Details\"\r\n                                     size=\"small\"\r\n \r\n                                     placeholder=\"Details\"\r\n"
                },
                {
                    "date": 1743297982469,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -288,8 +288,9 @@\n         }\r\n     };\r\n     const UpdateConsentForm = async (formData) => {\r\n         console.log(formData);\r\n+console.log(consentSign,signature);\r\n \r\n         setLoader(true);\r\n         try {\r\n             let obj = {\r\n@@ -1360,9 +1361,9 @@\n                         <Grid container spacing={2} p={2}>\r\n                             {/* Patient Concerns */}\r\n                             <Grid item xs={6} mt={2}>\r\n                                 <InputField\r\n-                                \r\n+                                    disabled={true}\r\n                                     label=\"Patient concerns\"\r\n                                     size=\"small\"\r\n                                     placeholder=\"Patient concerns\"\r\n                                     error={errors?.patientConcerns?.message}\r\n@@ -1518,9 +1519,9 @@\n                         <Grid container spacing={5} p={2} alignItems=\"center\">\r\n \r\n                             <Grid item xs={6} mt={2}>\r\n                                 <InputField\r\n-                                    disabled={true}\r\n+                                  \r\n                                     label=\"Details\"\r\n                                     size=\"small\"\r\n \r\n                                     placeholder=\"Details\"\r\n"
                },
                {
                    "date": 1743298011370,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -288,9 +288,9 @@\n         }\r\n     };\r\n     const UpdateConsentForm = async (formData) => {\r\n         console.log(formData);\r\n-console.log(consentSign,signature);\r\n+console.log(consentSign,signature,furtherFields);\r\n \r\n         setLoader(true);\r\n         try {\r\n             let obj = {\r\n"
                },
                {
                    "date": 1743298033408,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -288,9 +288,9 @@\n         }\r\n     };\r\n     const UpdateConsentForm = async (formData) => {\r\n         console.log(formData);\r\n-console.log(consentSign,signature,furtherFields);\r\n+        console.log(consentSign, signature);\r\n \r\n         setLoader(true);\r\n         try {\r\n             let obj = {\r\n@@ -337,9 +337,9 @@\n                 extra_notes: getValues('extranotes'),\r\n                 permission_marketing: permissions?.marketing,\r\n                 offers: permissions?.offers,\r\n                 side_effect: {\r\n-                    details:getValues('effectdetails')\r\n+                    details: getValues('effectdetails')\r\n                 },\r\n \r\n                 patient_consent: {\r\n                     details: getValues('details'),\r\n@@ -1519,9 +1519,9 @@\n                         <Grid container spacing={5} p={2} alignItems=\"center\">\r\n \r\n                             <Grid item xs={6} mt={2}>\r\n                                 <InputField\r\n-                                  \r\n+\r\n                                     label=\"Details\"\r\n                                     size=\"small\"\r\n \r\n                                     placeholder=\"Details\"\r\n@@ -1545,9 +1545,9 @@\n                         <Grid container spacing={5} p={2} alignItems=\"center\">\r\n \r\n                             <Grid item xs={6} mt={2}>\r\n                                 <InputField\r\n-                                    \r\n+\r\n                                     label=\"Details\"\r\n                                     size=\"small\"\r\n \r\n                                     placeholder=\"Details\"\r\n@@ -2218,9 +2218,9 @@\n                             })}\r\n                         /></Grid>\r\n                     </Grid>\r\n                     <Box sx={{ display: 'flex', justifyContent: 'flex-end', width: '100%', mt: 2 }}>\r\n-                        <PrimaryButton loader={loader} disabled={loader ||  formData?.is_completed} type={'submit'} title={formData?.is_completed ? 'Submitted' : \"Submit Form\"} />\r\n+                        <PrimaryButton loader={loader} disabled={loader || formData?.is_completed} type={'submit'} title={formData?.is_completed ? 'Submitted' : \"Submit Form\"} />\r\n                     </Box>\r\n                 </Box>\r\n             </Paper>\r\n         </div >\r\n"
                },
                {
                    "date": 1743298086562,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -289,11 +289,16 @@\n     };\r\n     const UpdateConsentForm = async (formData) => {\r\n         console.log(formData);\r\n         console.log(consentSign, signature);\r\n-\r\n-        setLoader(true);\r\n+        if (consentSign.includes(\"cosmetic\") && signature.includes(\"cosmetic\")) {\r\n+            console.log(consentSign, signature);\r\n+          } else {\r\n+            console.error(\"Error: Both values must include 'cosmetic'\");\r\n+          }\r\n+      \r\n         try {\r\n+            setLoader(true);\r\n             let obj = {\r\n                 _id: id,\r\n                 patient_id: patientType == 'existing' ? selectedPatient?.id : null,\r\n                 form_id: null,\r\n"
                },
                {
                    "date": 1743298099949,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -290,9 +290,9 @@\n     const UpdateConsentForm = async (formData) => {\r\n         console.log(formData);\r\n         console.log(consentSign, signature);\r\n         if (consentSign.includes(\"cosmetic\") && signature.includes(\"cosmetic\")) {\r\n-            console.log(consentSign, signature);\r\n+            alert(consentSign, signature);\r\n           } else {\r\n             console.error(\"Error: Both values must include 'cosmetic'\");\r\n           }\r\n       \r\n"
                },
                {
                    "date": 1743298106042,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -290,9 +290,9 @@\n     const UpdateConsentForm = async (formData) => {\r\n         console.log(formData);\r\n         console.log(consentSign, signature);\r\n         if (consentSign.includes(\"cosmetic\") && signature.includes(\"cosmetic\")) {\r\n-            alert(consentSign, signature);\r\n+            alert('consentSign', 'signature');\r\n           } else {\r\n             console.error(\"Error: Both values must include 'cosmetic'\");\r\n           }\r\n       \r\n"
                },
                {
                    "date": 1743298123313,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -295,96 +295,96 @@\n           } else {\r\n             console.error(\"Error: Both values must include 'cosmetic'\");\r\n           }\r\n       \r\n-        try {\r\n-            setLoader(true);\r\n-            let obj = {\r\n-                _id: id,\r\n-                patient_id: patientType == 'existing' ? selectedPatient?.id : null,\r\n-                form_id: null,\r\n-                aftercare_document: patientType == 'existing' ? selectedDocument?._id : null,\r\n-                treatment_date: getValues('treatmentDate'),\r\n-                consultation_date: getValues('consultationDate'),\r\n-                first_name: getValues('fname'),\r\n-                last_name: getValues('lname'),\r\n-                dob: getValues('selectedDate'),\r\n-                address: getValues('address'),\r\n-                email: getValues('email'),\r\n-                post_code: getValues('post'),\r\n-                phone: getValues('phone'),\r\n-                notes: getValues('notes'),\r\n-                picture: imageURL,\r\n-                kin_details: {\r\n-                    name: getValues('name'),\r\n-                    address: getValues('kinaddress'),\r\n-                    email: getValues('kinemail'),\r\n-                    phone: getValues('kinphone'),\r\n-                },\r\n-                general_practitioner: {\r\n-                    name: getValues('genname'),\r\n-                    address: getValues('genaddress'),\r\n-                    email: getValues('genemail'),\r\n-                    phone: getValues('genphone'),\r\n-                },\r\n-                treatment_plan: {\r\n-                    patient_concerns: getValues('patientConcerns'),\r\n-                    patient_goals: getValues('patientGoal'),\r\n-                    advised_plan: getValues('advisedPlan'),\r\n-                    expected_result: getValues('expectedResult'),\r\n-                    date: getValues('patientDate'),\r\n-                    patient_sign: signature\r\n-                },\r\n-                batch_images: uploadedImages,\r\n-                before_images: beforeImages,\r\n-                after_images: afterImages,\r\n-                further_treatment: formData?.furtherFields,\r\n-                treatment_record: formData?.records,\r\n-                extra_notes: getValues('extranotes'),\r\n-                permission_marketing: permissions?.marketing,\r\n-                offers: permissions?.offers,\r\n-                side_effect: {\r\n-                    details: getValues('effectdetails')\r\n-                },\r\n+        // try {\r\n+        //     setLoader(true);\r\n+        //     let obj = {\r\n+        //         _id: id,\r\n+        //         patient_id: patientType == 'existing' ? selectedPatient?.id : null,\r\n+        //         form_id: null,\r\n+        //         aftercare_document: patientType == 'existing' ? selectedDocument?._id : null,\r\n+        //         treatment_date: getValues('treatmentDate'),\r\n+        //         consultation_date: getValues('consultationDate'),\r\n+        //         first_name: getValues('fname'),\r\n+        //         last_name: getValues('lname'),\r\n+        //         dob: getValues('selectedDate'),\r\n+        //         address: getValues('address'),\r\n+        //         email: getValues('email'),\r\n+        //         post_code: getValues('post'),\r\n+        //         phone: getValues('phone'),\r\n+        //         notes: getValues('notes'),\r\n+        //         picture: imageURL,\r\n+        //         kin_details: {\r\n+        //             name: getValues('name'),\r\n+        //             address: getValues('kinaddress'),\r\n+        //             email: getValues('kinemail'),\r\n+        //             phone: getValues('kinphone'),\r\n+        //         },\r\n+        //         general_practitioner: {\r\n+        //             name: getValues('genname'),\r\n+        //             address: getValues('genaddress'),\r\n+        //             email: getValues('genemail'),\r\n+        //             phone: getValues('genphone'),\r\n+        //         },\r\n+        //         treatment_plan: {\r\n+        //             patient_concerns: getValues('patientConcerns'),\r\n+        //             patient_goals: getValues('patientGoal'),\r\n+        //             advised_plan: getValues('advisedPlan'),\r\n+        //             expected_result: getValues('expectedResult'),\r\n+        //             date: getValues('patientDate'),\r\n+        //             patient_sign: signature\r\n+        //         },\r\n+        //         batch_images: uploadedImages,\r\n+        //         before_images: beforeImages,\r\n+        //         after_images: afterImages,\r\n+        //         further_treatment: formData?.furtherFields,\r\n+        //         treatment_record: formData?.records,\r\n+        //         extra_notes: getValues('extranotes'),\r\n+        //         permission_marketing: permissions?.marketing,\r\n+        //         offers: permissions?.offers,\r\n+        //         side_effect: {\r\n+        //             details: getValues('effectdetails')\r\n+        //         },\r\n \r\n-                patient_consent: {\r\n-                    details: getValues('details'),\r\n-                    sign: consentSign\r\n-                },\r\n+        //         patient_consent: {\r\n+        //             details: getValues('details'),\r\n+        //             sign: consentSign\r\n+        //         },\r\n \r\n \r\n-            };\r\n-            console.log(obj);\r\n+        //     };\r\n+        //     console.log(obj);\r\n \r\n-            const promise = ApiServices.UpdateForm(obj);\r\n+        //     const promise = ApiServices.UpdateForm(obj);\r\n \r\n-            // Handle the API response properly\r\n-            const response = await promise;\r\n-            console.log(response);\r\n+        //     // Handle the API response properly\r\n+        //     const response = await promise;\r\n+        //     console.log(response);\r\n \r\n-            showPromiseToast(\r\n-                promise,\r\n-                \"Saving...\",\r\n-                \"Added Successfully\",\r\n-                \"Something Went Wrong\"\r\n-            );\r\n+        //     showPromiseToast(\r\n+        //         promise,\r\n+        //         \"Saving...\",\r\n+        //         \"Added Successfully\",\r\n+        //         \"Something Went Wrong\"\r\n+        //     );\r\n \r\n \r\n-            if (response?.responseCode === 200) {\r\n-                console.log(response);\r\n-                setImageURL(null)\r\n-                navigate('/consent-forms')\r\n+        //     if (response?.responseCode === 200) {\r\n+        //         console.log(response);\r\n+        //         setImageURL(null)\r\n+        //         navigate('/consent-forms')\r\n \r\n \r\n-            }\r\n+        //     }\r\n \r\n-        } catch (error) {\r\n-            console.log(error);\r\n-            showErrorToast(error)\r\n-        } finally {\r\n+        // } catch (error) {\r\n+        //     console.log(error);\r\n+        //     showErrorToast(error)\r\n+        // } finally {\r\n \r\n-            setLoader(false);\r\n-        }\r\n+        //     setLoader(false);\r\n+        // }\r\n     };\r\n     console.log(watch());\r\n \r\n     const SendOtp = async (val) => {\r\n"
                },
                {
                    "date": 1743298303685,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -122,9 +122,9 @@\n     // Handle Save Signature\r\n     const handleSave = async () => {\r\n         if (sigCanvas.current) {\r\n             const dataURL = await sigCanvas.current.toDataURL();\r\n-            setSignature(dataURL);\r\n+          \r\n             try {\r\n                 const file = dataURL;\r\n                 if (file) {\r\n                     setValue(\"image\", file, { shouldValidate: true }); // Set value and trigger validation\r\n"
                },
                {
                    "date": 1743298310794,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -153,9 +153,9 @@\n     };\r\n     const handleSave2 = async () => {\r\n         if (sigCanvasNew.current) {\r\n             const dataURL = await sigCanvasNew.current.toDataURL();\r\n-            setSignature(dataURL);\r\n+         \r\n             try {\r\n                 const file = dataURL;\r\n                 if (file) {\r\n                     setValue(\"image\", file, { shouldValidate: true }); // Set value and trigger validation\r\n"
                },
                {
                    "date": 1743298358065,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -288,9 +288,9 @@\n         }\r\n     };\r\n     const UpdateConsentForm = async (formData) => {\r\n         console.log(formData);\r\n-        console.log(consentSign, signature);\r\n+        console.log(furtherFields);\r\n         if (consentSign.includes(\"cosmetic\") && signature.includes(\"cosmetic\")) {\r\n             alert('consentSign', 'signature');\r\n           } else {\r\n             console.error(\"Error: Both values must include 'cosmetic'\");\r\n"
                },
                {
                    "date": 1743298430393,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -288,10 +288,10 @@\n         }\r\n     };\r\n     const UpdateConsentForm = async (formData) => {\r\n         console.log(formData);\r\n-        console.log(furtherFields);\r\n-        if (consentSign.includes(\"cosmetic\") && signature.includes(\"cosmetic\")) {\r\n+        console.log(formData?.furtherFields);\r\n+        if (consentSign.includes(\"cosmetic\") && signature.includes(\"cosmetic\") && formData?.furtherFields?.every(item => item.sign.includes(\"cosmetic\"))) {\r\n             alert('consentSign', 'signature');\r\n           } else {\r\n             console.error(\"Error: Both values must include 'cosmetic'\");\r\n           }\r\n"
                },
                {
                    "date": 1743298450771,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -291,11 +291,9 @@\n         console.log(formData);\r\n         console.log(formData?.furtherFields);\r\n         if (consentSign.includes(\"cosmetic\") && signature.includes(\"cosmetic\") && formData?.furtherFields?.every(item => item.sign.includes(\"cosmetic\"))) {\r\n             alert('consentSign', 'signature');\r\n-          } else {\r\n-            console.error(\"Error: Both values must include 'cosmetic'\");\r\n-          }\r\n+          \r\n       \r\n         // try {\r\n         //     setLoader(true);\r\n         //     let obj = {\r\n@@ -383,8 +381,9 @@\n         // } finally {\r\n \r\n         //     setLoader(false);\r\n         // }\r\n+        }\r\n     };\r\n     console.log(watch());\r\n \r\n     const SendOtp = async (val) => {\r\n"
                },
                {
                    "date": 1743298469834,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -382,8 +382,11 @@\n \r\n         //     setLoader(false);\r\n         // }\r\n         }\r\n+        else{\r\n+            showErrorToast('Please Sign All Fields')\r\n+        }\r\n     };\r\n     console.log(watch());\r\n \r\n     const SendOtp = async (val) => {\r\n"
                },
                {
                    "date": 1743298513994,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -290,9 +290,9 @@\n     const UpdateConsentForm = async (formData) => {\r\n         console.log(formData);\r\n         console.log(formData?.furtherFields);\r\n         if (consentSign.includes(\"cosmetic\") && signature.includes(\"cosmetic\") && formData?.furtherFields?.every(item => item.sign.includes(\"cosmetic\"))) {\r\n-            alert('consentSign', 'signature');\r\n+            alert('asdasdas')\r\n           \r\n       \r\n         // try {\r\n         //     setLoader(true);\r\n"
                },
                {
                    "date": 1743298529882,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -383,9 +383,9 @@\n         //     setLoader(false);\r\n         // }\r\n         }\r\n         else{\r\n-            showErrorToast('Please Sign All Fields')\r\n+            alert('Please Sign All Fields')\r\n         }\r\n     };\r\n     console.log(watch());\r\n \r\n"
                },
                {
                    "date": 1743298572999,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -288,9 +288,9 @@\n         }\r\n     };\r\n     const UpdateConsentForm = async (formData) => {\r\n         console.log(formData);\r\n-        console.log(formData?.furtherFields);\r\n+        console.log(consentSign.includes(\"cosmetic\") && signature.includes(\"cosmetic\") && formData?.furtherFields?.every(item => item.sign.includes(\"cosmetic\")));\r\n         if (consentSign.includes(\"cosmetic\") && signature.includes(\"cosmetic\") && formData?.furtherFields?.every(item => item.sign.includes(\"cosmetic\"))) {\r\n             alert('asdasdas')\r\n           \r\n       \r\n"
                },
                {
                    "date": 1743298637107,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -288,9 +288,9 @@\n         }\r\n     };\r\n     const UpdateConsentForm = async (formData) => {\r\n         console.log(formData);\r\n-        console.log(consentSign.includes(\"cosmetic\") && signature.includes(\"cosmetic\") && formData?.furtherFields?.every(item => item.sign.includes(\"cosmetic\")));\r\n+        console.log(consentSign.includes(\"cosmetic\") && signature.includes(\"cosmetic\") );\r\n         if (consentSign.includes(\"cosmetic\") && signature.includes(\"cosmetic\") && formData?.furtherFields?.every(item => item.sign.includes(\"cosmetic\"))) {\r\n             alert('asdasdas')\r\n           \r\n       \r\n"
                },
                {
                    "date": 1743298919263,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -288,9 +288,9 @@\n         }\r\n     };\r\n     const UpdateConsentForm = async (formData) => {\r\n         console.log(formData);\r\n-        console.log(consentSign.includes(\"cosmetic\") && signature.includes(\"cosmetic\") );\r\n+        console.log(consentSign?.includes(\"cosmetic\") && signature?.includes(\"cosmetic\") );\r\n         if (consentSign.includes(\"cosmetic\") && signature.includes(\"cosmetic\") && formData?.furtherFields?.every(item => item.sign.includes(\"cosmetic\"))) {\r\n             alert('asdasdas')\r\n           \r\n       \r\n"
                },
                {
                    "date": 1743298933961,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -289,9 +289,9 @@\n     };\r\n     const UpdateConsentForm = async (formData) => {\r\n         console.log(formData);\r\n         console.log(consentSign?.includes(\"cosmetic\") && signature?.includes(\"cosmetic\") );\r\n-        if (consentSign.includes(\"cosmetic\") && signature.includes(\"cosmetic\") && formData?.furtherFields?.every(item => item.sign.includes(\"cosmetic\"))) {\r\n+        if (consentSign?.includes(\"cosmetic\") && signature?.includes(\"cosmetic\") && formData?.furtherFields?.every(item => item.sign.includes(\"cosmetic\"))) {\r\n             alert('asdasdas')\r\n           \r\n       \r\n         // try {\r\n"
                },
                {
                    "date": 1743298942581,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -289,9 +289,9 @@\n     };\r\n     const UpdateConsentForm = async (formData) => {\r\n         console.log(formData);\r\n         console.log(consentSign?.includes(\"cosmetic\") && signature?.includes(\"cosmetic\") );\r\n-        if (consentSign?.includes(\"cosmetic\") && signature?.includes(\"cosmetic\") && formData?.furtherFields?.every(item => item.sign.includes(\"cosmetic\"))) {\r\n+        if (consentSign?.includes(\"cosmetic\") && signature?.includes(\"cosmetic\") && formData?.furtherFields?.every(item => item?.sign?.includes(\"cosmetic\"))) {\r\n             alert('asdasdas')\r\n           \r\n       \r\n         // try {\r\n"
                },
                {
                    "date": 1743298961003,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -383,9 +383,9 @@\n         //     setLoader(false);\r\n         // }\r\n         }\r\n         else{\r\n-            alert('Please Sign All Fields')\r\n+            showErrorToast('Please Sign All Fields')\r\n         }\r\n     };\r\n     console.log(watch());\r\n \r\n"
                },
                {
                    "date": 1743298974354,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -290,9 +290,8 @@\n     const UpdateConsentForm = async (formData) => {\r\n         console.log(formData);\r\n         console.log(consentSign?.includes(\"cosmetic\") && signature?.includes(\"cosmetic\") );\r\n         if (consentSign?.includes(\"cosmetic\") && signature?.includes(\"cosmetic\") && formData?.furtherFields?.every(item => item?.sign?.includes(\"cosmetic\"))) {\r\n-            alert('asdasdas')\r\n           \r\n       \r\n         // try {\r\n         //     setLoader(true);\r\n"
                },
                {
                    "date": 1743299006019,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -292,97 +292,97 @@\n         console.log(consentSign?.includes(\"cosmetic\") && signature?.includes(\"cosmetic\") );\r\n         if (consentSign?.includes(\"cosmetic\") && signature?.includes(\"cosmetic\") && formData?.furtherFields?.every(item => item?.sign?.includes(\"cosmetic\"))) {\r\n           \r\n       \r\n-        // try {\r\n-        //     setLoader(true);\r\n-        //     let obj = {\r\n-        //         _id: id,\r\n-        //         patient_id: patientType == 'existing' ? selectedPatient?.id : null,\r\n-        //         form_id: null,\r\n-        //         aftercare_document: patientType == 'existing' ? selectedDocument?._id : null,\r\n-        //         treatment_date: getValues('treatmentDate'),\r\n-        //         consultation_date: getValues('consultationDate'),\r\n-        //         first_name: getValues('fname'),\r\n-        //         last_name: getValues('lname'),\r\n-        //         dob: getValues('selectedDate'),\r\n-        //         address: getValues('address'),\r\n-        //         email: getValues('email'),\r\n-        //         post_code: getValues('post'),\r\n-        //         phone: getValues('phone'),\r\n-        //         notes: getValues('notes'),\r\n-        //         picture: imageURL,\r\n-        //         kin_details: {\r\n-        //             name: getValues('name'),\r\n-        //             address: getValues('kinaddress'),\r\n-        //             email: getValues('kinemail'),\r\n-        //             phone: getValues('kinphone'),\r\n-        //         },\r\n-        //         general_practitioner: {\r\n-        //             name: getValues('genname'),\r\n-        //             address: getValues('genaddress'),\r\n-        //             email: getValues('genemail'),\r\n-        //             phone: getValues('genphone'),\r\n-        //         },\r\n-        //         treatment_plan: {\r\n-        //             patient_concerns: getValues('patientConcerns'),\r\n-        //             patient_goals: getValues('patientGoal'),\r\n-        //             advised_plan: getValues('advisedPlan'),\r\n-        //             expected_result: getValues('expectedResult'),\r\n-        //             date: getValues('patientDate'),\r\n-        //             patient_sign: signature\r\n-        //         },\r\n-        //         batch_images: uploadedImages,\r\n-        //         before_images: beforeImages,\r\n-        //         after_images: afterImages,\r\n-        //         further_treatment: formData?.furtherFields,\r\n-        //         treatment_record: formData?.records,\r\n-        //         extra_notes: getValues('extranotes'),\r\n-        //         permission_marketing: permissions?.marketing,\r\n-        //         offers: permissions?.offers,\r\n-        //         side_effect: {\r\n-        //             details: getValues('effectdetails')\r\n-        //         },\r\n+        try {\r\n+            setLoader(true);\r\n+            let obj = {\r\n+                _id: id,\r\n+                patient_id: patientType == 'existing' ? selectedPatient?.id : null,\r\n+                form_id: null,\r\n+                aftercare_document: patientType == 'existing' ? selectedDocument?._id : null,\r\n+                treatment_date: getValues('treatmentDate'),\r\n+                consultation_date: getValues('consultationDate'),\r\n+                first_name: getValues('fname'),\r\n+                last_name: getValues('lname'),\r\n+                dob: getValues('selectedDate'),\r\n+                address: getValues('address'),\r\n+                email: getValues('email'),\r\n+                post_code: getValues('post'),\r\n+                phone: getValues('phone'),\r\n+                notes: getValues('notes'),\r\n+                picture: imageURL,\r\n+                kin_details: {\r\n+                    name: getValues('name'),\r\n+                    address: getValues('kinaddress'),\r\n+                    email: getValues('kinemail'),\r\n+                    phone: getValues('kinphone'),\r\n+                },\r\n+                general_practitioner: {\r\n+                    name: getValues('genname'),\r\n+                    address: getValues('genaddress'),\r\n+                    email: getValues('genemail'),\r\n+                    phone: getValues('genphone'),\r\n+                },\r\n+                treatment_plan: {\r\n+                    patient_concerns: getValues('patientConcerns'),\r\n+                    patient_goals: getValues('patientGoal'),\r\n+                    advised_plan: getValues('advisedPlan'),\r\n+                    expected_result: getValues('expectedResult'),\r\n+                    date: getValues('patientDate'),\r\n+                    patient_sign: signature\r\n+                },\r\n+                batch_images: uploadedImages,\r\n+                before_images: beforeImages,\r\n+                after_images: afterImages,\r\n+                further_treatment: formData?.furtherFields,\r\n+                treatment_record: formData?.records,\r\n+                extra_notes: getValues('extranotes'),\r\n+                permission_marketing: permissions?.marketing,\r\n+                offers: permissions?.offers,\r\n+                side_effect: {\r\n+                    details: getValues('effectdetails')\r\n+                },\r\n \r\n-        //         patient_consent: {\r\n-        //             details: getValues('details'),\r\n-        //             sign: consentSign\r\n-        //         },\r\n+                patient_consent: {\r\n+                    details: getValues('details'),\r\n+                    sign: consentSign\r\n+                },\r\n \r\n \r\n-        //     };\r\n-        //     console.log(obj);\r\n+            };\r\n+            console.log(obj);\r\n \r\n-        //     const promise = ApiServices.UpdateForm(obj);\r\n+            const promise = ApiServices.UpdateForm(obj);\r\n \r\n-        //     // Handle the API response properly\r\n-        //     const response = await promise;\r\n-        //     console.log(response);\r\n+            // Handle the API response properly\r\n+            const response = await promise;\r\n+            console.log(response);\r\n \r\n-        //     showPromiseToast(\r\n-        //         promise,\r\n-        //         \"Saving...\",\r\n-        //         \"Added Successfully\",\r\n-        //         \"Something Went Wrong\"\r\n-        //     );\r\n+            showPromiseToast(\r\n+                promise,\r\n+                \"Saving...\",\r\n+                \"Added Successfully\",\r\n+                \"Something Went Wrong\"\r\n+            );\r\n \r\n \r\n-        //     if (response?.responseCode === 200) {\r\n-        //         console.log(response);\r\n-        //         setImageURL(null)\r\n-        //         navigate('/consent-forms')\r\n+            if (response?.responseCode === 200) {\r\n+                console.log(response);\r\n+                setImageURL(null)\r\n+                navigate('/consent-forms')\r\n \r\n \r\n-        //     }\r\n+            }\r\n \r\n-        // } catch (error) {\r\n-        //     console.log(error);\r\n-        //     showErrorToast(error)\r\n-        // } finally {\r\n+        } catch (error) {\r\n+            console.log(error);\r\n+            showErrorToast(error)\r\n+        } finally {\r\n \r\n-        //     setLoader(false);\r\n-        // }\r\n+            setLoader(false);\r\n         }\r\n+        }\r\n         else{\r\n             showErrorToast('Please Sign All Fields')\r\n         }\r\n     };\r\n"
                },
                {
                    "date": 1743299014853,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -351,9 +351,9 @@\n \r\n             };\r\n             console.log(obj);\r\n \r\n-            const promise = ApiServices.UpdateForm(obj);\r\n+            const promise = ApiServices.CompleteForm(obj);\r\n \r\n             // Handle the API response properly\r\n             const response = await promise;\r\n             console.log(response);\r\n"
                },
                {
                    "date": 1743299021493,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -368,9 +368,9 @@\n \r\n             if (response?.responseCode === 200) {\r\n                 console.log(response);\r\n                 setImageURL(null)\r\n-                navigate('/consent-forms')\r\n+                \r\n \r\n \r\n             }\r\n \r\n"
                },
                {
                    "date": 1743299233836,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1485,18 +1485,19 @@\n \r\n                             {/* Signature Canvas */}\r\n                             <Grid item xs={6} mt={2}>\r\n                                 <Typography>Patient Signature:</Typography>\r\n-                                <SignatureCanvas\r\n+                                {!signature ? <SignatureCanvas\r\n                                     ref={sigCanvas}\r\n                                     penColor=\"black\"\r\n                                     canvasProps={{\r\n                                         width: 300,\r\n                                         height: 150,\r\n                                         className: \"sigCanvas\",\r\n                                         style: { border: \"1px dashed black\" },\r\n                                     }}\r\n-                                />\r\n+                                /> : <Box component={'img'}>\r\n+                                    </Box>}\r\n                                 <Grid container spacing={1} mt={1}>\r\n                                     <Grid item>\r\n                                         <Button variant=\"contained\" color=\"secondary\" onClick={handleClear}>\r\n                                             Clear Signature\r\n"
                },
                {
                    "date": 1743299244530,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1494,9 +1494,9 @@\n                                         height: 150,\r\n                                         className: \"sigCanvas\",\r\n                                         style: { border: \"1px dashed black\" },\r\n                                     }}\r\n-                                /> : <Box component={'img'}>\r\n+                                /> : <Box component={'img'} src={signature}>\r\n                                     </Box>}\r\n                                 <Grid container spacing={1} mt={1}>\r\n                                     <Grid item>\r\n                                         <Button variant=\"contained\" color=\"secondary\" onClick={handleClear}>\r\n"
                },
                {
                    "date": 1743299253489,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1494,9 +1494,10 @@\n                                         height: 150,\r\n                                         className: \"sigCanvas\",\r\n                                         style: { border: \"1px dashed black\" },\r\n                                     }}\r\n-                                /> : <Box component={'img'} src={signature}>\r\n+                                /> : <Box component={'img'} src={signature} sx={{width: 300,\r\n+                                    height: 150,}}>\r\n                                     </Box>}\r\n                                 <Grid container spacing={1} mt={1}>\r\n                                     <Grid item>\r\n                                         <Button variant=\"contained\" color=\"secondary\" onClick={handleClear}>\r\n"
                },
                {
                    "date": 1743299259881,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1495,9 +1495,9 @@\n                                         className: \"sigCanvas\",\r\n                                         style: { border: \"1px dashed black\" },\r\n                                     }}\r\n                                 /> : <Box component={'img'} src={signature} sx={{width: 300,\r\n-                                    height: 150,}}>\r\n+                                    height: 150, border: \"1px dashed black\"}}>\r\n                                     </Box>}\r\n                                 <Grid container spacing={1} mt={1}>\r\n                                     <Grid item>\r\n                                         <Button variant=\"contained\" color=\"secondary\" onClick={handleClear}>\r\n"
                },
                {
                    "date": 1743299338866,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1567,18 +1567,20 @@\n                             </Grid>\r\n                             {/* Signature Canvas */}\r\n                             <Grid item xs={6} mt={2}>\r\n                                 <Typography>Patient Signature:</Typography>\r\n-                                <SignatureCanvas\r\n+                               {!consentSign ?  <SignatureCanvas\r\n                                     ref={sigCanvasNew}\r\n                                     penColor=\"black\"\r\n                                     canvasProps={{\r\n                                         width: 300,\r\n                                         height: 150,\r\n                                         className: \"sigCanvas\",\r\n                                         style: { border: \"1px dashed black\" },\r\n                                     }}\r\n-                                />\r\n+                                /> : <Box component={'img'} src={signature} sx={{width: 300,\r\n+                                    height: 150, border: \"1px dashed black\"}}>\r\n+                                    </Box>}\r\n                                 <Grid container spacing={1} mt={1}>\r\n                                     <Grid item>\r\n                                         <Button variant=\"contained\" color=\"secondary\" onClick={handleClear2}>\r\n                                             Clear Signature\r\n"
                },
                {
                    "date": 1743299373174,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1576,9 +1576,9 @@\n                                         height: 150,\r\n                                         className: \"sigCanvas\",\r\n                                         style: { border: \"1px dashed black\" },\r\n                                     }}\r\n-                                /> : <Box component={'img'} src={signature} sx={{width: 300,\r\n+                                /> : <Box component={'img'} src={consentSign} sx={{width: 300,\r\n                                     height: 150, border: \"1px dashed black\"}}>\r\n                                     </Box>}\r\n                                 <Grid container spacing={1} mt={1}>\r\n                                     <Grid item>\r\n"
                },
                {
                    "date": 1743299421522,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -727,8 +727,9 @@\n             setValue('patientConcerns', form?.treatment_plan?.patient_concerns)\r\n             setValue('patientGoal', form?.treatment_plan?.patient_goals)\r\n             setValue('advisedPlan', form?.treatment_plan?.advised_plan)\r\n             setValue('expectedResult', form?.treatment_plan?.expected_result)\r\n+            setConsentSign(form?.patient_consent?.sign)\r\n             let recordData = form?.treatment_record?.map((doc) => ({\r\n                 ...doc,\r\n \r\n                 date: dayjs(doc?.date)\r\n"
                },
                {
                    "date": 1743299485420,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1580,9 +1580,9 @@\n                                     }}\r\n                                 /> : <Box component={'img'} src={consentSign} sx={{width: 300,\r\n                                     height: 150, border: \"1px dashed black\"}}>\r\n                                     </Box>}\r\n-                                <Grid container spacing={1} mt={1}>\r\n+                                {!consentSign && <Grid container spacing={1} mt={1}>\r\n                                     <Grid item>\r\n                                         <Button variant=\"contained\" color=\"secondary\" onClick={handleClear2}>\r\n                                             Clear Signature\r\n                                         </Button>\r\n@@ -1592,9 +1592,9 @@\n                                             Save Signature\r\n                                         </Button>\r\n                                     </Grid>\r\n \r\n-                                </Grid>\r\n+                                </Grid>}\r\n \r\n \r\n                             </Grid>\r\n                         </Grid>\r\n"
                },
                {
                    "date": 1743299527634,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1498,9 +1498,9 @@\n                                     }}\r\n                                 /> : <Box component={'img'} src={signature} sx={{width: 300,\r\n                                     height: 150, border: \"1px dashed black\"}}>\r\n                                     </Box>}\r\n-                                <Grid container spacing={1} mt={1}>\r\n+                                {!signature  && <Grid container spacing={1} mt={1}>\r\n                                     <Grid item>\r\n                                         <Button variant=\"contained\" color=\"secondary\" onClick={handleClear}>\r\n                                             Clear Signature\r\n                                         </Button>\r\n@@ -1510,9 +1510,9 @@\n                                             Save Signature\r\n                                         </Button>\r\n                                     </Grid>\r\n \r\n-                                </Grid>\r\n+                                </Grid>}\r\n \r\n \r\n                             </Grid>\r\n                         </Grid>\r\n"
                },
                {
                    "date": 1743299616398,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2171,13 +2171,15 @@\n                                         <Box>\r\n                                             <InputLabel sx={{ fontWeight: 700, fontSize: \"14px\", marginBottom: 1 }}>\r\n                                                 Signature :*\r\n                                             </InputLabel>\r\n-                                            <SignatureCanvas\r\n+                                            {!item?.sign ? <SignatureCanvas\r\n                                                 ref={(el) => (signCanvasRefs.current[index] = el)}\r\n                                                 penColor=\"black\"\r\n                                                 canvasProps={{ width: 300, height: 150, style: { border: \"1px dashed black\" } }}\r\n-                                            />\r\n+                                            /> : <Box component={'img'} src={signature} sx={{width: 300,\r\n+                                                height: 150, border: \"1px dashed black\"}}>\r\n+                                                </Box>}\r\n \r\n                                         </Box>\r\n                                         <Grid container spacing={1} mt={1}>\r\n                                             <Grid item>\r\n"
                },
                {
                    "date": 1743299622044,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2175,9 +2175,9 @@\n                                             {!item?.sign ? <SignatureCanvas\r\n                                                 ref={(el) => (signCanvasRefs.current[index] = el)}\r\n                                                 penColor=\"black\"\r\n                                                 canvasProps={{ width: 300, height: 150, style: { border: \"1px dashed black\" } }}\r\n-                                            /> : <Box component={'img'} src={signature} sx={{width: 300,\r\n+                                            /> : <Box component={'img'} src={item?.sign } sx={{width: 300,\r\n                                                 height: 150, border: \"1px dashed black\"}}>\r\n                                                 </Box>}\r\n \r\n                                         </Box>\r\n"
                },
                {
                    "date": 1743299639222,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2175,14 +2175,14 @@\n                                             {!item?.sign ? <SignatureCanvas\r\n                                                 ref={(el) => (signCanvasRefs.current[index] = el)}\r\n                                                 penColor=\"black\"\r\n                                                 canvasProps={{ width: 300, height: 150, style: { border: \"1px dashed black\" } }}\r\n-                                            /> : <Box component={'img'} src={item?.sign } sx={{width: 300,\r\n+                                            /> : <Box component={'img'} src={item?.sign} sx={{width: 300,\r\n                                                 height: 150, border: \"1px dashed black\"}}>\r\n                                                 </Box>}\r\n \r\n                                         </Box>\r\n-                                        <Grid container spacing={1} mt={1}>\r\n+                                        {!item?.sign  && <Grid container spacing={1} mt={1}>\r\n                                             <Grid item>\r\n                                                 <Button variant=\"contained\" color=\"secondary\" onClick={() => clearSignature(index)}>\r\n                                                     Clear Signature\r\n                                                 </Button>\r\n@@ -2192,9 +2192,9 @@\n                                                     Save Signature\r\n                                                 </Button>\r\n                                             </Grid>\r\n \r\n-                                        </Grid>\r\n+                                        </Grid>}\r\n                                     </Grid>\r\n \r\n                                     {/* Remove Button */}\r\n                                     {/* <Grid item xs={1} display=\"flex\" justifyContent=\"flex-end\">\r\n"
                },
                {
                    "date": 1743364561342,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1358,8 +1358,52 @@\n                                 </FormControl>\r\n                             </Grid>\r\n                         </Grid>\r\n                         <Grid container p={1}>\r\n+                                                    <Divider sx={{ mt: 4, width: '100%' }} />\r\n+                                                </Grid>\r\n+                                                <Typography variant=\"h5\" fontWeight=\"bold\" mb={2} p={2}>\r\n+                                                    Facial Mapping\r\n+                                                </Typography>\r\n+                                                <Grid container spacing={2} p={2}>\r\n+                                                    <Grid item xs={6}>\r\n+                                                        <Typography>Facial Marking:</Typography>\r\n+                                                        <div style={{ position: \"relative\", width: 300, height: 150 }}>\r\n+                                                            <SignatureCanvas\r\n+                                                                ref={sigMarkingRef}\r\n+                                                                penColor=\"red\"\r\n+                                                                canvasProps={{\r\n+                                                                    width: 300,\r\n+                                                                    height: 150,\r\n+                                                                    className: \"sigCanvas\",\r\n+                                                                    style: { border: \"1px dashed black\", background: `url(${Images.girl}) center/cover no-repeat` },\r\n+                                                                }}\r\n+                                                            />\r\n+                                                        </div>\r\n+                                                        <Grid container spacing={1} mt={1}>\r\n+                                                            <Grid item>\r\n+                                                                <Button variant=\"contained\" color=\"secondary\" onClick={handleClearMarking} sx={{ textTransform: 'capitalize' }}>\r\n+                                                                    Clear Marking\r\n+                                                                </Button>\r\n+                                                            </Grid>\r\n+                                                            <Grid item>\r\n+                                                                <Button variant=\"contained\" color=\"primary\" onClick={handleSaveMarking} sx={{ textTransform: 'capitalize' }}>\r\n+                                                                    Save Marking\r\n+                                                                </Button>\r\n+                                                            </Grid>\r\n+                                                        </Grid>\r\n+                                                    </Grid>\r\n+                                                    {markingLoader ? <Grid item display={'flex'} justifyContent={'flex-start'} alignItems={'center'} xs={6}>\r\n+                                                        <CircularProgress size={50} />\r\n+                                                    </Grid> : (\r\n+                                                        <Grid item xs={6}>\r\n+                                                            <Typography>Saved Image:</Typography>\r\n+                                                            <img src={savedImage ? savedImage : Images.girl} alt=\"Marked Face\" style={{ width: 300, height: 150, border: \"1px solid black\" }} />\r\n+                                                        </Grid>\r\n+                                                    )}\r\n+                        \r\n+                                                </Grid>\r\n+                        <Grid container p={1}>\r\n                             <Divider sx={{ mt: 4, width: '100%' }} />\r\n                         </Grid>\r\n                         <Typography variant=\"h5\" fontWeight=\"bold\" mb={2} p={2}>\r\n                             Treatment plan section\r\n"
                },
                {
                    "date": 1743364606845,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,8 +44,66 @@\n         control,\r\n         name: \"records\",\r\n     });\r\n \r\n+       const sigMarkingRef = useRef(null);\r\n+        const [savedImage, setSavedImage] = useState(null);\r\n+    \r\n+        const backgroundImage = Images.girl; // Replace with actual image URL\r\n+    \r\n+        useEffect(() => {\r\n+            const canvas = sigMarkingRef.current.getCanvas();\r\n+            const ctx = canvas.getContext(\"2d\");\r\n+            const img = new Image();\r\n+            img.src = backgroundImage;\r\n+            img.onload = () => {\r\n+                ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\r\n+            };\r\n+        }, []);\r\n+    \r\n+        const handleClearMarking = () => {\r\n+            const canvas = sigMarkingRef.current.getCanvas();\r\n+            const ctx = canvas.getContext(\"2d\");\r\n+            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n+            const img = new Image();\r\n+            img.src = backgroundImage;\r\n+            img.onload = () => {\r\n+                ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\r\n+            };\r\n+        };\r\n+    \r\n+        const handleSaveMarking = async () => {\r\n+            setMarkingLoader(true)\r\n+            if (sigMarkingRef.current) {\r\n+                const canvas = await sigMarkingRef.current.getCanvas();\r\n+                const finalImage = await canvas.toDataURL(\"image/png\");\r\n+                try {\r\n+    \r\n+    \r\n+                    let obj = {\r\n+                        document: finalImage,\r\n+                        filename: moment().unix() + \"_Mapping.png\"\r\n+                    }\r\n+    \r\n+                    const response = await axios.post(\r\n+                        'https://cosmetic.theappkit.com/api/system/uploadDoc',\r\n+                        obj\r\n+                    );\r\n+    \r\n+                    console.log(response?.data?.data?.path);\r\n+    \r\n+    \r\n+                    setSavedImage('https://cosmetic.theappkit.com' + response?.data?.data?.path);\r\n+    \r\n+    \r\n+                } catch (error) {\r\n+                    console.log(error);\r\n+    \r\n+                }\r\n+                setSavedImage(finalImage);\r\n+                setMarkingLoader(false)\r\n+            }\r\n+        };\r\n \r\n     const signCanvasRefs = useRef([]);\r\n \r\n     // Clear Signature Function\r\n"
                },
                {
                    "date": 1743364619217,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,8 +28,9 @@\n const UserForm = () => {\r\n     const { id } = useParams()\r\n     const navigate = useNavigate()\r\n     const [userData, setUserData] = useState(null)\r\n+    const [markingLoader, setMarkingLoader] = useState(false)\r\n     const { register, control, handleSubmit, setValue, getValues, formState: { errors }, reset, watch } = useForm({\r\n         defaultValues: {\r\n             records: [{ date: \"\", amount: \"\", description: \"\" }], // Initial field (cannot be removed)\r\n             furtherFields: [{ date: null, sign: \"\" }], // Additional dynamic section\r\n"
                },
                {
                    "date": 1743364660796,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -348,9 +348,9 @@\n     };\r\n     const UpdateConsentForm = async (formData) => {\r\n         console.log(formData);\r\n         console.log(consentSign?.includes(\"cosmetic\") && signature?.includes(\"cosmetic\") );\r\n-        if (consentSign?.includes(\"cosmetic\") && signature?.includes(\"cosmetic\") && formData?.furtherFields?.every(item => item?.sign?.includes(\"cosmetic\"))) {\r\n+        if (savedImage?.includes(\"cosmetic\") && consentSign?.includes(\"cosmetic\") && signature?.includes(\"cosmetic\") && formData?.furtherFields?.every(item => item?.sign?.includes(\"cosmetic\"))) {\r\n           \r\n       \r\n         try {\r\n             setLoader(true);\r\n"
                },
                {
                    "date": 1743364780747,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1603,14 +1603,14 @@\n                                     height: 150, border: \"1px dashed black\"}}>\r\n                                     </Box>}\r\n                                 {!signature  && <Grid container spacing={1} mt={1}>\r\n                                     <Grid item>\r\n-                                        <Button variant=\"contained\" color=\"secondary\" onClick={handleClear}>\r\n+                                        <Button variant=\"contained\" color=\"secondary\" onClick={handleClear}  sx={{textTransform:'capitalize'}}>\r\n                                             Clear Signature\r\n                                         </Button>\r\n                                     </Grid>\r\n                                     <Grid item>\r\n-                                        <Button variant=\"contained\" color=\"primary\" onClick={handleSave}>\r\n+                                        <Button variant=\"contained\" color=\"primary\" onClick={handleSave} sx={{textTransform:'capitalize'}}>\r\n                                             Save Signature\r\n                                         </Button>\r\n                                     </Grid>\r\n \r\n"
                },
                {
                    "date": 1743364787349,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1685,14 +1685,14 @@\n                                     height: 150, border: \"1px dashed black\"}}>\r\n                                     </Box>}\r\n                                 {!consentSign && <Grid container spacing={1} mt={1}>\r\n                                     <Grid item>\r\n-                                        <Button variant=\"contained\" color=\"secondary\" onClick={handleClear2}>\r\n+                                        <Button variant=\"contained\" color=\"secondary\" onClick={handleClear2} sx={{textTransform:'capitalize'}}>\r\n                                             Clear Signature\r\n                                         </Button>\r\n                                     </Grid>\r\n                                     <Grid item>\r\n-                                        <Button variant=\"contained\" color=\"primary\" onClick={handleSave2}>\r\n+                                        <Button variant=\"contained\" color=\"primary\" onClick={handleSave2} sx={{textTransform:'capitalize'}}>\r\n                                             Save Signature\r\n                                         </Button>\r\n                                     </Grid>\r\n \r\n"
                },
                {
                    "date": 1743582380977,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1542,9 +1542,9 @@\n                                                     fontSize: \"14px\",\r\n                                                     color: \"#333\",\r\n                                                     marginBottom: 1.5,\r\n                                                 }}>\r\n-                                                    Patient Date :*\r\n+                                                    Patient Date :* \r\n                                                 </InputLabel>\r\n                                                 <Controller\r\n                                                     disabled={true}\r\n                                                     name=\"patientDate\"\r\n@@ -2285,14 +2285,14 @@\n \r\n                                         </Box>\r\n                                         {!item?.sign  && <Grid container spacing={1} mt={1}>\r\n                                             <Grid item>\r\n-                                                <Button variant=\"contained\" color=\"secondary\" onClick={() => clearSignature(index)}>\r\n+                                                <Button variant=\"contained\" color=\"secondary\" onClick={() => clearSignature(index)} sx={{textTransform:'capitalize'}}>\r\n                                                     Clear Signature\r\n                                                 </Button>\r\n                                             </Grid>\r\n                                             <Grid item>\r\n-                                                <Button variant=\"contained\" color=\"primary\" onClick={() => updateSignature(index)}>\r\n+                                                <Button variant=\"contained\" color=\"primary\" onClick={() => updateSignature(index)} sx={{textTransform:'capitalize'}}>\r\n                                                     Save Signature\r\n                                                 </Button>\r\n                                             </Grid>\r\n \r\n"
                }
            ],
            "date": 1743296172921,
            "name": "Commit-0",
            "content": "import { useEffect, useRef, useState } from \"react\";\r\nimport ApiServices from \"../../../services/Apis\";\r\nimport { PrimaryButton } from \"../../../components/buttons\";\r\nimport { Avatar, Box, Button, CircularProgress, Dialog, DialogContent, DialogTitle, Divider, FormControl, FormControlLabel, FormLabel, Grid, IconButton, InputAdornment, InputLabel, Paper, Radio, RadioGroup, TextField, Typography } from \"@mui/material\";\r\nimport InputField from \"../../../components/input\";\r\nimport { Controller, useFieldArray, useForm } from \"react-hook-form\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { showErrorToast, showPromiseToast, showSuccessToast } from \"../../../components/Toaster\";\r\nimport UploadIcon from \"@mui/icons-material/Upload\";\r\nimport OTPInput from \"react-otp-input\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\r\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\r\nimport { DatePicker, LocalizationProvider } from \"@mui/x-date-pickers\";\r\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport SelectField from \"../../../components/select\";\r\nimport SignatureCanvas from \"react-signature-canvas\";\r\nimport moment from \"moment\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport UploadFileIcon from '@mui/icons-material/UploadFile';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport dayjs from \"dayjs\";\r\nimport { id } from \"date-fns/locale\";\r\n\r\n\r\nconst UserForm = () => {\r\n    const { id } = useParams()\r\n    const navigate = useNavigate()\r\n    const [userData, setUserData] = useState(null)\r\n    const { register, control, handleSubmit, setValue, getValues, formState: { errors }, reset, watch } = useForm({\r\n        defaultValues: {\r\n            records: [{ date: \"\", amount: \"\", description: \"\" }], // Initial field (cannot be removed)\r\n            furtherFields: [{ date: null, sign: \"\" }], // Additional dynamic section\r\n        },\r\n    });\r\n    const { fields: furtherFields, append: appendFurther, remove: removeFurther } = useFieldArray({\r\n        control,\r\n        name: \"furtherFields\",\r\n    });\r\n\r\n    const { fields, append, remove } = useFieldArray({\r\n        control,\r\n        name: \"records\",\r\n    });\r\n\r\n\r\n    const signCanvasRefs = useRef([]);\r\n\r\n    // Clear Signature Function\r\n    const clearSignature = (index) => {\r\n        if (signCanvasRefs.current[index]) {\r\n            signCanvasRefs.current[index].clear();\r\n            setValue(`furtherFields.${index}.sign`, \"\");\r\n        }\r\n    };\r\n    // Function to update signature in the form state\r\n    const updateSignature = async (index) => {\r\n        if (signCanvasRefs.current[index]) {\r\n            const signData = await signCanvasRefs.current[index].toDataURL();\r\n            setValue(`furtherFields.${index}.sign`, signData);\r\n            try {\r\n                const file = signData;\r\n                if (file) {\r\n                    setValue(\"image\", file, { shouldValidate: true }); // Set value and trigger validation\r\n                }\r\n\r\n                let obj = {\r\n                    document: signData,\r\n                    filename: moment().unix() + \"_Sign.png\"\r\n                }\r\n\r\n                const response = await axios.post(\r\n                    'https://cosmetic.theappkit.com/api/system/uploadDoc',\r\n                    obj\r\n                );\r\n\r\n                console.log(response?.data?.data?.path);\r\n\r\n\r\n                setValue(`furtherFields.${index}.sign`, 'https://cosmetic.theappkit.com' + response?.data?.data?.path);\r\n\r\n\r\n            } catch (error) {\r\n                console.log(error);\r\n\r\n            }\r\n        }\r\n    };\r\n    const [title, setTitle] = useState(null)\r\n    const [formData, setFormData] = useState(null)\r\n    const [step, setStep] = useState(1); // 1: OTP, 2: Reset Password\r\n    const [otp, setOtp] = useState(\"\");\r\n    const [otpError, setOtpError] = useState(false);\r\n    const [timer, setTimer] = useState(30);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [open, setOpen] = useState(false)\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n    const [showPassword2, setShowPassword2] = useState(false);\r\n    const [otpToken, setOtpToken] = useState(null)\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n    const [patientType, setPatientType] = useState(\"existing\");\r\n    const [patients, setPatients] = useState([])\r\n    const [selectedPatient, setSelectedPatient] = useState(null)\r\n    const [documents, setDocuments] = useState([])\r\n    const [selectedDocument, setSelectedDocument] = useState(null)\r\n    const sigCanvas = useRef(null);\r\n    const [signature, setSignature] = useState(null);\r\n    const [uploadedImages, setUploadedImages] = useState([])\r\n    const [imageLoader, setImageLoader] = useState(false)\r\n    const [beforeImages, setBeforeImages] = useState([])\r\n    const [imageLoaderBefore, setImageLoaderBefore] = useState(false)\r\n    const [afterImages, setAfterImages] = useState([])\r\n    const [imageLoaderAfter, setImageLoaderAfter] = useState(false)\r\n\r\n    // Handle Save Signature\r\n    const handleSave = async () => {\r\n        if (sigCanvas.current) {\r\n            const dataURL = await sigCanvas.current.toDataURL();\r\n            setSignature(dataURL);\r\n            try {\r\n                const file = dataURL;\r\n                if (file) {\r\n                    setValue(\"image\", file, { shouldValidate: true }); // Set value and trigger validation\r\n                }\r\n\r\n                let obj = {\r\n                    document: dataURL,\r\n                    filename: moment().unix() + \"_Sign.png\"\r\n                }\r\n\r\n                const response = await axios.post(\r\n                    'https://cosmetic.theappkit.com/api/system/uploadDoc',\r\n                    obj\r\n                );\r\n\r\n                console.log(response?.data?.data?.path);\r\n\r\n                setSignature('https://cosmetic.theappkit.com' + response?.data?.data?.path);\r\n\r\n\r\n            } catch (error) {\r\n                console.log(error);\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n    // Handle Clear Signature\r\n    const handleClear = () => {\r\n        if (sigCanvas.current) {\r\n            sigCanvas.current.clear();\r\n            setSignature(null);\r\n        }\r\n    };\r\n    const [permissions, setPermissions] = useState({\r\n        marketing: \"\",\r\n        offers: \"\",\r\n    });\r\n\r\n    const handleChange2 = (event) => {\r\n        setPermissions({\r\n            ...permissions,\r\n            [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n    const handleChange = (event) => {\r\n        setPatientType(event.target.value);\r\n    };\r\n    const {\r\n        register: register4,\r\n        handleSubmit: handleSubmit4,\r\n        setValue: setValue4,\r\n        getValues: getValues4,\r\n        reset: reset4,\r\n        formState: { errors: errors4 },\r\n    } = useForm();\r\n\r\n    // Simulate OTP Submission\r\n    const handleOtpSubmit = () => {\r\n        if (otp.length !== 4) {\r\n            setOtpError(true);\r\n            return;\r\n        }\r\n        setIsLoading(true);\r\n        setTimeout(() => {\r\n            setIsLoading(false);\r\n            SubmitOTP()\r\n            setStep(2); // Move to reset password step\r\n        }, 2000);\r\n    };\r\n\r\n    // Simulate Reset Password Submission\r\n    const handleResetSubmit = () => {\r\n        if (password !== confirmPassword) {\r\n            alert(\"Passwords do not match!\");\r\n            return;\r\n        }\r\n        setIsLoading(true);\r\n        setTimeout(() => {\r\n            setIsLoading(false);\r\n            // Close dialog after password reset\r\n        }, 2000);\r\n    };\r\n    const fileInputRef = useRef(null);\r\n\r\n    const [loader, setLoader] = useState(false)\r\n\r\n    const [imageURL, setImageURL] = useState()\r\n    const [hovered, setHovered] = useState(false);\r\n\r\n\r\n\r\n\r\n    const handleImageClick = () => {\r\n        fileInputRef.current.click();\r\n    };\r\n\r\n    const handleFileChange = async (e) => {\r\n        try {\r\n            const file = e.target.files[0];\r\n            if (file) {\r\n                setValue(\"image\", file, { shouldValidate: true }); // Set value and trigger validation\r\n            }\r\n            const formData = new FormData();\r\n            formData.append(\"document\", e.target.files[0]);\r\n\r\n            const response = await axios.post(\r\n                'https://cosmetic.theappkit.com/api/system/upload',\r\n                formData,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'multipart/form-data'\r\n                    }\r\n                }\r\n            );\r\n\r\n            console.log(response?.data?.data?.path);\r\n\r\n            setImageURL('https://cosmetic.theappkit.com' + response?.data?.data?.path);\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n\r\n        }\r\n    };\r\n    const UpdateConsentForm = async (formData) => {\r\n        console.log(formData);\r\n\r\n        setLoader(true);\r\n        try {\r\n            let obj = {\r\n                _id: id,\r\n                patient_id: patientType == 'existing' ? selectedPatient?.id : null,\r\n                form_id: null,\r\n                aftercare_document: patientType == 'existing' ? selectedDocument?._id : null,\r\n                treatment_date: getValues('treatmentDate'),\r\n                consultation_date: getValues('consultationDate'),\r\n                first_name: getValues('fname'),\r\n                last_name: getValues('lname'),\r\n                dob: getValues('selectedDate'),\r\n                address: getValues('address'),\r\n                email: getValues('email'),\r\n                post_code: getValues('post'),\r\n                phone: getValues('phone'),\r\n                notes: getValues('notes'),\r\n                picture: imageURL,\r\n                kin_details: {\r\n                    name: getValues('name'),\r\n                    address: getValues('kinaddress'),\r\n                    email: getValues('kinemail'),\r\n                    phone: getValues('kinphone'),\r\n                },\r\n                general_practitioner: {\r\n                    name: getValues('genname'),\r\n                    address: getValues('genaddress'),\r\n                    email: getValues('genemail'),\r\n                    phone: getValues('genphone'),\r\n                },\r\n                treatment_plan: {\r\n                    patient_concerns: getValues('patientConcerns'),\r\n                    patient_goals: getValues('patientGoal'),\r\n                    advised_plan: getValues('advisedPlan'),\r\n                    expected_result: getValues('expectedResult'),\r\n                    date: getValues('patientDate'),\r\n                    patient_sign: signature\r\n                },\r\n                batch_images: uploadedImages,\r\n                before_images: beforeImages,\r\n                after_images: afterImages,\r\n                further_treatment: formData?.furtherFields,\r\n                treatment_record: formData?.records,\r\n                extra_notes: getValues('extranotes'),\r\n                permission_marketing: permissions?.marketing,\r\n                offers: permissions?.offers,\r\n\r\n\r\n            };\r\n            console.log(obj);\r\n\r\n            const promise = ApiServices.UpdateForm(obj);\r\n\r\n            // Handle the API response properly\r\n            const response = await promise;\r\n            console.log(response);\r\n\r\n            showPromiseToast(\r\n                promise,\r\n                \"Saving...\",\r\n                \"Added Successfully\",\r\n                \"Something Went Wrong\"\r\n            );\r\n\r\n           \r\n            if (response?.responseCode === 200) {\r\n                console.log(response);\r\n                setImageURL(null)\r\n                navigate('/consent-forms')\r\n\r\n\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            showErrorToast(error)\r\n        } finally {\r\n\r\n            setLoader(false);\r\n        }\r\n    };\r\n    console.log(watch());\r\n\r\n    const SendOtp = async (val) => {\r\n        if (val != 'resend') {\r\n            setIsLoading(true)\r\n        }\r\n\r\n\r\n        setTimer(60);\r\n        try {\r\n            let obj = {\r\n                email: userData?.email\r\n            };\r\n\r\n            const data = await ApiServices.SendOtp(obj);\r\n            console.log(data);\r\n            if (data.responseCode == 206) {\r\n                setOtp('')\r\n                showSuccessToast('Otp Sent Successfully')\r\n\r\n            }\r\n\r\n        } catch (error) {\r\n\r\n            console.log(error)\r\n        }\r\n        finally {\r\n            setIsLoading(false)\r\n            setStep(1)\r\n            setOpen(true)\r\n\r\n        }\r\n    }\r\n\r\n    const UpdatePassword = async (sendData, result) => {\r\n        setIsLoading(true)\r\n        console.log(otpToken, \"otpToken2\");\r\n        try {\r\n            let obj = {\r\n                otp_token: otpToken,\r\n                email: userData?.email,\r\n                password: getValues4('password'),\r\n                confirm_password: getValues4('confirmPassword'),\r\n            };\r\n\r\n            const data = await ApiServices.SendOtp(obj);\r\n            console.log(data);\r\n            if (data.responseCode == 200) {\r\n                setOtp('')\r\n\r\n                reset4()\r\n                setConfirmPassword(false)\r\n\r\n\r\n\r\n            }\r\n        } catch (error) {\r\n            setOtpError(true)\r\n        }\r\n        finally {\r\n            setIsLoading(false)\r\n            setOpen(false)\r\n            showSuccessToast('Password Reset Successfully')\r\n        }\r\n    };\r\n\r\n    const SubmitOTP = async (val) => {\r\n\r\n        setIsLoading(true)\r\n\r\n\r\n\r\n        try {\r\n            let obj = {\r\n                email: userData?.email,\r\n                otp: otp,\r\n            };\r\n\r\n            const data = await ApiServices.SendOtp(obj);\r\n            console.log(data?.data, 'tesetttt');\r\n            if (data.responseCode == 206) {\r\n                console.log(data);\r\n                setOtpToken(data?.data?.otp_token)\r\n\r\n\r\n            }\r\n        } catch (error) {\r\n            setOtpError(true)\r\n        }\r\n        finally {\r\n            setIsLoading(false)\r\n\r\n        }\r\n    };\r\n\r\n    const handleFileChange2 = async (e) => {\r\n        setUploadedImages([]);\r\n        setImageLoader(true);\r\n\r\n        try {\r\n            const files = e.target.files;\r\n            if (!files || files.length === 0) return; // Exit if no files are selected\r\n\r\n            setValue(\"images\", Array.from(files), { shouldValidate: true }); // Ensure files are stored as an array\r\n\r\n            const uploadedNewBatchImages = [];\r\n\r\n            for (let i = 0; i < files.length; i++) {\r\n                const formData = new FormData();\r\n                formData.append(\"document\", files[i]);\r\n\r\n                console.log(\"Uploading file:\", files[i].name); // Debugging log\r\n\r\n                const response = await axios.post(\r\n                    \"https://cosmetic.theappkit.com/api/system/upload\",\r\n                    formData,\r\n                    {\r\n                        headers: {\r\n                            \"Content-Type\": \"multipart/form-data\",\r\n                        },\r\n                    }\r\n                );\r\n\r\n                const imagePath = response?.data?.data?.path;\r\n                if (imagePath) {\r\n                    const fullImageUrl = \"https://cosmetic.theappkit.com\" + imagePath;\r\n                    uploadedNewBatchImages.push(fullImageUrl);\r\n                    console.log(\"Uploaded Image URL:\", fullImageUrl);\r\n                }\r\n            }\r\n\r\n            setUploadedImages(uploadedNewBatchImages); // Update state with uploaded image URLs\r\n            console.log(\"All Uploaded Images:\", uploadedNewBatchImages);\r\n        } catch (error) {\r\n            console.error(\"Error uploading files:\", error);\r\n        } finally {\r\n            setImageLoader(false);\r\n        }\r\n    };\r\n\r\n    const handleRemoveImage = (index) => {\r\n        setUploadedImages(prevImages => prevImages.filter((_, i) => i !== index));\r\n    };\r\n\r\n    const handleFileChange3 = async (e) => {\r\n        setBeforeImages([]);\r\n        setImageLoaderBefore(true);\r\n\r\n        try {\r\n            const files = e.target.files;\r\n            if (!files || files.length === 0) return; // Exit if no files are selected\r\n\r\n            setValue(\"images\", Array.from(files), { shouldValidate: true }); // Ensure files are stored as an array\r\n\r\n            const uploadedNewBeforeImages = [];\r\n\r\n            for (let i = 0; i < files.length; i++) {\r\n                const formData = new FormData();\r\n                formData.append(\"document\", files[i]);\r\n\r\n                console.log(\"Uploading file:\", files[i].name); // Debugging log\r\n\r\n                const response = await axios.post(\r\n                    \"https://cosmetic.theappkit.com/api/system/upload\",\r\n                    formData,\r\n                    {\r\n                        headers: {\r\n                            \"Content-Type\": \"multipart/form-data\",\r\n                        },\r\n                    }\r\n                );\r\n\r\n                const imagePath = response?.data?.data?.path;\r\n                if (imagePath) {\r\n                    const fullImageUrl = \"https://cosmetic.theappkit.com\" + imagePath;\r\n                    uploadedNewBeforeImages.push(fullImageUrl);\r\n                    console.log(\"Uploaded Image URL:\", fullImageUrl);\r\n                }\r\n            }\r\n\r\n            setBeforeImages(uploadedNewBeforeImages); // Update state with uploaded image URLs\r\n            console.log(\"All Uploaded Images:\", uploadedNewBeforeImages);\r\n        } catch (error) {\r\n            console.error(\"Error uploading files:\", error);\r\n        } finally {\r\n            setImageLoaderBefore(false);\r\n        }\r\n    };\r\n\r\n    const handleRemoveImage2 = (index) => {\r\n        setBeforeImages(prevImages => prevImages.filter((_, i) => i !== index));\r\n    };\r\n    const handleFileChange4 = async (e) => {\r\n        setAfterImages([]);\r\n        setImageLoaderAfter(true);\r\n\r\n        try {\r\n            const files = e.target.files;\r\n            if (!files || files.length === 0) return; // Exit if no files are selected\r\n\r\n            setValue(\"images\", Array.from(files), { shouldValidate: true }); // Ensure files are stored as an array\r\n\r\n            const uploadedNewAfterImages = [];\r\n\r\n            for (let i = 0; i < files.length; i++) {\r\n                const formData = new FormData();\r\n                formData.append(\"document\", files[i]);\r\n\r\n                console.log(\"Uploading file:\", files[i].name); // Debugging log\r\n\r\n                const response = await axios.post(\r\n                    \"https://cosmetic.theappkit.com/api/system/upload\",\r\n                    formData,\r\n                    {\r\n                        headers: {\r\n                            \"Content-Type\": \"multipart/form-data\",\r\n                        },\r\n                    }\r\n                );\r\n\r\n                const imagePath = response?.data?.data?.path;\r\n                if (imagePath) {\r\n                    const fullImageUrl = \"https://cosmetic.theappkit.com\" + imagePath;\r\n                    uploadedNewAfterImages.push(fullImageUrl);\r\n                    console.log(\"Uploaded Image URL:\", fullImageUrl);\r\n                }\r\n            }\r\n\r\n            setAfterImages(uploadedNewAfterImages); // Update state with uploaded image URLs\r\n            console.log(\"All Uploaded Images:\", uploadedNewAfterImages);\r\n        } catch (error) {\r\n            console.error(\"Error uploading files:\", error);\r\n        } finally {\r\n            setImageLoaderAfter(false);\r\n        }\r\n    };\r\n\r\n    const handleRemoveImage3 = (index) => {\r\n        setAfterImages(prevImages => prevImages.filter((_, i) => i !== index));\r\n    };\r\n    useEffect(() => {\r\n        let interval;\r\n        if (timer > 0) {\r\n            interval = setInterval(() => {\r\n                setTimer((prev) => prev - 1);\r\n            }, 1000);\r\n        } else {\r\n            clearInterval(interval);\r\n        }\r\n        return () => clearInterval(interval);\r\n    }, [timer]);\r\n\r\n    const getDocuments = async () => {\r\n        try {\r\n            let params = {\r\n                page: 1,\r\n                limit: 999\r\n            };\r\n\r\n            const data = await ApiServices.getAfterCareDocuments(params);\r\n\r\n\r\n\r\n            setDocuments(\r\n                data?.data?.documents?.map((doc) => ({\r\n\r\n                    id: doc?._id, // Example transformation\r\n                    name: doc.title, // Another example\r\n                }))\r\n            );\r\n\r\n\r\n\r\n        } catch (error) {\r\n            console.error(\"Error fetching location:\", error);\r\n        }\r\n    };\r\n    const getPatients = async () => {\r\n        try {\r\n            let params = {\r\n                page: 1,\r\n                limit: 999\r\n            };\r\n\r\n            const data = await ApiServices.getPatients(params);\r\n\r\n\r\n\r\n            setPatients(\r\n                data?.data?.patients?.map((doc) => ({\r\n                    ...doc,\r\n                    id: doc?._id, // Example transformation\r\n                    name: doc.title + \" \" + doc?.first_name + ' ' + doc?.last_name, // Another example\r\n                }))\r\n            );\r\n\r\n        } catch (error) {\r\n            console.error(\"Error fetching location:\", error);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getPatients()\r\n        getDocuments()\r\n    }, [])\r\n    useEffect(() => {\r\n        // Disable drawing on the single canvas\r\n        if (sigCanvas.current) {\r\n            sigCanvas.current.off();\r\n        }\r\n\r\n        // Disable drawing on all multiple canvases\r\n        signCanvasRefs.current.forEach((canvas) => {\r\n            if (canvas) {\r\n                canvas.off();\r\n            }\r\n        });\r\n    }, []);\r\n    const getData = async () => {\r\n        try {\r\n            let params = {\r\n                id: id,\r\n\r\n            };\r\n\r\n            const data = await ApiServices.getFormDetail(params);\r\n            let form = data?.data?.form\r\n            setValue('treatmentDate', dayjs(form?.treatment_date))\r\n            setValue('consultationDate', dayjs(form?.consultation_date))\r\n            setPermissions({\r\n                marketing: form?.permission_marketing ? 'yes' : 'no',\r\n                offers: form?.offers ? 'yes' : 'no',\r\n            })\r\n            setFormData(form)\r\n            setValue(\"media\", { shouldValidate: true });\r\n            setValue(\"media2\", { shouldValidate: true });\r\n            setValue(\"media3\", { shouldValidate: true });\r\n            setSignature(form?.treatment_plan?.patient_sign)\r\n            setValue('patientDate', dayjs(form?.treatment_plan?.date))\r\n            setValue('patientConcerns', form?.treatment_plan?.patient_concerns)\r\n            setValue('patientGoal', form?.treatment_plan?.patient_goals)\r\n            setValue('advisedPlan', form?.treatment_plan?.advised_plan)\r\n            setValue('expectedResult', form?.treatment_plan?.expected_result)\r\n            let recordData = form?.treatment_record?.map((doc) => ({\r\n                ...doc,\r\n\r\n                date: dayjs(doc?.date)\r\n            }))\r\n            let furtherData = form?.further_treatment?.map((doc) => ({\r\n                ...doc,\r\n\r\n                date: dayjs(doc?.date)\r\n            }))\r\n            setValue(\"records\", recordData);\r\n            setValue(\"furtherFields\", furtherData);\r\n            setValue(\"extranotes\", form?.extra_notes);\r\n            setUploadedImages(form?.batch_images)\r\n            setBeforeImages(form?.before_images)\r\n            setAfterImages(form?.after_images)\r\n\r\n        } catch (error) {\r\n            console.error(\"Error fetching location:\", error);\r\n        }\r\n    };\r\n    console.log(permissions);\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n    useEffect(() => {\r\n        let value = patients?.find(item => item?._id == formData?.patient_id)\r\n        setSelectedPatient(patients?.find(item => item?._id == formData?.patient_id))\r\n        setSelectedDocument(documents?.find(item => item?._id == formData?.aftercare_document))\r\n\r\n        setValue('fname', value?.first_name || \"\");\r\n        setValue('lname', value?.last_name || \"\");\r\n        setValue('email', value?.email || \"\");\r\n        setValue('post', value?.post_code || \"\");\r\n        setValue('phone', value?.phone || \"\");\r\n        setValue('address', value?.address || \"\");\r\n        setValue('notes', value?.notes || \"\");\r\n        setValue('name', value?.kin_details?.name || \"\");\r\n        setValue('kinemail', value?.kin_details?.email || \"\");\r\n        setValue('kinphone', value?.kin_details?.phone || \"\");\r\n        setValue('kinaddress', value?.kin_details?.address || \"\");\r\n        setValue('genname', value?.general_practitioner?.name || \"\");\r\n        setValue('genemail', value?.general_practitioner?.email || \"\");\r\n        setValue('genphone', value?.general_practitioner?.phone || \"\");\r\n        setValue('genaddress', value?.general_practitioner?.address || \"\");\r\n        console.log(\"Raw DOB:\", value?.dob);\r\n\r\n        if (value?.dob) {\r\n            // Convert to Dayjs format\r\n            const parsedDate = dayjs(value.dob);\r\n\r\n            // Check if the conversion is valid\r\n            if (!parsedDate.isValid()) {\r\n                console.error(\"Invalid DOB Format:\", value.dob);\r\n                return;\r\n            }\r\n\r\n            console.log(\"Parsed Date:\", parsedDate);\r\n            setValue(\"selectedDate\", parsedDate);\r\n        }\r\n\r\n    }, [patients, documents])\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Paper sx={{ width: \"100%\", overflow: \"hidden\", boxShadow: 'none', backgroundColor: '#eff6ff', borderRadius: '12px' }}>\r\n\r\n\r\n\r\n                <Box component={'form'} p={3} sx={{ borderRadius: '12px' }} onSubmit={handleSubmit(UpdateConsentForm)} >\r\n                    <Typography variant=\"h5\" sx={{ fontWeight: 700 }}>\r\n                        Medical History Form\r\n                    </Typography>\r\n\r\n                    <Grid container mt={4} spacing={2}>\r\n\r\n\r\n                        <Grid item xs={3} mt={2}>\r\n                            <InputLabel sx={{\r\n                                textTransform: \"capitalize\", textAlign: 'left', fontWeight: 700, display: 'block',\r\n\r\n                                fontSize: \"14px\",\r\n                                color: \"#333\",\r\n                                marginBottom: \"4px\",\r\n                            }}>\r\n\r\n                                Select Form :\r\n                            </InputLabel>\r\n                            <SelectField\r\n                                size={'small'}\r\n                                newLabel={'Select Form'}\r\n                                fullWidth={true}\r\n                                options={[]}\r\n                                selected={title}\r\n                                onSelect={(value) => {\r\n                                    setTitle(value)\r\n\r\n\r\n                                }}\r\n                                error={errors?.title?.message}\r\n                                register={register(\"title\", {\r\n                                    required: false,\r\n                                })}\r\n                            />\r\n\r\n                        </Grid>\r\n                        <Grid item xs={3} mt={2}>\r\n                            <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                                <Grid container spacing={2}>\r\n                                    {/* Single Date Selection */}\r\n                                    <Grid item xs={12}>\r\n                                        <Box>\r\n                                            <InputLabel sx={{\r\n                                                textTransform: \"capitalize\", textAlign: 'left', fontWeight: 700, display: 'block',\r\n\r\n                                                fontSize: \"14px\",\r\n                                                color: \"#333\",\r\n                                                marginBottom: 1.5,\r\n                                            }}>\r\n                                                Treatment Date :*\r\n                                            </InputLabel>\r\n                                            <Controller\r\n                                                name=\"treatmentDate\"\r\n                                                control={control}\r\n                                                rules={{ required: \"Please select a date\" }}\r\n                                                render={({ field }) => (\r\n                                                    <DatePicker\r\n                                                        {...field}\r\n                                                        value={field.value || null}\r\n                                                        onChange={(newValue) => field.onChange(newValue)}\r\n                                                        slotProps={{\r\n                                                            textField: {\r\n                                                                size: \"small\",\r\n                                                                fullWidth: true,\r\n                                                                sx: {\r\n                                                                    \"& .MuiOutlinedInput-root\": {\r\n                                                                        borderRadius: '12px',\r\n                                                                        \"& fieldset\": { border: \"1 solid #e0e0e0\" }, // Default border\r\n                                                                        \"&:hover fieldset\": { border: \"1 solid #0076bf\" }, // On hover\r\n                                                                        \"&.Mui-focused fieldset\": { border: \"1 solid #0076bf !important\" } // On focus\r\n                                                                    },\r\n                                                                },\r\n                                                            },\r\n                                                        }}\r\n                                                    />\r\n                                                )}\r\n                                            />\r\n                                            {errors.treatmentDate && (\r\n                                                <Typography color=\"error\">{errors.treatmentDate.message}</Typography>\r\n                                            )}\r\n                                        </Box>\r\n                                    </Grid>\r\n\r\n\r\n\r\n\r\n                                </Grid>\r\n\r\n\r\n                            </LocalizationProvider>\r\n                        </Grid>\r\n                        <Grid item xs={3} mt={2}>\r\n                            <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                                <Grid container spacing={2}>\r\n                                    {/* Single Date Selection */}\r\n                                    <Grid item xs={12}>\r\n                                        <Box>\r\n                                            <InputLabel sx={{\r\n                                                textTransform: \"capitalize\", textAlign: 'left', fontWeight: 700, display: 'block',\r\n\r\n                                                fontSize: \"14px\",\r\n                                                color: \"#333\",\r\n                                                marginBottom: 1.5,\r\n                                            }}>\r\n                                                Consultation Date :*\r\n                                            </InputLabel>\r\n                                            <Controller\r\n                                                name=\"consultationDate\"\r\n                                                control={control}\r\n                                                rules={{ required: \"Please select a date\" }}\r\n                                                render={({ field }) => (\r\n                                                    <DatePicker\r\n                                                        {...field}\r\n                                                        value={field.value || null}\r\n                                                        onChange={(newValue) => field.onChange(newValue)}\r\n                                                        slotProps={{\r\n                                                            textField: {\r\n                                                                size: \"small\",\r\n                                                                fullWidth: true,\r\n                                                                sx: {\r\n                                                                    \"& .MuiOutlinedInput-root\": {\r\n                                                                        borderRadius: '12px',\r\n                                                                        \"& fieldset\": { border: \"1 solid #e0e0e0\" }, // Default border\r\n                                                                        \"&:hover fieldset\": { border: \"1 solid #0076bf\" }, // On hover\r\n                                                                        \"&.Mui-focused fieldset\": { border: \"1 solid #0076bf !important\" } // On focus\r\n                                                                    },\r\n                                                                },\r\n                                                            },\r\n                                                        }}\r\n                                                    />\r\n                                                )}\r\n                                            />\r\n                                            {errors.consultationDate && (\r\n                                                <Typography color=\"error\">{errors.consultationDate.message}</Typography>\r\n                                            )}\r\n                                        </Box>\r\n                                    </Grid>\r\n\r\n\r\n\r\n\r\n                                </Grid>\r\n\r\n\r\n                            </LocalizationProvider>\r\n                        </Grid>\r\n                        <Grid container p={2} spacing={2} >\r\n\r\n                            <Grid item xs={3} mt={2}>\r\n                                <InputLabel sx={{\r\n                                    textTransform: \"capitalize\", textAlign: 'left', fontWeight: 700, display: 'block',\r\n\r\n                                    fontSize: \"14px\",\r\n                                    color: \"#333\",\r\n                                    marginBottom: \"4px\",\r\n                                }}>\r\n\r\n                                    Existing or New Patient :\r\n                                </InputLabel>\r\n                                <FormControl component=\"fieldset\">\r\n\r\n                                    <RadioGroup row value={patientType} onChange={handleChange}>\r\n                                        <FormControlLabel value=\"existing\" control={<Radio />} label=\"Existing\" />\r\n                                        <FormControlLabel value=\"new\" control={<Radio />} label=\"New\" />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={3} mt={2}>\r\n                                {patientType == 'existing' && <> <InputLabel sx={{\r\n                                    textTransform: \"capitalize\", textAlign: 'left', fontWeight: 700, display: 'block',\r\n\r\n                                    fontSize: \"14px\",\r\n                                    color: \"#333\",\r\n                                    marginBottom: \"4px\",\r\n                                }}>\r\n\r\n                                    Select Patient :\r\n                                </InputLabel>\r\n                                    <SelectField\r\n                                        size={'small'}\r\n                                        newLabel={'Select Patient'}\r\n                                        fullWidth={true}\r\n                                        disabled={true}\r\n                                        options={patients}\r\n                                        selected={selectedPatient}\r\n                                        onSelect={(value) => {\r\n                                            setSelectedPatient(value);\r\n                                            console.log(\"Selected Patient:\", value);\r\n\r\n                                            setValue('fname', value?.first_name || \"\");\r\n                                            setValue('lname', value?.last_name || \"\");\r\n                                            setValue('email', value?.email || \"\");\r\n                                            setValue('post', value?.post_code || \"\");\r\n                                            setValue('phone', value?.phone || \"\");\r\n                                            setValue('address', value?.address || \"\");\r\n                                            setValue('notes', value?.notes || \"\");\r\n                                            setValue('name', value?.kin_details?.name || \"\");\r\n                                            setValue('kinemail', value?.kin_details?.email || \"\");\r\n                                            setValue('kinphone', value?.kin_details?.phone || \"\");\r\n                                            setValue('kinaddress', value?.kin_details?.address || \"\");\r\n                                            setValue('genname', value?.general_practitioner?.name || \"\");\r\n                                            setValue('genemail', value?.general_practitioner?.email || \"\");\r\n                                            setValue('genphone', value?.general_practitioner?.phone || \"\");\r\n                                            setValue('genaddress', value?.general_practitioner?.address || \"\");\r\n                                            console.log(\"Raw DOB:\", value?.dob);\r\n\r\n                                            if (value?.dob) {\r\n                                                // Convert to Dayjs format\r\n                                                const parsedDate = dayjs(value.dob);\r\n\r\n                                                // Check if the conversion is valid\r\n                                                if (!parsedDate.isValid()) {\r\n                                                    console.error(\"Invalid DOB Format:\", value.dob);\r\n                                                    return;\r\n                                                }\r\n\r\n                                                console.log(\"Parsed Date:\", parsedDate);\r\n                                                setValue(\"selectedDate\", parsedDate);\r\n                                            }\r\n                                        }}\r\n                                        error={errors?.patient?.message}\r\n                                        register={register(\"patient\", {\r\n                                            required: false,\r\n                                        })}\r\n                                    />\r\n                                </>}\r\n                            </Grid>\r\n                            <Grid item xs={3} mt={2}>\r\n                                {patientType == 'existing' && <><InputLabel sx={{\r\n                                    textTransform: \"capitalize\", textAlign: 'left', fontWeight: 700, display: 'block',\r\n\r\n                                    fontSize: \"14px\",\r\n                                    color: \"#333\",\r\n                                    marginBottom: \"4px\",\r\n                                }}>\r\n\r\n                                    Select Aftercare Document :\r\n                                </InputLabel>\r\n                                    <SelectField\r\n                                        size={'small'}\r\n                                        newLabel={'Select Document'}\r\n                                        fullWidth={true}\r\n                                        options={documents}\r\n                                        selected={selectedDocument}\r\n                                        onSelect={(value) => {\r\n                                            setSelectedDocument(value)\r\n\r\n\r\n                                        }}\r\n                                        error={errors?.document?.message}\r\n                                        register={register(\"document\", {\r\n                                            required: false,\r\n                                        })}\r\n                                    /> </>}\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={3} mt={2}><InputField\r\n                            label={\"Patient First Name :*\"}\r\n                            size={'small'}\r\n                            placeholder={\"Patient First Name\"}\r\n                            error={errors?.fname?.message}\r\n                            register={register(\"fname\", {\r\n                                required:\r\n                                    \"Please enter your fname.\"\r\n\r\n                            })}\r\n                        /></Grid>\r\n                        <Grid item xs={3} mt={2}><InputField\r\n                            label={\"Patient Last Name :*\"}\r\n                            size={'small'}\r\n                            placeholder={\" Patient Last Name\"}\r\n                            error={errors?.lname?.message}\r\n                            register={register(\"lname\", {\r\n                                required:\r\n                                    \"Please enter your lname.\"\r\n\r\n                            })}\r\n                        /></Grid>\r\n                        <Grid item xs={3} mt={2}><InputField\r\n                            label={\"Patient Email :*\"}\r\n                            size={'small'}\r\n                            placeholder={\"Patient Email\"}\r\n                            error={errors?.email?.message}\r\n                            register={register(\"email\", {\r\n                                required:\r\n                                    \"Please enter your email.\"\r\n\r\n                            })}\r\n                        /></Grid>\r\n\r\n                        <Grid item xs={3} mt={2}>\r\n                            <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                                <Grid container spacing={2}>\r\n                                    {/* Single Date Selection */}\r\n                                    <Grid item xs={12}>\r\n                                        <Box>\r\n                                            <InputLabel sx={{\r\n                                                textTransform: \"capitalize\", textAlign: 'left', fontWeight: 700, display: 'block',\r\n\r\n                                                fontSize: \"14px\",\r\n                                                color: \"#333\",\r\n                                                marginBottom: 1.5,\r\n                                            }}>\r\n                                                DOB :*\r\n                                            </InputLabel>\r\n                                            <Controller\r\n                                                name=\"selectedDate\"\r\n                                                control={control}\r\n                                                rules={{ required: \"Please select a date\" }}\r\n                                                render={({ field }) => (\r\n                                                    <DatePicker\r\n                                                        {...field}\r\n                                                        value={field.value || null}\r\n                                                        onChange={(newValue) => field.onChange(newValue)}\r\n                                                        slotProps={{\r\n                                                            textField: {\r\n                                                                size: \"small\",\r\n                                                                fullWidth: true,\r\n                                                                sx: {\r\n                                                                    \"& .MuiOutlinedInput-root\": {\r\n                                                                        borderRadius: '12px',\r\n                                                                        \"& fieldset\": { border: \"1 solid #e0e0e0\" }, // Default border\r\n                                                                        \"&:hover fieldset\": { border: \"1 solid #0076bf\" }, // On hover\r\n                                                                        \"&.Mui-focused fieldset\": { border: \"1 solid #0076bf !important\" } // On focus\r\n                                                                    },\r\n                                                                },\r\n                                                            },\r\n                                                        }}\r\n                                                    />\r\n                                                )}\r\n                                            />\r\n                                            {errors.selectedDate && (\r\n                                                <Typography color=\"error\">{errors.selectedDate.message}</Typography>\r\n                                            )}\r\n                                        </Box>\r\n                                    </Grid>\r\n\r\n\r\n\r\n\r\n                                </Grid>\r\n\r\n\r\n                            </LocalizationProvider>\r\n                        </Grid>\r\n                        <Grid item xs={3} mt={2}><InputField\r\n                            label={\"Phone Number :*\"}\r\n                            size={'small'}\r\n                            placeholder={\"Phone Number\"}\r\n                            error={errors?.phone?.message}\r\n                            register={register(\"phone\", {\r\n                                required:\r\n                                    \"Please enter your phone.\"\r\n\r\n                            })}\r\n                        /></Grid>\r\n                        <Grid item xs={3} mt={2}><InputField\r\n                            label={\"Post Code :*\"}\r\n                            size={'small'}\r\n                            placeholder={\"Post Code\"}\r\n                            error={errors?.post?.message}\r\n                            register={register(\"post\", {\r\n                                required:\r\n                                    \"Please enter your postcode.\"\r\n\r\n                            })}\r\n                        /></Grid>\r\n                        <Grid item xs={3} mt={2}><InputField\r\n                            label={\"Address :*\"}\r\n                            size={'small'}\r\n                            placeholder={\"Address\"}\r\n                            error={errors?.address?.message}\r\n                            register={register(\"address\", {\r\n                                required:\r\n                                    \"Please enter your address.\"\r\n\r\n                            })}\r\n                        /></Grid>\r\n                        <Grid item xs={3} mt={2}><InputField\r\n                            label={\"Notes :\"}\r\n                            multiline\r\n                            rows={3}\r\n                            size={'small'}\r\n                            placeholder={\"Notes\"}\r\n                            error={errors?.notes?.message}\r\n                            register={register(\"notes\", {\r\n                                required:\r\n                                    false\r\n\r\n                            })}\r\n                        /></Grid>\r\n\r\n\r\n                    </Grid>\r\n                    <Divider sx={{ mt: 4 }} />\r\n                    <Typography variant=\"h5\" sx={{ fontWeight: 700, mt: 4 }}>\r\n                        Next of Kin Details\r\n                    </Typography>\r\n                    <Grid container mt={4} spacing={2}>\r\n\r\n\r\n                        <Grid item xs={3} mt={2}><InputField\r\n                            label={\"Name :\"}\r\n                            size={'small'}\r\n                            placeholder={\"Name\"}\r\n                            error={errors?.name?.message}\r\n                            register={register(\"name\", {\r\n                                required:\r\n                                    false\r\n\r\n                            })}\r\n                        /></Grid>\r\n\r\n                        <Grid item xs={3} mt={2}><InputField\r\n                            label={\"Email :\"}\r\n                            size={'small'}\r\n                            placeholder={\"Email\"}\r\n                            error={errors?.kinemail?.message}\r\n                            register={register(\"kinemail\", {\r\n                                required:\r\n                                    false\r\n\r\n                            })}\r\n                        /></Grid>\r\n\r\n                        <Grid item xs={3} mt={2}><InputField\r\n                            label={\"Phone Number :\"}\r\n                            size={'small'}\r\n                            placeholder={\"Phone Number\"}\r\n                            error={errors?.kinphone?.message}\r\n                            register={register(\"kinphone\", {\r\n                                required:\r\n                                    false\r\n\r\n                            })}\r\n                        /></Grid>\r\n\r\n                        <Grid item xs={3} mt={2}><InputField\r\n                            label={\"Address :\"}\r\n                            size={'small'}\r\n                            placeholder={\"Address\"}\r\n                            error={errors?.kinaddress?.message}\r\n                            register={register(\"kinaddress\", {\r\n                                required:\r\n                                    false\r\n\r\n                            })}\r\n                        /></Grid>\r\n\r\n\r\n\r\n                    </Grid>\r\n                    <Divider sx={{ mt: 4 }} />\r\n                    <Typography variant=\"h5\" sx={{ fontWeight: 700, mt: 4 }}>\r\n                        General Practitioners(GP / Doctors)\r\n                    </Typography>\r\n                    <Grid container mt={4} spacing={2}>\r\n\r\n\r\n                        <Grid item xs={3} mt={2}><InputField\r\n                            label={\"Name :\"}\r\n                            size={'small'}\r\n                            placeholder={\"Name\"}\r\n                            error={errors?.genname?.message}\r\n                            register={register(\"genname\", {\r\n                                required:\r\n                                    false\r\n\r\n                            })}\r\n                        /></Grid>\r\n\r\n                        <Grid item xs={3} mt={2}><InputField\r\n                            label={\"Email :\"}\r\n                            size={'small'}\r\n                            placeholder={\"Email\"}\r\n                            error={errors?.genemail?.message}\r\n                            register={register(\"genemail\", {\r\n                                required:\r\n                                    false\r\n\r\n                            })}\r\n                        /></Grid>\r\n\r\n                        <Grid item xs={3} mt={2}><InputField\r\n                            label={\"Phone Number :\"}\r\n                            size={'small'}\r\n                            placeholder={\"Phone Number\"}\r\n                            error={errors?.genphone?.message}\r\n                            register={register(\"genphone\", {\r\n                                required:\r\n                                    false\r\n\r\n                            })}\r\n                        /></Grid>\r\n\r\n                        <Grid item xs={3} mt={2}><InputField\r\n                            label={\"Address :\"}\r\n                            size={'small'}\r\n                            placeholder={\"Address\"}\r\n                            error={errors?.genaddress?.message}\r\n                            register={register(\"genaddress\", {\r\n                                required:\r\n                                    false\r\n\r\n                            })}\r\n                        /></Grid>\r\n                        <Grid container p={1}>\r\n                            <Divider sx={{ mt: 4, width: '100%' }} />\r\n                        </Grid>\r\n                        <Grid container spacing={2} p={2}>\r\n                            {/* Marketing Permission */}\r\n                            <Grid item xs={6} mt={2}>\r\n                                <FormLabel component=\"legend\" sx={{ color: 'black' }}>Can we have permission to use your images for marketing?</FormLabel>\r\n                                <FormControl component=\"fieldset\">\r\n\r\n                                    <RadioGroup row name=\"marketing\" value={permissions.marketing} onChange={handleChange2}>\r\n                                        <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\r\n                                        <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            {/* Offers & Reminders Permission */}\r\n                            <Grid item xs={6} mt={2}>\r\n                                <FormLabel component=\"legend\" sx={{ color: 'black' }}>Can we send you offers & reminders by text email & WhatsApp?</FormLabel>\r\n                                <FormControl component=\"fieldset\">\r\n\r\n                                    <RadioGroup row name=\"offers\" value={permissions.offers} onChange={handleChange2}>\r\n                                        <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\r\n                                        <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container p={1}>\r\n                            <Divider sx={{ mt: 4, width: '100%' }} />\r\n                        </Grid>\r\n                        <Typography variant=\"h5\" fontWeight=\"bold\" mb={2} p={2}>\r\n                            Treatment plan section\r\n                        </Typography>\r\n\r\n                        <Grid container spacing={2} p={2}>\r\n                            {/* Patient Concerns */}\r\n                            <Grid item xs={6} mt={2}>\r\n                                <InputField\r\n                                    label=\"Patient concerns\"\r\n                                    size=\"small\"\r\n                                    placeholder=\"Patient concerns\"\r\n                                    error={errors?.patientConcerns?.message}\r\n                                    register={register(\"patientConcerns\", { required: false })}\r\n                                    multiline\r\n                                    rows={4}\r\n                                />\r\n                            </Grid>\r\n\r\n                            {/* Patient Goal */}\r\n                            <Grid item xs={6} mt={2}>\r\n                                <InputField\r\n                                    label=\"Patient goal\"\r\n                                    size=\"small\"\r\n                                    placeholder=\"Patient goal\"\r\n                                    error={errors?.patientGoal?.message}\r\n                                    register={register(\"patientGoal\", { required: false })}\r\n                                    multiline\r\n                                    rows={4}\r\n                                />\r\n                            </Grid>\r\n\r\n                            {/* Advised Plan/Product */}\r\n                            <Grid item xs={6} mt={2}>\r\n                                <InputField\r\n                                    label=\"Advised Plan/product\"\r\n                                    size=\"small\"\r\n                                    placeholder=\"Advised Plan/product\"\r\n                                    error={errors?.advisedPlan?.message}\r\n                                    register={register(\"advisedPlan\", { required: false })}\r\n                                    multiline\r\n                                    rows={4}\r\n                                />\r\n                            </Grid>\r\n\r\n                            {/* Expected Result */}\r\n                            <Grid item xs={6} mt={2}>\r\n                                <InputField\r\n                                    label=\"Expected Result\"\r\n                                    size=\"small\"\r\n                                    placeholder=\"Expected Result\"\r\n                                    error={errors?.expectedResult?.message}\r\n                                    register={register(\"expectedResult\", { required: false })}\r\n                                    multiline\r\n                                    rows={4}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Typography variant=\"p\" fontWeight={500} mb={2} p={2}>\r\n                            I confirm my medical history to be true and correct. I agree I have read and understood all the contents of this document. I have read and understood all the content of this document and agree with the treatment plan. I give my consent to treatment and understand the possible complications and side effects. I confirm I have received an aftercare sheet\r\n                        </Typography>\r\n                        <Grid container spacing={5} p={2} alignItems=\"center\">\r\n                            {/* Date Field */}\r\n                            <Grid item xs={6} mt={2}>\r\n                                <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                                    <Grid container spacing={2}>\r\n                                        {/* Single Date Selection */}\r\n                                        <Grid item xs={12}>\r\n                                            <Box>\r\n                                                <InputLabel sx={{\r\n                                                    textTransform: \"capitalize\", textAlign: 'left', fontWeight: 700, display: 'block',\r\n\r\n                                                    fontSize: \"14px\",\r\n                                                    color: \"#333\",\r\n                                                    marginBottom: 1.5,\r\n                                                }}>\r\n                                                    Patient Date :*\r\n                                                </InputLabel>\r\n                                                <Controller\r\n                                                    name=\"patientDate\"\r\n                                                    control={control}\r\n                                                    rules={{ required: \"Please select a date\" }}\r\n                                                    render={({ field }) => (\r\n                                                        <DatePicker\r\n                                                            {...field}\r\n                                                            value={field.value || null}\r\n                                                            onChange={(newValue) => field.onChange(newValue)}\r\n                                                            slotProps={{\r\n                                                                textField: {\r\n                                                                    size: \"small\",\r\n                                                                    fullWidth: true,\r\n                                                                    sx: {\r\n                                                                        \"& .MuiOutlinedInput-root\": {\r\n                                                                            borderRadius: '12px',\r\n                                                                            \"& fieldset\": { border: \"1 solid #e0e0e0\" }, // Default border\r\n                                                                            \"&:hover fieldset\": { border: \"1 solid #0076bf\" }, // On hover\r\n                                                                            \"&.Mui-focused fieldset\": { border: \"1 solid #0076bf !important\" } // On focus\r\n                                                                        },\r\n                                                                    },\r\n                                                                },\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                />\r\n                                                {errors.patientDate && (\r\n                                                    <Typography color=\"error\">{errors.patientDate.message}</Typography>\r\n                                                )}\r\n                                            </Box>\r\n                                        </Grid>\r\n\r\n\r\n\r\n\r\n                                    </Grid>\r\n\r\n\r\n                                </LocalizationProvider>\r\n                            </Grid>\r\n\r\n                            {/* Signature Canvas */}\r\n                            <Grid item xs={6} mt={2}>\r\n                                <Typography>Patient Signature:</Typography>\r\n                                <SignatureCanvas\r\n                                    ref={sigCanvas}\r\n                                    penColor=\"black\"\r\n                                    canvasProps={{\r\n                                        width: 300,\r\n                                        height: 150,\r\n                                        className: \"sigCanvas\",\r\n                                        style: { border: \"1px dashed black\" },\r\n                                    }}\r\n                                />\r\n                                <Grid container spacing={1} mt={1}>\r\n                                    <Grid item>\r\n                                        <Button variant=\"contained\" color=\"secondary\" onClick={handleClear}>\r\n                                            Clear Signature\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button variant=\"contained\" color=\"primary\" onClick={handleSave}>\r\n                                            Save Signature\r\n                                        </Button>\r\n                                    </Grid>\r\n\r\n                                </Grid>\r\n\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container p={1}>\r\n                            <Divider sx={{ mt: 4, width: '100%' }} />\r\n                        </Grid>\r\n                        <Typography variant=\"h5\" p={2} fontWeight={'bold'}>Treatment Record Section</Typography>\r\n\r\n                        <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                            {fields.map((item, index) => (\r\n                                <Grid container spacing={2} p={2} alignItems=\"center\" key={item.id} mt={2}>\r\n\r\n                                    {/* Patient Date Selection */}\r\n                                    <Grid item xs={3}>\r\n                                        <Box>\r\n                                            <InputLabel\r\n                                                sx={{\r\n                                                    textTransform: \"capitalize\",\r\n                                                    textAlign: \"left\",\r\n                                                    fontWeight: 700,\r\n                                                    fontSize: \"14px\",\r\n                                                    color: \"#333\",\r\n                                                    marginBottom: 1.5,\r\n                                                }}\r\n                                            >\r\n                                                Date :*\r\n                                            </InputLabel>\r\n\r\n                                            <Controller\r\n                                                name={`records.${index}.date`}\r\n                                                control={control}\r\n                                                rules={{ required: \"Please select a date\" }}\r\n                                                render={({ field }) => (\r\n                                                    <DatePicker\r\n                                                        {...field}\r\n                                                        value={field.value || null}\r\n                                                        onChange={(newValue) => field.onChange(newValue)}\r\n                                                        slotProps={{\r\n                                                            textField: {\r\n                                                                size: \"small\",\r\n                                                                fullWidth: true,\r\n                                                                sx: {\r\n                                                                    \"& .MuiOutlinedInput-root\": {\r\n                                                                        borderRadius: \"12px\",\r\n                                                                        \"& fieldset\": { border: \"1px solid #e0e0e0\" },\r\n                                                                        \"&:hover fieldset\": { border: \"1px solid #0076bf\" },\r\n                                                                        \"&.Mui-focused fieldset\": { border: \"1px solid #0076bf !important\" },\r\n                                                                    },\r\n                                                                },\r\n                                                            },\r\n                                                        }}\r\n                                                    />\r\n                                                )}\r\n                                            />\r\n                                            {errors.records?.[index]?.date && (\r\n                                                <Typography color=\"error\">\r\n                                                    {errors.records[index].date.message}\r\n                                                </Typography>\r\n                                            )}\r\n                                        </Box>\r\n                                    </Grid>\r\n\r\n                                    {/* Amount Field */}\r\n                                    <Grid item xs={3} mt={2}>\r\n                                        <InputField\r\n                                            label=\"Amount\"\r\n                                            placeholder=\"Order Amount\"\r\n                                            size=\"small\"\r\n                                            register={register(`records.${index}.amount`)}\r\n                                        />\r\n                                    </Grid>\r\n\r\n\r\n\r\n                                    {/* Description Field */}\r\n                                    <Grid item xs={4}>\r\n                                        <InputField\r\n                                            label=\"Description\"\r\n                                            multiline\r\n                                            rows={3}\r\n                                            placeholder=\"Description\"\r\n                                            register={register(`records.${index}.description`)}\r\n                                        />\r\n                                    </Grid>\r\n                                    {/* Remove Button (only for additional fields) */}\r\n                                    <Grid item xs={1}>\r\n                                        {index > 0 && (\r\n                                            <IconButton color=\"error\" onClick={() => remove(index)}>\r\n                                                <DeleteIcon />\r\n                                            </IconButton>\r\n                                        )}\r\n                                    </Grid>\r\n                                </Grid>\r\n                            ))}\r\n                        </LocalizationProvider>\r\n\r\n\r\n\r\n                        <Grid container p={2}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={() => append({ date: \"\", amount: \"\", description: \"\" })}\r\n                                sx={{ mt: 2, textTransform: 'capitalize' }}\r\n                            >\r\n                                Add More\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid container p={1}>\r\n                            <Divider sx={{ mt: 4, width: '100%' }} />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={5}>\r\n                            <InputLabel sx={{\r\n                                textTransform: \"capitalize\", mt: 2,\r\n                                textAlign: \"left\",\r\n                                fontWeight: 600,\r\n                                fontSize: \"14px\",\r\n                                color: \"#333\",\r\n                                marginBottom: \"4px\",\r\n                            }}>\r\n                                Upload Batch Images :*\r\n                            </InputLabel>\r\n\r\n                            <Controller\r\n                                name=\"media\"\r\n                                control={control}\r\n                                rules={{\r\n                                    required: \"At least one image file is required\",\r\n                                    validate: (value) => {\r\n                                        if (!value || value.length === 0) {\r\n                                            return \"At least one image file is required\";\r\n                                        }\r\n                                        for (let i = 0; i < value.length; i++) {\r\n                                            if (value[i].size > 10 * 1024 * 1024) { // 10MB limit\r\n                                                return \"Each file must be smaller than 10MB\";\r\n                                            }\r\n                                            if (!value[i].type.startsWith(\"image/\")) {\r\n                                                return \"Only image files are allowed\";\r\n                                            }\r\n                                        }\r\n                                        return true;\r\n                                    },\r\n                                }}\r\n                                render={({ field: { onChange } }) => (\r\n                                    <>\r\n                                        <Box\r\n                                            sx={{\r\n                                                borderRadius: \"8px\",\r\n                                                padding: \"20px\",\r\n                                                textAlign: \"center\",\r\n                                                cursor: \"pointer\",\r\n                                                backgroundColor: \"#f9f9f9\",\r\n                                                height: '135px',\r\n                                                \"&:hover\": { backgroundColor: \"#eef7ff\" },\r\n                                            }}\r\n                                            onClick={() => document.getElementById(\"upload-media\").click()}\r\n                                        >\r\n                                            {!imageLoader ? (\r\n                                                <>\r\n                                                    <input\r\n                                                        type=\"file\"\r\n                                                        accept=\"image/*\"\r\n                                                        multiple\r\n                                                        style={{ display: \"none\" }}\r\n                                                        id=\"upload-media\"\r\n                                                        onChange={(e) => {\r\n                                                            const files = Array.from(e.target.files);\r\n                                                            onChange(files); // Update react-hook-form\r\n                                                            handleFileChange2(e); // Handle upload logic\r\n                                                        }}\r\n                                                    />\r\n                                                    <UploadFileIcon sx={{ fontSize: 40, color: \"#0EA5EA\" }} />\r\n                                                    <Typography variant=\"body1\" sx={{ color: \"#333\", mt: 1 }}>\r\n                                                        Drag & drop or click to upload images\r\n                                                    </Typography>\r\n                                                    <Typography variant=\"caption\" sx={{ color: \"#666\" }}>\r\n                                                        Allowed: Images (Max 10MB per file)\r\n                                                    </Typography>\r\n                                                </>\r\n                                            ) : (\r\n                                                <CircularProgress size={90} />\r\n                                            )}\r\n                                        </Box>\r\n\r\n                                        {errors.media && (\r\n                                            <Typography color=\"error\" variant=\"body2\" sx={{ mt: 1 }}>\r\n                                                {errors.media.message}\r\n                                            </Typography>\r\n                                        )}\r\n                                    </>\r\n                                )}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid container p={2}>\r\n                            {uploadedImages?.length > 0 && (\r\n                                <Grid item xs={12}>\r\n                                    <InputLabel sx={{ textTransform: \"capitalize\", textAlign: 'left', fontWeight: 700, display: 'block', mb: 3, mt: 3 }}>\r\n                                        Uploaded Batch Images :\r\n                                    </InputLabel>\r\n                                </Grid>\r\n                            )}\r\n                            <Box sx={{ display: \"flex\", gap: 2, flexWrap: \"wrap\" }}>\r\n                                {uploadedImages?.length > 0 &&\r\n                                    uploadedImages.map((file, index) => (\r\n                                        <Box key={index} sx={{ position: \"relative\", textAlign: \"center\" }}>\r\n                                            <img\r\n                                                src={file}\r\n                                                alt=\"Uploaded Preview\"\r\n                                                style={{ width: \"100px\", height: \"100px\", borderRadius: \"8px\", objectFit: \"cover\" }}\r\n                                            />\r\n                                            <Typography\r\n                                                variant=\"caption\"\r\n                                                sx={{\r\n                                                    display: \"block\",\r\n                                                    mt: 1,\r\n                                                    maxWidth: \"150px\",\r\n                                                    whiteSpace: \"nowrap\",\r\n                                                    overflow: \"hidden\",\r\n                                                    textOverflow: \"ellipsis\",\r\n                                                }}\r\n                                            >\r\n                                                {file.split(\"/\").pop()}\r\n                                            </Typography>\r\n                                            <Box sx={{ position: \"absolute\", top: 0, right: 0 }}>\r\n                                                <IconButton\r\n                                                    onClick={() => handleRemoveImage(index)}\r\n                                                    sx={{\r\n                                                        backgroundColor: \"rgba(0,0,0,0.6)\",\r\n                                                        color: \"#fff\",\r\n                                                        \"&:hover\": { backgroundColor: \"red\" },\r\n                                                        width: 20,\r\n                                                        height: 20,\r\n                                                        borderRadius: \"50%\",\r\n                                                        p: 0.5,\r\n                                                    }}\r\n                                                >\r\n                                                    <CloseIcon fontSize=\"small\" />\r\n                                                </IconButton>\r\n                                            </Box>\r\n                                        </Box>\r\n                                    ))}\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid container p={1}>\r\n                            <Divider sx={{ mt: 4, width: '100%' }} />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={5}>\r\n                            <InputLabel sx={{\r\n                                textTransform: \"capitalize\", mt: 2,\r\n                                textAlign: \"left\",\r\n                                fontWeight: 600,\r\n                                fontSize: \"14px\",\r\n                                color: \"#333\",\r\n                                marginBottom: \"4px\",\r\n                            }}>\r\n                                Upload Before Images :*\r\n                            </InputLabel>\r\n\r\n                            <Controller\r\n                                name=\"media2\"\r\n                                control={control}\r\n                                rules={{\r\n                                    required: \"At least one image file is required\",\r\n                                    validate: (value) => {\r\n                                        if (!value || value.length === 0) {\r\n                                            return \"At least one image file is required\";\r\n                                        }\r\n                                        for (let i = 0; i < value.length; i++) {\r\n                                            if (value[i].size > 10 * 1024 * 1024) { // 10MB limit\r\n                                                return \"Each file must be smaller than 10MB\";\r\n                                            }\r\n                                            if (!value[i].type.startsWith(\"image/\")) {\r\n                                                return \"Only image files are allowed\";\r\n                                            }\r\n                                        }\r\n                                        return true;\r\n                                    },\r\n                                }}\r\n                                render={({ field: { onChange } }) => (\r\n                                    <>\r\n                                        <Box\r\n                                            sx={{\r\n                                                borderRadius: \"8px\",\r\n                                                padding: \"20px\",\r\n                                                textAlign: \"center\",\r\n                                                cursor: \"pointer\",\r\n                                                backgroundColor: \"#f9f9f9\",\r\n                                                height: '135px',\r\n                                                \"&:hover\": { backgroundColor: \"#eef7ff\" },\r\n                                            }}\r\n                                            onClick={() => document.getElementById(\"upload-media2\").click()}\r\n                                        >\r\n                                            {!imageLoaderBefore ? (\r\n                                                <>\r\n                                                    <input\r\n                                                        type=\"file\"\r\n                                                        accept=\"image/*\"\r\n                                                        multiple\r\n                                                        style={{ display: \"none\" }}\r\n                                                        id=\"upload-media2\"\r\n                                                        onChange={(e) => {\r\n                                                            const files = Array.from(e.target.files);\r\n                                                            onChange(files); // Update react-hook-form\r\n                                                            handleFileChange3(e); // Handle upload logic\r\n                                                        }}\r\n                                                    />\r\n                                                    <UploadFileIcon sx={{ fontSize: 40, color: \"#0EA5EA\" }} />\r\n                                                    <Typography variant=\"body1\" sx={{ color: \"#333\", mt: 1 }}>\r\n                                                        Drag & drop or click to upload images\r\n                                                    </Typography>\r\n                                                    <Typography variant=\"caption\" sx={{ color: \"#666\" }}>\r\n                                                        Allowed: Images (Max 10MB per file)\r\n                                                    </Typography>\r\n                                                </>\r\n                                            ) : (\r\n                                                <CircularProgress size={90} />\r\n                                            )}\r\n                                        </Box>\r\n\r\n                                        {errors.media2 && (\r\n                                            <Typography color=\"error\" variant=\"body2\" sx={{ mt: 1 }}>\r\n                                                {errors.media2.message}\r\n                                            </Typography>\r\n                                        )}\r\n                                    </>\r\n                                )}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid container p={2}>\r\n                            {beforeImages?.length > 0 && (\r\n                                <Grid item xs={12}>\r\n                                    <InputLabel sx={{ textTransform: \"capitalize\", textAlign: 'left', fontWeight: 700, display: 'block', mb: 3, mt: 3 }}>\r\n                                        Uploaded Before Images :\r\n                                    </InputLabel>\r\n                                </Grid>\r\n                            )}\r\n                            <Box sx={{ display: \"flex\", gap: 2, flexWrap: \"wrap\" }}>\r\n                                {beforeImages?.length > 0 &&\r\n                                    beforeImages.map((file, index) => (\r\n                                        <Box key={index} sx={{ position: \"relative\", textAlign: \"center\" }}>\r\n                                            <img\r\n                                                src={file}\r\n                                                alt=\"Uploaded Preview\"\r\n                                                style={{ width: \"100px\", height: \"100px\", borderRadius: \"8px\", objectFit: \"cover\" }}\r\n                                            />\r\n                                            <Typography\r\n                                                variant=\"caption\"\r\n                                                sx={{\r\n                                                    display: \"block\",\r\n                                                    mt: 1,\r\n                                                    maxWidth: \"150px\",\r\n                                                    whiteSpace: \"nowrap\",\r\n                                                    overflow: \"hidden\",\r\n                                                    textOverflow: \"ellipsis\",\r\n                                                }}\r\n                                            >\r\n                                                {file.split(\"/\").pop()}\r\n                                            </Typography>\r\n                                            <Box sx={{ position: \"absolute\", top: 0, right: 0 }}>\r\n                                                <IconButton\r\n                                                    onClick={() => handleRemoveImage2(index)}\r\n                                                    sx={{\r\n                                                        backgroundColor: \"rgba(0,0,0,0.6)\",\r\n                                                        color: \"#fff\",\r\n                                                        \"&:hover\": { backgroundColor: \"red\" },\r\n                                                        width: 20,\r\n                                                        height: 20,\r\n                                                        borderRadius: \"50%\",\r\n                                                        p: 0.5,\r\n                                                    }}\r\n                                                >\r\n                                                    <CloseIcon fontSize=\"small\" />\r\n                                                </IconButton>\r\n                                            </Box>\r\n                                        </Box>\r\n                                    ))}\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid container p={1}>\r\n                            <Divider sx={{ mt: 4, width: '100%' }} />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={5}>\r\n                            <InputLabel sx={{\r\n                                textTransform: \"capitalize\", mt: 2,\r\n                                textAlign: \"left\",\r\n                                fontWeight: 600,\r\n                                fontSize: \"14px\",\r\n                                color: \"#333\",\r\n                                marginBottom: \"4px\",\r\n                            }}>\r\n                                Upload After Images :*\r\n                            </InputLabel>\r\n\r\n                            <Controller\r\n                                name=\"media3\"\r\n                                control={control}\r\n                                rules={{\r\n                                    required: \"At least one image file is required\",\r\n                                    validate: (value) => {\r\n                                        if (!value || value.length === 0) {\r\n                                            return \"At least one image file is required\";\r\n                                        }\r\n                                        for (let i = 0; i < value.length; i++) {\r\n                                            if (value[i].size > 10 * 1024 * 1024) { // 10MB limit\r\n                                                return \"Each file must be smaller than 10MB\";\r\n                                            }\r\n                                            if (!value[i].type.startsWith(\"image/\")) {\r\n                                                return \"Only image files are allowed\";\r\n                                            }\r\n                                        }\r\n                                        return true;\r\n                                    },\r\n                                }}\r\n                                render={({ field: { onChange } }) => (\r\n                                    <>\r\n                                        <Box\r\n                                            sx={{\r\n                                                borderRadius: \"8px\",\r\n                                                padding: \"20px\",\r\n                                                textAlign: \"center\",\r\n                                                cursor: \"pointer\",\r\n                                                backgroundColor: \"#f9f9f9\",\r\n                                                height: '135px',\r\n                                                \"&:hover\": { backgroundColor: \"#eef7ff\" },\r\n                                            }}\r\n                                            onClick={() => document.getElementById(\"upload-media3\").click()}\r\n                                        >\r\n                                            {!imageLoaderAfter ? (\r\n                                                <>\r\n                                                    <input\r\n                                                        type=\"file\"\r\n                                                        accept=\"image/*\"\r\n                                                        multiple\r\n                                                        style={{ display: \"none\" }}\r\n                                                        id=\"upload-media3\"\r\n                                                        onChange={(e) => {\r\n                                                            const files = Array.from(e.target.files);\r\n                                                            onChange(files); // Update react-hook-form\r\n                                                            handleFileChange4(e); // Handle upload logic\r\n                                                        }}\r\n                                                    />\r\n                                                    <UploadFileIcon sx={{ fontSize: 40, color: \"#0EA5EA\" }} />\r\n                                                    <Typography variant=\"body1\" sx={{ color: \"#333\", mt: 1 }}>\r\n                                                        Drag & drop or click to upload images\r\n                                                    </Typography>\r\n                                                    <Typography variant=\"caption\" sx={{ color: \"#666\" }}>\r\n                                                        Allowed: Images (Max 10MB per file)\r\n                                                    </Typography>\r\n                                                </>\r\n                                            ) : (\r\n                                                <CircularProgress size={90} />\r\n                                            )}\r\n                                        </Box>\r\n\r\n                                        {errors.media3 && (\r\n                                            <Typography color=\"error\" variant=\"body2\" sx={{ mt: 1 }}>\r\n                                                {errors.media3.message}\r\n                                            </Typography>\r\n                                        )}\r\n                                    </>\r\n                                )}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid container p={2}>\r\n                            {afterImages?.length > 0 && (\r\n                                <Grid item xs={12}>\r\n                                    <InputLabel sx={{ textTransform: \"capitalize\", textAlign: 'left', fontWeight: 700, display: 'block', mb: 3, mt: 3 }}>\r\n                                        Uploaded After Images :\r\n                                    </InputLabel>\r\n                                </Grid>\r\n                            )}\r\n                            <Box sx={{ display: \"flex\", gap: 2, flexWrap: \"wrap\" }}>\r\n                                {afterImages?.length > 0 &&\r\n                                    afterImages.map((file, index) => (\r\n                                        <Box key={index} sx={{ position: \"relative\", textAlign: \"center\" }}>\r\n                                            <img\r\n                                                src={file}\r\n                                                alt=\"Uploaded Preview\"\r\n                                                style={{ width: \"100px\", height: \"100px\", borderRadius: \"8px\", objectFit: \"cover\" }}\r\n                                            />\r\n                                            <Typography\r\n                                                variant=\"caption\"\r\n                                                sx={{\r\n                                                    display: \"block\",\r\n                                                    mt: 1,\r\n                                                    maxWidth: \"150px\",\r\n                                                    whiteSpace: \"nowrap\",\r\n                                                    overflow: \"hidden\",\r\n                                                    textOverflow: \"ellipsis\",\r\n                                                }}\r\n                                            >\r\n                                                {file.split(\"/\").pop()}\r\n                                            </Typography>\r\n                                            <Box sx={{ position: \"absolute\", top: 0, right: 0 }}>\r\n                                                <IconButton\r\n                                                    onClick={() => handleRemoveImage3(index)}\r\n                                                    sx={{\r\n                                                        backgroundColor: \"rgba(0,0,0,0.6)\",\r\n                                                        color: \"#fff\",\r\n                                                        \"&:hover\": { backgroundColor: \"red\" },\r\n                                                        width: 20,\r\n                                                        height: 20,\r\n                                                        borderRadius: \"50%\",\r\n                                                        p: 0.5,\r\n                                                    }}\r\n                                                >\r\n                                                    <CloseIcon fontSize=\"small\" />\r\n                                                </IconButton>\r\n                                            </Box>\r\n                                        </Box>\r\n                                    ))}\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid container p={1}>\r\n                            <Divider sx={{ mt: 4, width: '100%' }} />\r\n                        </Grid>\r\n                        <Typography variant=\"h6\" p={2} sx={{ mt: 4, fontWeight: 'bold' }}>Further Records</Typography>\r\n\r\n                        <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                            {furtherFields.map((item, index) => (\r\n                                <Grid container spacing={2} p={2} alignItems=\"center\" key={item.id} mt={2}>\r\n                                    {/* Date Selection */}\r\n                                    <Grid item xs={5}>\r\n                                        <Box>\r\n                                            <InputLabel sx={{ fontWeight: 700, fontSize: \"14px\", marginBottom: 1.5 }}>\r\n                                                Further Date :*\r\n                                            </InputLabel>\r\n                                            <Controller\r\n                                                name={`furtherFields.${index}.date`}\r\n                                                control={control}\r\n                                                rules={{ required: \"Please select a date\" }}\r\n                                                render={({ field }) => (\r\n                                                    <DatePicker\r\n                                                        {...field}\r\n                                                        value={field.value || null}\r\n                                                        onChange={(newValue) => field.onChange(newValue)}\r\n                                                        slotProps={{\r\n                                                            textField: {\r\n                                                                size: \"small\",\r\n                                                                fullWidth: true,\r\n                                                                sx: {\r\n                                                                    \"& .MuiOutlinedInput-root\": {\r\n                                                                        borderRadius: \"12px\",\r\n                                                                        \"& fieldset\": { border: \"1px solid #e0e0e0\" },\r\n                                                                        \"&:hover fieldset\": { border: \"1px solid #0076bf\" },\r\n                                                                        \"&.Mui-focused fieldset\": { border: \"1px solid #0076bf !important\" },\r\n                                                                    },\r\n                                                                },\r\n                                                            },\r\n                                                        }}\r\n                                                    />\r\n                                                )}\r\n                                            />\r\n                                            {errors.furtherFields?.[index]?.date && (\r\n                                                <Typography color=\"error\">\r\n                                                    {errors.furtherFields[index].date.message}\r\n                                                </Typography>\r\n                                            )}\r\n                                        </Box>\r\n                                        <Typography mt={2}>\r\n                                            I confirm there has not been any changes to my medical history or my health since completing this form , it is still true and up to date.\r\n                                        </Typography>\r\n                                    </Grid>\r\n\r\n                                    {/* Signature Field */}\r\n                                    <Grid item xs={5}>\r\n                                        <Box>\r\n                                            <InputLabel sx={{ fontWeight: 700, fontSize: \"14px\", marginBottom: 1 }}>\r\n                                                Signature :*\r\n                                            </InputLabel>\r\n                                            <SignatureCanvas\r\n                                                ref={(el) => (signCanvasRefs.current[index] = el)}\r\n                                                penColor=\"black\"\r\n                                                canvasProps={{ width: 300, height: 150, style: { border: \"1px dashed black\" } }}\r\n                                            />\r\n\r\n                                        </Box>\r\n                                        <Grid container spacing={1} mt={1}>\r\n                                            <Grid item>\r\n                                                <Button variant=\"contained\" color=\"secondary\" onClick={() => clearSignature(index)}>\r\n                                                    Clear Signature\r\n                                                </Button>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Button variant=\"contained\" color=\"primary\" onClick={() => updateSignature(index)}>\r\n                                                    Save Signature\r\n                                                </Button>\r\n                                            </Grid>\r\n\r\n                                        </Grid>\r\n                                    </Grid>\r\n\r\n                                    {/* Remove Button */}\r\n                                    <Grid item xs={1} display=\"flex\" justifyContent=\"flex-end\">\r\n                                        {furtherFields.length > 1 && (\r\n                                            <IconButton color=\"error\" onClick={() => removeFurther(index)}>\r\n                                                <DeleteIcon />\r\n                                            </IconButton>\r\n                                        )}\r\n                                    </Grid>\r\n                                </Grid>\r\n                            ))}\r\n                        </LocalizationProvider>\r\n\r\n                        <Grid p={2}>\r\n                            <Button variant=\"contained\" color=\"secondary\" onClick={() => appendFurther({ date: null, sign: \"\" })} sx={{ mt: 2 }}>\r\n                                Add More Further Records\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid container p={1}>\r\n                            <Divider sx={{ mt: 4, width: '100%' }} />\r\n                        </Grid>\r\n                        <Grid item xs={6} mt={2}><InputField\r\n                            label={\"Notes :\"}\r\n                            multiline\r\n                            rows={3}\r\n                            size={'small'}\r\n                            placeholder={\"Notes\"}\r\n                            error={errors?.extranotes?.message}\r\n                            register={register(\"extranotes\", {\r\n                                required:\r\n                                    false\r\n\r\n                            })}\r\n                        /></Grid>\r\n                    </Grid>\r\n                    <Box sx={{ display: 'flex', justifyContent: 'flex-end', width: '100%', mt: 2 }}>\r\n                        <PrimaryButton loader={loader} disabled={loader} type={'submit'} title={\"Update\"} />\r\n                    </Box>\r\n                </Box>\r\n            </Paper>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default UserForm\r\n"
        }
    ]
}