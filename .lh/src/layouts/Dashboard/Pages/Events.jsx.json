{
    "sourceFile": "src/layouts/Dashboard/Pages/Events.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1744118122092,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1744118122092,
            "name": "Commit-0",
            "content": "import { Box, Chip, IconButton, Paper, Typography } from \"@mui/material\"\r\nimport DataTable from \"../../../components/DataTable\"\r\nimport { useEffect, useState } from \"react\"\r\nimport NorthEastIcon from '@mui/icons-material/NorthEast';\r\nimport { PrimaryButton } from \"../../../components/buttons\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ApiServices from \"../../../services/Apis\";\r\nimport moment from \"moment\";\r\nimport LocationOnOutlinedIcon from '@mui/icons-material/LocationOnOutlined';\r\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\r\nimport DriveFileRenameOutlineIcon from '@mui/icons-material/DriveFileRenameOutline';\r\nimport ConfirmationDialog from \"../../../components/confirmDialog\";\r\nimport { showPromiseToast } from \"../../../components/Toaster\";\r\n\r\n\r\nconst Events = () => {\r\n    const navigate = useNavigate()\r\n    const [data, setData] = useState()\r\n    const [confirmationDialog, setConfirmationDialog] = useState(false)\r\n    const [selectedRow, setSelectedRow] = useState(null)\r\n\r\n\r\n    const getData = async () => {\r\n        try {\r\n            let params = {\r\n                page: 1,\r\n                limit: 999\r\n            };\r\n\r\n            const data = await ApiServices.getEvents(params);\r\n\r\n\r\n            setData(data?.data?.events)\r\n\r\n\r\n        } catch (error) {\r\n            console.error(\"Error fetching location:\", error);\r\n        }\r\n    };\r\n\r\n    const columns = [\r\n      \r\n        {\r\n            header: \"Event Name\",\r\n            accessorKey: \"name\",\r\n        },\r\n        {\r\n            header: \"Address\",\r\n            accessorKey: \"address\",\r\n            cell: ({ getValue }) => {\r\n                const Address = getValue();\r\n                return (\r\n                    <Box>\r\n                        {Address}\r\n                    </Box>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            header: \"Start Time\",\r\n            accessorKey: \"start_time\",\r\n            \r\n        },\r\n        {\r\n            header: \"End Time\",\r\n            accessorKey: \"end_time\",\r\n            \r\n        },\r\n\r\n        {\r\n            header: \"Description\",\r\n            accessorKey: \"description\",\r\n            \r\n        },\r\n\r\n        {\r\n            header: \"Actions\",\r\n            cell: ({ row }) => (\r\n\r\n                <Box variant=\"contained\" color=\"primary\" sx={{ cursor: 'pointer', display: 'flex', gap: 2 }} >\r\n\r\n                    <IconButton onClick={() => navigate(\"/update-event\", { state: row?.original })}>\r\n                        <DriveFileRenameOutlineIcon sx={{ fontSize: '16px' }} />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => {\r\n                        const url = `https://www.google.com/maps?q=${row?.original?.latitude},${row?.original?.longitude}`;\r\n                        window.open(url, \"_blank\");\r\n                    }}>\r\n                        <LocationOnOutlinedIcon sx={{ fontSize: '16px' }} />\r\n\r\n                    </IconButton>\r\n                    <IconButton onClick={() => { setSelectedRow(row?.original); setConfirmationDialog(true) }}>\r\n                        <DeleteOutlineIcon sx={{ fontSize: '16px' }} />\r\n                    </IconButton>\r\n                </Box>\r\n            ),\r\n        },\r\n\r\n    ]\r\n\r\n    const HandleDelete = async () => {\r\n\r\n        try {\r\n            let obj = {\r\n                id: selectedRow?._id\r\n            };\r\n\r\n            const promise = ApiServices.DeleteEvent(obj);\r\n\r\n            // Handle the API response properly\r\n            const response = await promise;\r\n            console.log(response);\r\n\r\n            showPromiseToast(\r\n                promise,\r\n                \"Saving...\",\r\n                \"Added Successfully\",\r\n                \"Something Went Wrong\"\r\n            );\r\n\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        finally {\r\n            getData()\r\n        }\r\n\r\n    };\r\n    useEffect(() => {\r\n        getData()\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <ConfirmationDialog\r\n                open={confirmationDialog}\r\n                onClose={() => setConfirmationDialog(false)}\r\n                message={\"Are you sure you want to delete?\"}\r\n                action={async () => {\r\n                    setConfirmationDialog(false);\r\n                    HandleDelete()\r\n\r\n                }}\r\n            />\r\n            <Paper sx={{ width: \"100%\", overflow: \"hidden\", boxShadow: 'none' }}>\r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                    <Typography variant=\"h5\" sx={{ mb: 4, fontWeight: 500 }}>\r\n                        Events\r\n                    </Typography>\r\n                    <PrimaryButton onClick={() => navigate('/create-event')} title={\"Create\"} />\r\n                </Box>\r\n                {data?.length > 0 && <DataTable data={data} columns={columns} />}\r\n\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Events\r\n"
        }
    ]
}