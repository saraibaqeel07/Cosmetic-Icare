{
    "sourceFile": "src/layouts/Dashboard/Pages/AppointmentQuestions.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1744118122101,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1744118122101,
            "name": "Commit-0",
            "content": "\r\nimport {\r\n\r\n    Paper,\r\n\r\n    Typography,\r\n    Button,\r\n    Grid,\r\n    Box,\r\n    IconButton, // Import TableSortLabel\r\n} from \"@mui/material\"\r\nimport DataTable from \"../../../components/DataTable\"\r\nimport ApiServices from \"../../../services/Apis\";\r\nimport { useState } from \"react\";\r\nimport SelectField from \"../../../components/select\";\r\n\r\nimport ConfirmationDialog from \"../../../components/confirmDialog\";\r\nimport { showPromiseToast } from \"../../../components/Toaster\";\r\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\r\nimport { PrimaryButton } from \"../../../components/buttons\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst AppointmentQuestions = () => {\r\n    const [data, setData] = useState([])\r\n    const navigate = useNavigate()\r\n    const [type, setType] = useState(null)\r\n    const [confirmationDialog, setConfirmationDialog] = useState(false)\r\n    const [selectedRow, setSelectedRow] = useState(null)\r\n\r\n    const getData = async (type) => {\r\n        try {\r\n            let params = {\r\n                type: type?.id\r\n            }\r\n\r\n\r\n            const data = await ApiServices.getQuestions(params);\r\n            console.log(data);\r\n            setData(data?.data?.questions)\r\n\r\n\r\n\r\n\r\n        } catch (error) {\r\n            console.error(\"Error fetching location:\", error);\r\n        }\r\n    };\r\n\r\n\r\n    // Column definitions with sorting\r\n    const columns = [\r\n        {\r\n            header: \"Question\",\r\n            accessorKey: \"question\",\r\n        },\r\n        {\r\n            header: \"Type\",\r\n            accessorKey: \"type\",\r\n            cell: ({ row }) => (\r\n                <Box sx={{textTransform:\"capitalize\"}}>\r\n                    {row?.original?.type}\r\n                </Box>\r\n            ),\r\n        },\r\n        {\r\n            header: \"Options\",\r\n            accessorKey: \"answer\",\r\n            cell: ({ row }) => (\r\n                <Box>\r\n                    {row?.original?.options?.join(',')}\r\n                </Box>\r\n            ),\r\n        },\r\n        {\r\n            header: \"Description\",\r\n            accessorKey: \"description\",\r\n            \r\n        },\r\n        {\r\n            header: \"Actions\",\r\n            cell: ({ row }) => (\r\n                <Box>\r\n                    <IconButton onClick={() => { setSelectedRow(row?.original); setConfirmationDialog(true) }}>\r\n                        <DeleteOutlineIcon sx={{ fontSize: '16px' }} />\r\n                    </IconButton>\r\n                </Box>\r\n            ),\r\n        },\r\n\r\n    ]\r\n    const HandleDelete = async () => {\r\n\r\n        try {\r\n            let obj = {\r\n                id: selectedRow?._id\r\n            };\r\n\r\n            const promise = ApiServices.DeleteQuestion(obj);\r\n\r\n            // Handle the API response properly\r\n            const response = await promise;\r\n            console.log(response);\r\n\r\n            showPromiseToast(\r\n                promise,\r\n                \"Saving...\",\r\n                \"Added Successfully\",\r\n                \"Something Went Wrong\"\r\n            );\r\n\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        finally {\r\n            getData()\r\n        }\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <ConfirmationDialog\r\n                open={confirmationDialog}\r\n                onClose={() => setConfirmationDialog(false)}\r\n                message={\"Are you sure you want to delete?\"}\r\n                action={async () => {\r\n                    setConfirmationDialog(false);\r\n                    HandleDelete()\r\n\r\n                }}\r\n            />\r\n            <Paper sx={{ width: \"100%\", overflow: \"hidden\", boxShadow: 'none' }}>\r\n\r\n                <Grid container justifyContent={'space-between'}>\r\n                    <Typography variant=\"h5\" sx={{ mb: 4, fontWeight: 500 }}>\r\n                        Appointment Questions\r\n                    </Typography>\r\n                    <Grid item xs={3} sm={3} display={'flex'} gap={1} justifyContent={'flex-end'} alignItems={'flex-start'}>\r\n                        <Typography variant=\"p\" sx={{ mt: 1, fontWeight: 500 }}>\r\n                            Type:\r\n                        </Typography>\r\n                        <SelectField\r\n                            size={'small'}\r\n                            newLabel={'Select Type'}\r\n                            fullWidth={true}\r\n                            options={[{ id: 'demographic', name: 'Demographic' }, { id: 'past_data', name: 'Past Data' }]}\r\n                            selected={type}\r\n                            onSelect={(value) => {\r\n                                setType(value)\r\n                                getData(value)\r\n\r\n                            }}\r\n                        // error={errors2?.type?.message}\r\n                        // register={register2(\"type\", {\r\n                        //     required: 'Please select type.',\r\n                        // })}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={3} sm={3} display={'flex'} gap={1} justifyContent={'flex-end'} alignItems={'flex-start'}>\r\n                       <PrimaryButton  onClick={()=> navigate('/create-question')} title={\"Create\"} />\r\n                    </Grid>\r\n                </Grid>\r\n                <DataTable data={data} columns={columns} />\r\n\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppointmentQuestions;\r\n"
        }
    ]
}